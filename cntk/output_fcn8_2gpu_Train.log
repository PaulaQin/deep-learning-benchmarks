-------------------------------------------------------------------
Build info: 

		Built time: Sep 27 2016 14:05:01
		Last modified date: Tue Sep 27 07:19:56 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.1
		Build Branch: HEAD
		Build SHA1: 2e4a773398b5ee84e1695abe73eb831c3cca1e36
		Built by philly on 9ab719fcc26d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12205 MB
		Device[1]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[2]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[3]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
-------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: fcn8.cntk:command=Train
configparameters: fcn8.cntk:configName=fcn8_2gpu
configparameters: fcn8.cntk:DataDir=fcn
configparameters: fcn8.cntk:deviceId=Auto
configparameters: fcn8.cntk:epochSize=327680
configparameters: fcn8.cntk:featureDim=512
configparameters: fcn8.cntk:hiddenDim=2048
configparameters: fcn8.cntk:initOnCPUOnly=true
configparameters: fcn8.cntk:labelDim=1000
configparameters: fcn8.cntk:makeMode=false
configparameters: fcn8.cntk:maxEpochs=2
configparameters: fcn8.cntk:minibatchSize=8192
configparameters: fcn8.cntk:ModelDir=./Output/fcn8_2gpu
configparameters: fcn8.cntk:parallelTrain=true
configparameters: fcn8.cntk:precision=float
configparameters: fcn8.cntk:prefetch=true
configparameters: fcn8.cntk:reader=[
    readerType=UCIFastReader
    file=fcn/data26752.txt
    features=[
        dim=512
        start=1
    ]
    labels=[
        dim=1
        start=0
        labelDim=1000
        labelMappingFile=fcn/labelmap26752.txt
    ]
]

configparameters: fcn8.cntk:stderr=./output_fcn8_2gpu_Train.log
configparameters: fcn8.cntk:traceLevel=1
configparameters: fcn8.cntk:Train=[
    action=train
    modelPath=./Output/fcn8_2gpu/fc26752l6
    deviceId=Auto
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=512:2048:2048:2048:2048:2048:2048:1000
        initOnCPUOnly=true
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=false
        initValueScale=1.0
        uniformInit=true
        needPrior=false
    ]
    SGD=[
        epochSize=327680
        minibatchSize=8192
        maxEpochs=2
        learningRatesPerMB=0.01
        numMBsToShowResult=1
        momentumPerSample=0
        dropoutRate=0.0
        ParallelTrain=[
            parallelizationMethod=DataParallelSGD
            distributedMBReading=true
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=1
            ]
        ]
        gradUpdateType=None
        normWithAveMultiplier=true
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: fcn8.cntk:WorkDir=.
Commands: Train
precision = "float"

##############################################################################
#                                                                            #
# Train command (train action)                                               #
#                                                                            #
##############################################################################


Creating virgin network.
SimpleNetworkBuilder Using GPU 1
SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4
********** DEPRECATED **********
UCIFastReader is no longer actively maintained.
It is known to have defects, proceed with caution (better yet, switch to CNTKTextFormatReader)!
For more details please see https://github.com/Microsoft/CNTK/wiki 
Reading UCI file fcn/data26752.txt

Model has 39 nodes. Using GPU 1.

Training criterion:   CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
Evaluation criterion: EvalClassificationError = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 74 matrices, 50 are shared as 20, and 24 are not shared.

	{ H1 : [2048 x 1 x *]
	  W0*features : [2048 x *] (gradient) }
	{ W0*features+B0 : [2048 x 1 x *] (gradient)
	  W1*H1 : [2048 x 1 x *] }
	{ W0 : [2048 x 512] (gradient)
	  W0*features+B0 : [2048 x 1 x *] }
	{ W1 : [2048 x 2048] (gradient)
	  W1*H1+B1 : [2048 x 1 x *] }
	{ H2 : [2048 x 1 x *]
	  W1*H1 : [2048 x 1 x *] (gradient) }
	{ B0 : [2048 x 1] (gradient)
	  H1 : [2048 x 1 x *] (gradient)
	  W1*H1+B1 : [2048 x 1 x *] (gradient)
	  W2*H2 : [2048 x 1 x *] }
	{ W2 : [2048 x 2048] (gradient)
	  W2*H2+B2 : [2048 x 1 x *] }
	{ H3 : [2048 x 1 x *]
	  W2*H2 : [2048 x 1 x *] (gradient) }
	{ B1 : [2048 x 1] (gradient)
	  H2 : [2048 x 1 x *] (gradient)
	  W2*H2+B2 : [2048 x 1 x *] (gradient)
	  W3*H3 : [2048 x 1 x *] }
	{ W3 : [2048 x 2048] (gradient)
	  W3*H3+B3 : [2048 x 1 x *] }
	{ H4 : [2048 x 1 x *]
	  W3*H3 : [2048 x 1 x *] (gradient) }
	{ B2 : [2048 x 1] (gradient)
	  H3 : [2048 x 1 x *] (gradient)
	  W3*H3+B3 : [2048 x 1 x *] (gradient)
	  W4*H4 : [2048 x 1 x *] }
	{ W4 : [2048 x 2048] (gradient)
	  W4*H4+B4 : [2048 x 1 x *] }
	{ H5 : [2048 x 1 x *]
	  W4*H4 : [2048 x 1 x *] (gradient) }
	{ B3 : [2048 x 1] (gradient)
	  H4 : [2048 x 1 x *] (gradient)
	  W4*H4+B4 : [2048 x 1 x *] (gradient)
	  W5*H5 : [2048 x 1 x *] }
	{ W5 : [2048 x 2048] (gradient)
	  W5*H5+B5 : [2048 x 1 x *] }
	{ H6 : [2048 x 1 x *]
	  W5*H5 : [2048 x 1 x *] (gradient) }
	{ B4 : [2048 x 1] (gradient)
	  H5 : [2048 x 1 x *] (gradient)
	  W5*H5+B5 : [2048 x 1 x *] (gradient)
	  W6*H5 : [1000 x 1 x *] }
	{ HLast : [1000 x 1 x *] (gradient)
	  W6 : [1000 x 2048] (gradient) }
	{ B5 : [2048 x 1] (gradient)
	  H6 : [2048 x 1 x *] (gradient) }


Training 24081384 parameters in 14 out of 14 parameter tensors and 35 nodes with gradient:

	Node 'B0' (LearnableParameter operation) : [2048 x 1]
	Node 'B1' (LearnableParameter operation) : [2048 x 1]
	Node 'B2' (LearnableParameter operation) : [2048 x 1]
	Node 'B3' (LearnableParameter operation) : [2048 x 1]
	Node 'B4' (LearnableParameter operation) : [2048 x 1]
	Node 'B5' (LearnableParameter operation) : [2048 x 1]
	Node 'B6' (LearnableParameter operation) : [1000 x 1]
	Node 'W0' (LearnableParameter operation) : [2048 x 512]
	Node 'W1' (LearnableParameter operation) : [2048 x 2048]
	Node 'W2' (LearnableParameter operation) : [2048 x 2048]
	Node 'W3' (LearnableParameter operation) : [2048 x 2048]
	Node 'W4' (LearnableParameter operation) : [2048 x 2048]
	Node 'W5' (LearnableParameter operation) : [2048 x 2048]
	Node 'W6' (LearnableParameter operation) : [1000 x 2048]

Initializing dataParallelSGD for 1-bit quantization.
No PreCompute nodes found, or all already computed. Skipping pre-computation step.

Starting Epoch 1: learning rate per sample = 0.000001  effective momentum = 0.000000  momentum as time constant = 0.0 samples
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 327680 records found.
starting epoch 1 at record count 0, and file position 0
already there from last epoch

Starting minibatch loop, DataParallelSGD training (myRank = 0, numNodes = 2, numGradientBits = 1), distributed reading is ENABLED.
RandomOrdering: 64298 retries for 327680 elements (19.6%) to ensure window condition
RandomOrdering: recached sequence for seed 0: 155231, 44603, ...
 Epoch[ 1 of 2]-Minibatch[   1-   1, 2.50%]: CrossEntropyWithSoftmax = 7.13544774 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 9.7049s; samplesPerSecond = 844.1
 Epoch[ 1 of 2]-Minibatch[   2-   2, 5.00%]: CrossEntropyWithSoftmax = 7.13936424 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1398s; samplesPerSecond = 58614.8
 Epoch[ 1 of 2]-Minibatch[   3-   3, 7.50%]: CrossEntropyWithSoftmax = 7.15454793 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1329s; samplesPerSecond = 61632.4
 Epoch[ 1 of 2]-Minibatch[   4-   4, 10.00%]: CrossEntropyWithSoftmax = 7.13194084 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1287s; samplesPerSecond = 63666.2
 Epoch[ 1 of 2]-Minibatch[   5-   5, 12.50%]: CrossEntropyWithSoftmax = 7.12570715 * 8192; EvalClassificationError = 0.99829102 * 8192; time = 0.1308s; samplesPerSecond = 62623.3
 Epoch[ 1 of 2]-Minibatch[   6-   6, 15.00%]: CrossEntropyWithSoftmax = 7.12196708 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.1301s; samplesPerSecond = 62966.9
 Epoch[ 1 of 2]-Minibatch[   7-   7, 17.50%]: CrossEntropyWithSoftmax = 7.12385654 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1304s; samplesPerSecond = 62840.9
 Epoch[ 1 of 2]-Minibatch[   8-   8, 20.00%]: CrossEntropyWithSoftmax = 7.12535095 * 8192; EvalClassificationError = 0.99865723 * 8192; time = 0.1302s; samplesPerSecond = 62896.8
 Epoch[ 1 of 2]-Minibatch[   9-   9, 22.50%]: CrossEntropyWithSoftmax = 7.11377406 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1307s; samplesPerSecond = 62698.0
 Epoch[ 1 of 2]-Minibatch[  10-  10, 25.00%]: CrossEntropyWithSoftmax = 7.10587573 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1303s; samplesPerSecond = 62852.0
 Epoch[ 1 of 2]-Minibatch[  11-  11, 27.50%]: CrossEntropyWithSoftmax = 7.10850835 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1303s; samplesPerSecond = 62881.9
 Epoch[ 1 of 2]-Minibatch[  12-  12, 30.00%]: CrossEntropyWithSoftmax = 7.11375284 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1303s; samplesPerSecond = 62860.7
 Epoch[ 1 of 2]-Minibatch[  13-  13, 32.50%]: CrossEntropyWithSoftmax = 7.10511303 * 8192; EvalClassificationError = 0.99829102 * 8192; time = 0.1302s; samplesPerSecond = 62899.7
 Epoch[ 1 of 2]-Minibatch[  14-  14, 35.00%]: CrossEntropyWithSoftmax = 7.11806226 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.1301s; samplesPerSecond = 62972.3
 Epoch[ 1 of 2]-Minibatch[  15-  15, 37.50%]: CrossEntropyWithSoftmax = 7.11612391 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1306s; samplesPerSecond = 62726.8
 Epoch[ 1 of 2]-Minibatch[  16-  16, 40.00%]: CrossEntropyWithSoftmax = 7.09996700 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1300s; samplesPerSecond = 63004.7
 Epoch[ 1 of 2]-Minibatch[  17-  17, 42.50%]: CrossEntropyWithSoftmax = 7.10543895 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1305s; samplesPerSecond = 62790.8
 Epoch[ 1 of 2]-Minibatch[  18-  18, 45.00%]: CrossEntropyWithSoftmax = 7.09766340 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.1306s; samplesPerSecond = 62703.8
 Epoch[ 1 of 2]-Minibatch[  19-  19, 47.50%]: CrossEntropyWithSoftmax = 7.09160161 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1300s; samplesPerSecond = 63010.1
 Epoch[ 1 of 2]-Minibatch[  20-  20, 50.00%]: CrossEntropyWithSoftmax = 7.08515453 * 8192; EvalClassificationError = 0.99963379 * 8192; time = 0.1300s; samplesPerSecond = 63021.7
 Epoch[ 1 of 2]-Minibatch[  21-  21, 52.50%]: CrossEntropyWithSoftmax = 7.08599138 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.1303s; samplesPerSecond = 62856.8
 Epoch[ 1 of 2]-Minibatch[  22-  22, 55.00%]: CrossEntropyWithSoftmax = 7.08066225 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.1304s; samplesPerSecond = 62819.2
 Epoch[ 1 of 2]-Minibatch[  23-  23, 57.50%]: CrossEntropyWithSoftmax = 7.08655906 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.1304s; samplesPerSecond = 62841.4
 Epoch[ 1 of 2]-Minibatch[  24-  24, 60.00%]: CrossEntropyWithSoftmax = 7.08254266 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.1306s; samplesPerSecond = 62718.7
 Epoch[ 1 of 2]-Minibatch[  25-  25, 62.50%]: CrossEntropyWithSoftmax = 7.08074236 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1301s; samplesPerSecond = 62961.1
 Epoch[ 1 of 2]-Minibatch[  26-  26, 65.00%]: CrossEntropyWithSoftmax = 7.06436348 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1302s; samplesPerSecond = 62914.7
 Epoch[ 1 of 2]-Minibatch[  27-  27, 67.50%]: CrossEntropyWithSoftmax = 7.06426144 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1301s; samplesPerSecond = 62983.4
 Epoch[ 1 of 2]-Minibatch[  28-  28, 70.00%]: CrossEntropyWithSoftmax = 7.06957006 * 8192; EvalClassificationError = 0.99865723 * 8192; time = 0.1307s; samplesPerSecond = 62688.4
 Epoch[ 1 of 2]-Minibatch[  29-  29, 72.50%]: CrossEntropyWithSoftmax = 7.06170225 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1301s; samplesPerSecond = 62975.7
 Epoch[ 1 of 2]-Minibatch[  30-  30, 75.00%]: CrossEntropyWithSoftmax = 7.07365799 * 8192; EvalClassificationError = 0.99755859 * 8192; time = 0.1300s; samplesPerSecond = 63031.9
 Epoch[ 1 of 2]-Minibatch[  31-  31, 77.50%]: CrossEntropyWithSoftmax = 7.06387186 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1303s; samplesPerSecond = 62867.9
 Epoch[ 1 of 2]-Minibatch[  32-  32, 80.00%]: CrossEntropyWithSoftmax = 7.06288004 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.1304s; samplesPerSecond = 62827.4
 Epoch[ 1 of 2]-Minibatch[  33-  33, 82.50%]: CrossEntropyWithSoftmax = 7.06441498 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1306s; samplesPerSecond = 62710.5
 Epoch[ 1 of 2]-Minibatch[  34-  34, 85.00%]: CrossEntropyWithSoftmax = 7.06083274 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1304s; samplesPerSecond = 62833.7
 Epoch[ 1 of 2]-Minibatch[  35-  35, 87.50%]: CrossEntropyWithSoftmax = 7.05782223 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1304s; samplesPerSecond = 62843.8
 Epoch[ 1 of 2]-Minibatch[  36-  36, 90.00%]: CrossEntropyWithSoftmax = 7.06061220 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.1303s; samplesPerSecond = 62862.1
 Epoch[ 1 of 2]-Minibatch[  37-  37, 92.50%]: CrossEntropyWithSoftmax = 7.05585408 * 8192; EvalClassificationError = 0.99951172 * 8192; time = 0.1307s; samplesPerSecond = 62655.4
 Epoch[ 1 of 2]-Minibatch[  38-  38, 95.00%]: CrossEntropyWithSoftmax = 7.05636477 * 8192; EvalClassificationError = 0.99853516 * 8192; time = 0.1309s; samplesPerSecond = 62582.6
 Epoch[ 1 of 2]-Minibatch[  39-  39, 97.50%]: CrossEntropyWithSoftmax = 7.06546259 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1305s; samplesPerSecond = 62788.9
 Epoch[ 1 of 2]-Minibatch[  40-  40, 100.00%]: CrossEntropyWithSoftmax = 7.04844594 * 8192; EvalClassificationError = 0.99951172 * 8192; time = 0.1281s; samplesPerSecond = 63968.0
 Epoch[ 1 of 2]-Minibatch[  41-  41, 102.50%]: CrossEntropyWithSoftmax = 0.00000000 * 0; EvalClassificationError = 0.00000000 * 0; time = 0.0084s; samplesPerSecond = 0.0
Finished Epoch[ 1 of 2]: [Training] CrossEntropyWithSoftmax = 7.09164581 * 327680; EvalClassificationError = 0.99896240 * 327680; totalSamplesSeen = 327680; learningRatePerSample = 1.2207031e-06; epochTime=21.6552s
SGD: Saving checkpoint model './Output/fcn8_2gpu/fc26752l6.1'

Starting Epoch 2: learning rate per sample = 0.000001  effective momentum = 0.000000  momentum as time constant = 0.0 samples
starting epoch 2 at record count 327680, and file position 0
already there from last epoch

Starting minibatch loop, DataParallelSGD training (myRank = 0, numNodes = 2, numGradientBits = 1), distributed reading is ENABLED.
RandomOrdering: 64298 retries for 327680 elements (19.6%) to ensure window condition
RandomOrdering: recached sequence for seed 1: 155231, 44603, ...
 Epoch[ 2 of 2]-Minibatch[   1-   1, 2.50%]: CrossEntropyWithSoftmax = 7.04519367 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1537s; samplesPerSecond = 53282.0
 Epoch[ 2 of 2]-Minibatch[   2-   2, 5.00%]: CrossEntropyWithSoftmax = 7.04783726 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1303s; samplesPerSecond = 62866.4
 Epoch[ 2 of 2]-Minibatch[   3-   3, 7.50%]: CrossEntropyWithSoftmax = 7.06089973 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1300s; samplesPerSecond = 63006.7
 Epoch[ 2 of 2]-Minibatch[   4-   4, 10.00%]: CrossEntropyWithSoftmax = 7.04350805 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1303s; samplesPerSecond = 62855.3
 Epoch[ 2 of 2]-Minibatch[   5-   5, 12.50%]: CrossEntropyWithSoftmax = 7.03883553 * 8192; EvalClassificationError = 0.99829102 * 8192; time = 0.1301s; samplesPerSecond = 62972.8
 Epoch[ 2 of 2]-Minibatch[   6-   6, 15.00%]: CrossEntropyWithSoftmax = 7.03563428 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.1308s; samplesPerSecond = 62648.2
 Epoch[ 2 of 2]-Minibatch[   7-   7, 17.50%]: CrossEntropyWithSoftmax = 7.03831005 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1307s; samplesPerSecond = 62660.1
 Epoch[ 2 of 2]-Minibatch[   8-   8, 20.00%]: CrossEntropyWithSoftmax = 7.04071927 * 8192; EvalClassificationError = 0.99865723 * 8192; time = 0.1306s; samplesPerSecond = 62747.5
 Epoch[ 2 of 2]-Minibatch[   9-   9, 22.50%]: CrossEntropyWithSoftmax = 7.03282881 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1304s; samplesPerSecond = 62824.5
 Epoch[ 2 of 2]-Minibatch[  10-  10, 25.00%]: CrossEntropyWithSoftmax = 7.02602291 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1305s; samplesPerSecond = 62776.8
 Epoch[ 2 of 2]-Minibatch[  11-  11, 27.50%]: CrossEntropyWithSoftmax = 7.02855730 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1300s; samplesPerSecond = 63039.1
 Epoch[ 2 of 2]-Minibatch[  12-  12, 30.00%]: CrossEntropyWithSoftmax = 7.03344822 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1306s; samplesPerSecond = 62741.3
 Epoch[ 2 of 2]-Minibatch[  13-  13, 32.50%]: CrossEntropyWithSoftmax = 7.02774525 * 8192; EvalClassificationError = 0.99829102 * 8192; time = 0.1303s; samplesPerSecond = 62883.3
 Epoch[ 2 of 2]-Minibatch[  14-  14, 35.00%]: CrossEntropyWithSoftmax = 7.03907871 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.1306s; samplesPerSecond = 62708.6
 Epoch[ 2 of 2]-Minibatch[  15-  15, 37.50%]: CrossEntropyWithSoftmax = 7.03823376 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1305s; samplesPerSecond = 62775.4
 Epoch[ 2 of 2]-Minibatch[  16-  16, 40.00%]: CrossEntropyWithSoftmax = 7.02555728 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1303s; samplesPerSecond = 62892.5
 Epoch[ 2 of 2]-Minibatch[  17-  17, 42.50%]: CrossEntropyWithSoftmax = 7.03080344 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1301s; samplesPerSecond = 62988.7
 Epoch[ 2 of 2]-Minibatch[  18-  18, 45.00%]: CrossEntropyWithSoftmax = 7.02458096 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.1307s; samplesPerSecond = 62691.3
 Epoch[ 2 of 2]-Minibatch[  19-  19, 47.50%]: CrossEntropyWithSoftmax = 7.02099276 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1309s; samplesPerSecond = 62569.7
 Epoch[ 2 of 2]-Minibatch[  20-  20, 50.00%]: CrossEntropyWithSoftmax = 7.01702023 * 8192; EvalClassificationError = 0.99963379 * 8192; time = 0.1304s; samplesPerSecond = 62835.1
 Epoch[ 2 of 2]-Minibatch[  21-  21, 52.50%]: CrossEntropyWithSoftmax = 7.01805949 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.1307s; samplesPerSecond = 62681.2
 Epoch[ 2 of 2]-Minibatch[  22-  22, 55.00%]: CrossEntropyWithSoftmax = 7.01382327 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.1301s; samplesPerSecond = 62946.1
 Epoch[ 2 of 2]-Minibatch[  23-  23, 57.50%]: CrossEntropyWithSoftmax = 7.01957917 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.1304s; samplesPerSecond = 62802.8
 Epoch[ 2 of 2]-Minibatch[  24-  24, 60.00%]: CrossEntropyWithSoftmax = 7.01682448 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.1305s; samplesPerSecond = 62792.2
 Epoch[ 2 of 2]-Minibatch[  25-  25, 62.50%]: CrossEntropyWithSoftmax = 7.01604605 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1306s; samplesPerSecond = 62730.7
 Epoch[ 2 of 2]-Minibatch[  26-  26, 65.00%]: CrossEntropyWithSoftmax = 7.00353026 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1301s; samplesPerSecond = 62983.4
 Epoch[ 2 of 2]-Minibatch[  27-  27, 67.50%]: CrossEntropyWithSoftmax = 7.00466537 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1302s; samplesPerSecond = 62897.8
 Epoch[ 2 of 2]-Minibatch[  28-  28, 70.00%]: CrossEntropyWithSoftmax = 7.00853705 * 8192; EvalClassificationError = 0.99865723 * 8192; time = 0.1305s; samplesPerSecond = 62761.9
 Epoch[ 2 of 2]-Minibatch[  29-  29, 72.50%]: CrossEntropyWithSoftmax = 7.00289083 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1305s; samplesPerSecond = 62756.2
 Epoch[ 2 of 2]-Minibatch[  30-  30, 75.00%]: CrossEntropyWithSoftmax = 7.01241398 * 8192; EvalClassificationError = 0.99755859 * 8192; time = 0.1301s; samplesPerSecond = 62961.1
 Epoch[ 2 of 2]-Minibatch[  31-  31, 77.50%]: CrossEntropyWithSoftmax = 7.00581861 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1302s; samplesPerSecond = 62905.5
 Epoch[ 2 of 2]-Minibatch[  32-  32, 80.00%]: CrossEntropyWithSoftmax = 7.00573587 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.1302s; samplesPerSecond = 62919.6
 Epoch[ 2 of 2]-Minibatch[  33-  33, 82.50%]: CrossEntropyWithSoftmax = 7.00735784 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1303s; samplesPerSecond = 62881.4
 Epoch[ 2 of 2]-Minibatch[  34-  34, 85.00%]: CrossEntropyWithSoftmax = 7.00493431 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1302s; samplesPerSecond = 62900.7
 Epoch[ 2 of 2]-Minibatch[  35-  35, 87.50%]: CrossEntropyWithSoftmax = 7.00305247 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.1301s; samplesPerSecond = 62959.7
 Epoch[ 2 of 2]-Minibatch[  36-  36, 90.00%]: CrossEntropyWithSoftmax = 7.00538206 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.1300s; samplesPerSecond = 63002.8
 Epoch[ 2 of 2]-Minibatch[  37-  37, 92.50%]: CrossEntropyWithSoftmax = 7.00210977 * 8192; EvalClassificationError = 0.99951172 * 8192; time = 0.1306s; samplesPerSecond = 62719.6
 Epoch[ 2 of 2]-Minibatch[  38-  38, 95.00%]: CrossEntropyWithSoftmax = 7.00297451 * 8192; EvalClassificationError = 0.99853516 * 8192; time = 0.1306s; samplesPerSecond = 62741.7
 Epoch[ 2 of 2]-Minibatch[  39-  39, 97.50%]: CrossEntropyWithSoftmax = 7.01151586 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.1306s; samplesPerSecond = 62728.8
 Epoch[ 2 of 2]-Minibatch[  40-  40, 100.00%]: CrossEntropyWithSoftmax = 6.99721575 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.1282s; samplesPerSecond = 63894.2
 Epoch[ 2 of 2]-Minibatch[  41-  41, 102.50%]: CrossEntropyWithSoftmax = 0.00000000 * 0; EvalClassificationError = 0.00000000 * 0; time = 0.0084s; samplesPerSecond = 0.0
Finished Epoch[ 2 of 2]: [Training] CrossEntropyWithSoftmax = 7.02145686 * 327680; EvalClassificationError = 0.99895325 * 327680; totalSamplesSeen = 655360; learningRatePerSample = 1.2207031e-06; epochTime=5.24686s
SGD: Saving checkpoint model './Output/fcn8_2gpu/fc26752l6'

Action "train" complete.

COMPLETED.
~MPIWrapper
