-------------------------------------------------------------------
Build info: 

		Built time: Aug 30 2016 14:07:49
		Last modified date: Mon Aug 29 18:55:53 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.1
		Build Branch: HEAD
		Build SHA1: 2f9c73cab134c45ab3ddcf1ca6873cc4d18dec34
		Built by philly on 17068eac0c7b
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12204 MB
		Device[1]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[2]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[3]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
-------------------------------------------------------------------

Running on localhost at 2016/09/22 09:35:26
Command line: 
cntk/cntk/bin/cntk  configFile=rnn/PennTreebank/Config/rnn.cntk  configName=lstm64  deviceId=0  minibatchSize=8192  epochSize=819200  DataDir=rnn/PennTreebank/Data  ConfigDir=rnn/PennTreebank/Config  trainFile=ptb.train.64.ctf


Configuration After Processing and Variable Resolution:

configparameters: rnn.cntk:command=train
configparameters: rnn.cntk:ConfigDir=rnn/PennTreebank/Config
configparameters: rnn.cntk:configName=lstm64
configparameters: rnn.cntk:confVocabSize=10000
configparameters: rnn.cntk:DataDir=rnn/PennTreebank/Data
configparameters: rnn.cntk:deviceId=0
configparameters: rnn.cntk:epochSize=819200
configparameters: rnn.cntk:maxEpochs=3
configparameters: rnn.cntk:maxTempMemSizeInSamplesForCNN=1
configparameters: rnn.cntk:minibatchSize=8192
configparameters: rnn.cntk:ModelDir=./Output/lstm64
configparameters: rnn.cntk:modelPath=./Output/lstm64/lstm64.dnn
configparameters: rnn.cntk:OutputDir=./Output
configparameters: rnn.cntk:precision=float
configparameters: rnn.cntk:RootDir=.
configparameters: rnn.cntk:shareNodeValueMatrices=true
configparameters: rnn.cntk:stderr=./output_lstm64
configparameters: rnn.cntk:traceLevel=1
configparameters: rnn.cntk:train=[
    action = "train"
    traceLevel = 1
epochSize = 0               
    BrainScriptNetworkBuilder = [
        inputDim = 10000
        labelDim = 10000
        embedDim = 256
        hiddenDim = (256:256)
        model(x) = [
            E = ParameterTensor (embedDim:inputDim)
            e = E * x
            h = RecurrentLSTMLayerStack (hiddenDim, cellShapes=hiddenDim, allowOptimizedEngine = true)(e)
            W = ParameterTensor (labelDim:hiddenDim[1]) 
            b = ParameterTensor (labelDim,init='fixedValue',value=0);
            z = W * h + b
        ].z
        words  = if deviceId >= 0 then SparseInput (inputDim) else Input (inputDim)
        labels = Input (inputDim)
        z = model(words)
        crossEntropy = CrossEntropyWithSoftmax(labels, z)
        featureNodes    = (words)
        labelNodes      = (labels)
        criterionNodes  = (crossEntropy)
        evaluationNodes = (crossEntropy)
        outputNodes     = (z)
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "rnn/PennTreebank/Data/ptb.train.64.ctf"
        randomize = false
        traceLevel = 0
        input = [
            words  = [ alias = "S0"; dim = 10000; format = "sparse" ]
            labels = [ alias = "S1"; dim = 10000; format = "sparse" ]
        ]
    ]
    SGD = [
        epochSize=819200
        minibatchSize = 8192 
        learningRatesPerSample = 0.0001
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 3 
        numMBsToShowResult = 1
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
]

configparameters: rnn.cntk:trainFile=ptb.train.64.ctf
Commands: train
Precision = "float"
CNTKModelPath: ./Output/lstm64/lstm64.dnn
CNTKCommandTrainInfo: train : 3
CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

##############################################################################
#                                                                            #
# Action "train"                                                             #
#                                                                            #
##############################################################################

CNTKCommandTrainBegin: train

Creating virgin network.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[10000 x 256] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[10000 x 256] <- uniform(seed=1, init dims=[10000 x 256], range=0.050000*1.000000, onCPU=true).
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as heNormal later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as heNormal later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[256 x 10000] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[256 x 10000] <- uniform(seed=4, init dims=[256 x 10000], range=0.050000*1.000000, onCPU=true).
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- heNormal(seed=5, init dims=[1024 x 256], range=0.088388*1.000000, onCPU=true).
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- heNormal(seed=6, init dims=[1024 x 256], range=0.088388*1.000000, onCPU=true).
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[10000] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[10000] <- 0.000000.

Post-processing network...

2 roots:
	crossEntropy = CrossEntropyWithSoftmax()
	z = Plus()

Loop[0] --> Loop_z.h.x.lstmState._.ht -> 17 nodes

	z.h.x.prevState.h	z.h.x.lstmState._.proj4.PlusArgs[1]	z.h.x.lstmState._.proj4
	z.h.x.lstmState._.otProj	z.h.x.lstmState._.ot	z.h.x.lstmState._.ftProj
	z.h.x.lstmState._.ft	z.h.x.prevState.c	z.h.x.lstmState._.bft
	z.h.x.lstmState._.itProj	z.h.x.lstmState._.it	z.h.x.lstmState._.bitProj
	z.h.x.lstmState._.bit.ElementTimesArgs[1]	z.h.x.lstmState._.bit	z.h.x.lstmState._.ct
	z.h.x.lstmState._.ht.ElementTimesArgs[1]	z.h.x.lstmState._.ht

Loop[1] --> Loop_z.h.lstmState._.ht -> 17 nodes

	z.h.prevState.h	z.h.lstmState._.proj4.PlusArgs[1]	z.h.lstmState._.proj4
	z.h.lstmState._.otProj	z.h.lstmState._.ot	z.h.lstmState._.ftProj
	z.h.lstmState._.ft	z.h.prevState.c	z.h.lstmState._.bft
	z.h.lstmState._.itProj	z.h.lstmState._.it	z.h.lstmState._.bitProj
	z.h.lstmState._.bit.ElementTimesArgs[1]	z.h.lstmState._.bit	z.h.lstmState._.ct
	z.h.lstmState._.ht.ElementTimesArgs[1]	z.h.lstmState._.ht

Validating network. 53 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10000 x *]
Validating --> z.W = LearnableParameter() :  -> [10000 x 256]
Validating --> z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> _z.E = LearnableParameter() :  -> [256 x 10000]
Validating --> words = SparseInputValue() :  -> [10000 x *]
Validating --> z.e = Times (_z.E, words) : [256 x 10000], [10000 x *] -> [256 x *]
Node 'z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- heNormal(seed=3, init dims=[1024 x 256], range=0.088388*1.000000, onCPU=true).
Validating --> z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1] = Times (z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.e) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[0] = Plus (z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[0], z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1]) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[1] = Times (z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0], z.h.x.prevState.h) : [1024 x 256], [0] -> [1024]
Validating --> z.h.x.lstmState._.proj4 = Plus (z.h.x.lstmState._.proj4.PlusArgs[0], z.h.x.lstmState._.proj4.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.h.x.lstmState._.otProj = Slice (z.h.x.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ot = Sigmoid (z.h.x.lstmState._.otProj) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ftProj = Slice (z.h.x.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ft = Sigmoid (z.h.x.lstmState._.ftProj) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.bft = ElementTimes (z.h.x.lstmState._.ft, z.h.x.prevState.c) : [256 x *], [0] -> [256 x *]
Validating --> z.h.x.lstmState._.itProj = Slice (z.h.x.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.it = Sigmoid (z.h.x.lstmState._.itProj) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.bitProj = Slice (z.h.x.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.bit.ElementTimesArgs[1] = Tanh (z.h.x.lstmState._.bitProj) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.bit = ElementTimes (z.h.x.lstmState._.it, z.h.x.lstmState._.bit.ElementTimesArgs[1]) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ct = Plus (z.h.x.lstmState._.bft, z.h.x.lstmState._.bit) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ht.ElementTimesArgs[1] = Tanh (z.h.x.lstmState._.ct) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ht = ElementTimes (z.h.x.lstmState._.ot, z.h.x.lstmState._.ht.ElementTimesArgs[1]) : [256 x *], [256 x *] -> [256 x *]
Node 'z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- heNormal(seed=2, init dims=[1024 x 256], range=0.088388*1.000000, onCPU=true).
Validating --> z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1] = Times (z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.h.x.lstmState._.ht) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.h.lstmState._.proj4.PlusArgs[0] = Plus (z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[0], z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1]) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.h.lstmState._.proj4.PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.h.lstmState._.proj4.PlusArgs[1] = Times (z.h.lstmState._.proj4.PlusArgs[1].TimesArgs[0], z.h.prevState.h) : [1024 x 256], [0] -> [1024]
Validating --> z.h.lstmState._.proj4 = Plus (z.h.lstmState._.proj4.PlusArgs[0], z.h.lstmState._.proj4.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.h.lstmState._.otProj = Slice (z.h.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.lstmState._.ot = Sigmoid (z.h.lstmState._.otProj) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.ftProj = Slice (z.h.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.lstmState._.ft = Sigmoid (z.h.lstmState._.ftProj) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.bft = ElementTimes (z.h.lstmState._.ft, z.h.prevState.c) : [256 x *], [0] -> [256 x *]
Validating --> z.h.lstmState._.itProj = Slice (z.h.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.lstmState._.it = Sigmoid (z.h.lstmState._.itProj) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.bitProj = Slice (z.h.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.lstmState._.bit.ElementTimesArgs[1] = Tanh (z.h.lstmState._.bitProj) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.bit = ElementTimes (z.h.lstmState._.it, z.h.lstmState._.bit.ElementTimesArgs[1]) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.ct = Plus (z.h.lstmState._.bft, z.h.lstmState._.bit) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.ht.ElementTimesArgs[1] = Tanh (z.h.lstmState._.ct) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.ht = ElementTimes (z.h.lstmState._.ot, z.h.lstmState._.ht.ElementTimesArgs[1]) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.z.PlusArgs[0] = Times (z.W, z.h.lstmState._.ht) : [10000 x 256], [256 x *] -> [10000 x *]
Validating --> z.b = LearnableParameter() :  -> [10000]
Validating --> z = Plus (z.z.PlusArgs[0], z.b) : [10000 x *], [10000] -> [10000 x *]
Validating --> crossEntropy = CrossEntropyWithSoftmax (labels, z) : [10000 x *], [10000 x *] -> [1]

Validating network. 42 nodes to process in pass 2.

Validating --> z.h.x.prevState.h = PastValue (z.h.x.lstmState._.ht) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[1] = Times (z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0], z.h.x.prevState.h) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.h.x.prevState.c = PastValue (z.h.x.lstmState._.ct) : [256 x *] -> [256 x *]
Validating --> z.h.prevState.h = PastValue (z.h.lstmState._.ht) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.proj4.PlusArgs[1] = Times (z.h.lstmState._.proj4.PlusArgs[1].TimesArgs[0], z.h.prevState.h) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.h.prevState.c = PastValue (z.h.lstmState._.ct) : [256 x *] -> [256 x *]

Validating network. 6 nodes to process in pass 3.


Validating network, final pass.



10 out of 53 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

Created model with 53 nodes on GPU 0.

Training criterion node(s):
	crossEntropy = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 104 matrices, 58 are shared as 26, and 46 are not shared.

	{ z.h.prevState.c : [256 x *]
	  z.h.x.lstmState._.proj4 : [1024 x *] (gradient) }
	{ z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[0] : [1024] (gradient)
	  z.h.x.prevState.h : [256 x *] }
	{ z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[0] : [1024] (gradient)
	  z.h.prevState.h : [256 x *] }
	{ z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1] : [1024 x *]
	  z.h.x.lstmState._.proj4.PlusArgs[1] : [1024 x *] }
	{ z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1] : [1024 x *]
	  z.h.lstmState._.proj4.PlusArgs[1] : [1024 x *]
	  z.h.x.lstmState._.proj4.PlusArgs[0] : [1024 x *] }
	{ z.h.lstmState._.proj4.PlusArgs[0] : [1024 x *]
	  z.z.PlusArgs[0] : [10000 x *] }
	{ z.h.lstmState._.ot : [256 x *]
	  z.h.x.lstmState._.bft : [256 x *] (gradient) }
	{ z.h.lstmState._.ft : [256 x *]
	  z.h.x.lstmState._.bit.ElementTimesArgs[1] : [256 x *] (gradient) }
	{ z.h.lstmState._.it : [256 x *]
	  z.h.x.lstmState._.ftProj : [256 x *] (gradient) }
	{ z.e : [256 x *] (gradient)
	  z.h.lstmState._.bit.ElementTimesArgs[1] : [256 x *]
	  z.h.x.lstmState._.proj4.PlusArgs[1] : [1024 x *] (gradient) }
	{ z : [10000 x *] (gradient)
	  z.W : [10000 x 256] (gradient) }
	{ z.h.lstmState._.ot : [256 x *] (gradient)
	  z.h.x.lstmState._.bit : [256 x *] (gradient)
	  z.z.PlusArgs[0] : [10000 x *] (gradient) }
	{ z.h.lstmState._.bft : [256 x *] (gradient)
	  z.h.x.lstmState._.ft : [256 x *] (gradient) }
	{ z.h.lstmState._.bit : [256 x *] (gradient)
	  z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1] : [1024 x *] (gradient)
	  z.h.x.prevState.h : [256 x *] (gradient) }
	{ z.h.lstmState._.it : [256 x *] (gradient)
	  z.h.x.lstmState._.otProj : [256 x *] (gradient) }
	{ z.h.lstmState._.bit.ElementTimesArgs[1] : [256 x *] (gradient)
	  z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient) }
	{ z.h.lstmState._.bitProj : [256 x *] (gradient)
	  z.h.x.lstmState._.proj4.PlusArgs[0] : [1024 x *] (gradient)
	  z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient) }
	{ z.h.lstmState._.proj4 : [1024 x *] (gradient)
	  z.h.x.lstmState._.ht.ElementTimesArgs[1] : [256 x *] (gradient) }
	{ z.h.lstmState._.itProj : [256 x *] (gradient)
	  z.h.x.prevState.c : [256 x *] (gradient) }
	{ z.h.lstmState._.ft : [256 x *] (gradient)
	  z.h.x.lstmState._.bitProj : [256 x *] (gradient) }
	{ z.h.prevState.c : [256 x *] (gradient)
	  z.h.x.lstmState._.itProj : [256 x *] (gradient) }
	{ z.h.lstmState._.ftProj : [256 x *] (gradient)
	  z.h.x.lstmState._.it : [256 x *] (gradient) }
	{ z.h.lstmState._.otProj : [256 x *] (gradient)
	  z.h.x.lstmState._.ct : [256 x *] (gradient) }
	{ z.h.lstmState._.proj4.PlusArgs[0] : [1024 x *] (gradient)
	  z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient) }
	{ z.h.lstmState._.proj4.PlusArgs[1] : [1024 x *] (gradient)
	  z.h.x.lstmState._.ht : [256 x *] (gradient) }
	{ z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1] : [1024 x *] (gradient)
	  z.h.prevState.h : [256 x *] (gradient)
	  z.h.x.lstmState._.ot : [256 x *] (gradient) }


Training 6180624 parameters in 9 out of 9 parameter tensors and 51 nodes with gradient:

	Node '_z.E' (LearnableParameter operation) : [256 x 10000]
	Node 'z.W' (LearnableParameter operation) : [10000 x 256]
	Node 'z.b' (LearnableParameter operation) : [10000]
	Node 'z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[0]' (LearnableParameter operation) : [1024]
	Node 'z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
	Node 'z.h.lstmState._.proj4.PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
	Node 'z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[0]' (LearnableParameter operation) : [1024]
	Node 'z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
	Node 'z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]

No PreCompute nodes found, or all already computed. Skipping pre-computation step.
Setting max temp memory size for Convolution operations to 1 samples.
WARNING: No Convolution operation found.

Starting Epoch 1: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 1 of 3]-Minibatch[   1-   1, 1.00%]: crossEntropy = 9.21026508 * 8191; time = 0.8398s; samplesPerSecond = 9754.0
 Epoch[ 1 of 3]-Minibatch[   2-   2, 2.00%]: crossEntropy = 9.19799042 * 8192; time = 0.1185s; samplesPerSecond = 69146.6
 Epoch[ 1 of 3]-Minibatch[   3-   3, 3.00%]: crossEntropy = 9.18588638 * 8192; time = 0.1176s; samplesPerSecond = 69638.0
 Epoch[ 1 of 3]-Minibatch[   4-   4, 4.00%]: crossEntropy = 9.17320633 * 8192; time = 0.1174s; samplesPerSecond = 69782.7
 Epoch[ 1 of 3]-Minibatch[   5-   5, 5.00%]: crossEntropy = 9.15832138 * 8192; time = 0.1176s; samplesPerSecond = 69665.2
 Epoch[ 1 of 3]-Minibatch[   6-   6, 6.00%]: crossEntropy = 9.14353180 * 8192; time = 0.1182s; samplesPerSecond = 69317.4
 Epoch[ 1 of 3]-Minibatch[   7-   7, 7.00%]: crossEntropy = 9.12596893 * 8192; time = 0.1183s; samplesPerSecond = 69240.1
 Epoch[ 1 of 3]-Minibatch[   8-   8, 8.00%]: crossEntropy = 9.10443878 * 8192; time = 0.1186s; samplesPerSecond = 69085.3
 Epoch[ 1 of 3]-Minibatch[   9-   9, 9.00%]: crossEntropy = 9.06936646 * 8192; time = 0.1177s; samplesPerSecond = 69574.7
 Epoch[ 1 of 3]-Minibatch[  10-  10, 10.00%]: crossEntropy = 9.01692963 * 8192; time = 0.1177s; samplesPerSecond = 69606.6
 Epoch[ 1 of 3]-Minibatch[  11-  11, 11.00%]: crossEntropy = 8.93015289 * 8192; time = 0.1192s; samplesPerSecond = 68710.4
 Epoch[ 1 of 3]-Minibatch[  12-  12, 12.00%]: crossEntropy = 8.77456665 * 8192; time = 0.1185s; samplesPerSecond = 69130.8
 Epoch[ 1 of 3]-Minibatch[  13-  13, 13.00%]: crossEntropy = 8.58611298 * 8192; time = 0.1178s; samplesPerSecond = 69544.0
 Epoch[ 1 of 3]-Minibatch[  14-  14, 14.00%]: crossEntropy = 8.34346771 * 8192; time = 0.1179s; samplesPerSecond = 69489.7
 Epoch[ 1 of 3]-Minibatch[  15-  15, 15.00%]: crossEntropy = 7.96102142 * 8192; time = 0.1192s; samplesPerSecond = 68732.9
 Epoch[ 1 of 3]-Minibatch[  16-  16, 16.00%]: crossEntropy = 7.87371826 * 8192; time = 0.1186s; samplesPerSecond = 69072.5
 Epoch[ 1 of 3]-Minibatch[  17-  17, 17.00%]: crossEntropy = 7.85375977 * 8192; time = 0.1185s; samplesPerSecond = 69112.1
 Epoch[ 1 of 3]-Minibatch[  18-  18, 18.00%]: crossEntropy = 7.61259460 * 8192; time = 0.1187s; samplesPerSecond = 69033.5
 Epoch[ 1 of 3]-Minibatch[  19-  19, 19.00%]: crossEntropy = 7.59329224 * 8192; time = 0.1188s; samplesPerSecond = 68967.3
 Epoch[ 1 of 3]-Minibatch[  20-  20, 20.00%]: crossEntropy = 7.57444763 * 8192; time = 0.1179s; samplesPerSecond = 69503.8
 Epoch[ 1 of 3]-Minibatch[  21-  21, 21.00%]: crossEntropy = 7.40328979 * 8192; time = 0.1179s; samplesPerSecond = 69491.5
 Epoch[ 1 of 3]-Minibatch[  22-  22, 22.00%]: crossEntropy = 7.46281433 * 8192; time = 0.1185s; samplesPerSecond = 69108.6
 Epoch[ 1 of 3]-Minibatch[  23-  23, 23.00%]: crossEntropy = 7.57362366 * 8192; time = 0.1179s; samplesPerSecond = 69475.0
 Epoch[ 1 of 3]-Minibatch[  24-  24, 24.00%]: crossEntropy = 7.47904968 * 8192; time = 0.1185s; samplesPerSecond = 69136.6
 Epoch[ 1 of 3]-Minibatch[  25-  25, 25.00%]: crossEntropy = 7.33457947 * 8192; time = 0.1186s; samplesPerSecond = 69072.5
 Epoch[ 1 of 3]-Minibatch[  26-  26, 26.00%]: crossEntropy = 7.36320496 * 8192; time = 0.1178s; samplesPerSecond = 69542.2
 Epoch[ 1 of 3]-Minibatch[  27-  27, 27.00%]: crossEntropy = 7.29493713 * 8192; time = 0.1187s; samplesPerSecond = 69037.0
 Epoch[ 1 of 3]-Minibatch[  28-  28, 28.00%]: crossEntropy = 7.25535583 * 8192; time = 0.1186s; samplesPerSecond = 69095.8
 Epoch[ 1 of 3]-Minibatch[  29-  29, 29.00%]: crossEntropy = 7.30099487 * 8192; time = 0.1187s; samplesPerSecond = 69037.0
 Epoch[ 1 of 3]-Minibatch[  30-  30, 30.00%]: crossEntropy = 7.18927002 * 8192; time = 0.1186s; samplesPerSecond = 69065.5
 Epoch[ 1 of 3]-Minibatch[  31-  31, 31.00%]: crossEntropy = 7.28356934 * 8192; time = 0.1186s; samplesPerSecond = 69092.3
 Epoch[ 1 of 3]-Minibatch[  32-  32, 32.00%]: crossEntropy = 7.26844788 * 8192; time = 0.1185s; samplesPerSecond = 69125.0
 Epoch[ 1 of 3]-Minibatch[  33-  33, 33.00%]: crossEntropy = 7.35775757 * 8192; time = 0.1186s; samplesPerSecond = 69081.8
 Epoch[ 1 of 3]-Minibatch[  34-  34, 34.00%]: crossEntropy = 7.35791016 * 8192; time = 0.1180s; samplesPerSecond = 69416.7
 Epoch[ 1 of 3]-Minibatch[  35-  35, 35.00%]: crossEntropy = 7.24353027 * 8192; time = 0.1186s; samplesPerSecond = 69085.3
 Epoch[ 1 of 3]-Minibatch[  36-  36, 36.00%]: crossEntropy = 7.33654785 * 8192; time = 0.1179s; samplesPerSecond = 69475.5
 Epoch[ 1 of 3]-Minibatch[  37-  37, 37.00%]: crossEntropy = 7.16510010 * 8192; time = 0.1187s; samplesPerSecond = 69002.1
 Epoch[ 1 of 3]-Minibatch[  38-  38, 38.00%]: crossEntropy = 7.00186157 * 8192; time = 0.1187s; samplesPerSecond = 69009.7
 Epoch[ 1 of 3]-Minibatch[  39-  39, 39.00%]: crossEntropy = 7.34182739 * 8192; time = 0.1180s; samplesPerSecond = 69447.3
 Epoch[ 1 of 3]-Minibatch[  40-  40, 40.00%]: crossEntropy = 7.21166992 * 8192; time = 0.1179s; samplesPerSecond = 69463.8
 Epoch[ 1 of 3]-Minibatch[  41-  41, 41.00%]: crossEntropy = 7.28552246 * 8192; time = 0.1186s; samplesPerSecond = 69053.3
 Epoch[ 1 of 3]-Minibatch[  42-  42, 42.00%]: crossEntropy = 7.20718384 * 8192; time = 0.1178s; samplesPerSecond = 69554.0
 Epoch[ 1 of 3]-Minibatch[  43-  43, 43.00%]: crossEntropy = 7.12692261 * 8192; time = 0.1178s; samplesPerSecond = 69535.1
 Epoch[ 1 of 3]-Minibatch[  44-  44, 44.00%]: crossEntropy = 7.12344360 * 8192; time = 0.1178s; samplesPerSecond = 69533.3
 Epoch[ 1 of 3]-Minibatch[  45-  45, 45.00%]: crossEntropy = 6.99429321 * 8192; time = 0.1186s; samplesPerSecond = 69052.1
 Epoch[ 1 of 3]-Minibatch[  46-  46, 46.00%]: crossEntropy = 7.14184570 * 8192; time = 0.1188s; samplesPerSecond = 68980.0
 Epoch[ 1 of 3]-Minibatch[  47-  47, 47.00%]: crossEntropy = 7.50061035 * 8192; time = 0.1179s; samplesPerSecond = 69483.2
 Epoch[ 1 of 3]-Minibatch[  48-  48, 48.00%]: crossEntropy = 7.25341797 * 8192; time = 0.1189s; samplesPerSecond = 68871.0
 Epoch[ 1 of 3]-Minibatch[  49-  49, 49.00%]: crossEntropy = 7.13790894 * 8192; time = 0.1179s; samplesPerSecond = 69456.1
 Epoch[ 1 of 3]-Minibatch[  50-  50, 50.00%]: crossEntropy = 6.91610718 * 8192; time = 0.1179s; samplesPerSecond = 69499.7
 Epoch[ 1 of 3]-Minibatch[  51-  51, 51.00%]: crossEntropy = 7.11065674 * 8192; time = 0.1189s; samplesPerSecond = 68873.9
 Epoch[ 1 of 3]-Minibatch[  52-  52, 52.00%]: crossEntropy = 7.09326172 * 8192; time = 0.1181s; samplesPerSecond = 69340.9
 Epoch[ 1 of 3]-Minibatch[  53-  53, 53.00%]: crossEntropy = 7.07852173 * 8192; time = 0.1179s; samplesPerSecond = 69506.2
 Epoch[ 1 of 3]-Minibatch[  54-  54, 54.00%]: crossEntropy = 7.02871704 * 8192; time = 0.1179s; samplesPerSecond = 69457.3
 Epoch[ 1 of 3]-Minibatch[  55-  55, 55.00%]: crossEntropy = 6.96896362 * 8192; time = 0.1187s; samplesPerSecond = 69034.7
 Epoch[ 1 of 3]-Minibatch[  56-  56, 56.00%]: crossEntropy = 6.97750854 * 8192; time = 0.1186s; samplesPerSecond = 69056.2
 Epoch[ 1 of 3]-Minibatch[  57-  57, 57.00%]: crossEntropy = 7.02416992 * 8192; time = 0.1179s; samplesPerSecond = 69479.1
 Epoch[ 1 of 3]-Minibatch[  58-  58, 58.00%]: crossEntropy = 7.13250732 * 8192; time = 0.1179s; samplesPerSecond = 69463.8
 Epoch[ 1 of 3]-Minibatch[  59-  59, 59.00%]: crossEntropy = 7.12500000 * 8192; time = 0.1186s; samplesPerSecond = 69064.9
 Epoch[ 1 of 3]-Minibatch[  60-  60, 60.00%]: crossEntropy = 6.81762695 * 8192; time = 0.1179s; samplesPerSecond = 69483.2
 Epoch[ 1 of 3]-Minibatch[  61-  61, 61.00%]: crossEntropy = 7.19723511 * 8192; time = 0.1188s; samplesPerSecond = 68971.3
 Epoch[ 1 of 3]-Minibatch[  62-  62, 62.00%]: crossEntropy = 7.26177979 * 8192; time = 0.1178s; samplesPerSecond = 69513.9
 Epoch[ 1 of 3]-Minibatch[  63-  63, 63.00%]: crossEntropy = 7.02410889 * 8192; time = 0.1187s; samplesPerSecond = 69007.9
 Epoch[ 1 of 3]-Minibatch[  64-  64, 64.00%]: crossEntropy = 6.98663330 * 8192; time = 0.1178s; samplesPerSecond = 69515.0
 Epoch[ 1 of 3]-Minibatch[  65-  65, 65.00%]: crossEntropy = 6.95010376 * 8192; time = 0.1181s; samplesPerSecond = 69374.9
 Epoch[ 1 of 3]-Minibatch[  66-  66, 66.00%]: crossEntropy = 6.91497803 * 8192; time = 0.1180s; samplesPerSecond = 69412.0
 Epoch[ 1 of 3]-Minibatch[  67-  67, 67.00%]: crossEntropy = 6.86956787 * 8192; time = 0.1187s; samplesPerSecond = 69001.5
 Epoch[ 1 of 3]-Minibatch[  68-  68, 68.00%]: crossEntropy = 6.77514648 * 8192; time = 0.1179s; samplesPerSecond = 69478.5
 Epoch[ 1 of 3]-Minibatch[  69-  69, 69.00%]: crossEntropy = 7.04345703 * 8192; time = 0.1180s; samplesPerSecond = 69420.8
 Epoch[ 1 of 3]-Minibatch[  70-  70, 70.00%]: crossEntropy = 7.26062012 * 8192; time = 0.1187s; samplesPerSecond = 69012.6
 Epoch[ 1 of 3]-Minibatch[  71-  71, 71.00%]: crossEntropy = 7.06933594 * 8192; time = 0.1179s; samplesPerSecond = 69481.4
 Epoch[ 1 of 3]-Minibatch[  72-  72, 72.00%]: crossEntropy = 6.94262695 * 8192; time = 0.1179s; samplesPerSecond = 69468.5
 Epoch[ 1 of 3]-Minibatch[  73-  73, 73.00%]: crossEntropy = 6.85003662 * 8192; time = 0.1186s; samplesPerSecond = 69077.8
 Epoch[ 1 of 3]-Minibatch[  74-  74, 74.00%]: crossEntropy = 6.87237549 * 8192; time = 0.1180s; samplesPerSecond = 69441.4
 Epoch[ 1 of 3]-Minibatch[  75-  75, 75.00%]: crossEntropy = 7.08435059 * 8192; time = 0.1180s; samplesPerSecond = 69411.4
 Epoch[ 1 of 3]-Minibatch[  76-  76, 76.00%]: crossEntropy = 6.83703613 * 8192; time = 0.1187s; samplesPerSecond = 69020.1
 Epoch[ 1 of 3]-Minibatch[  77-  77, 77.00%]: crossEntropy = 7.02899170 * 8192; time = 0.1179s; samplesPerSecond = 69496.2
 Epoch[ 1 of 3]-Minibatch[  78-  78, 78.00%]: crossEntropy = 6.88830566 * 8192; time = 0.1179s; samplesPerSecond = 69487.9
 Epoch[ 1 of 3]-Minibatch[  79-  79, 79.00%]: crossEntropy = 6.96551514 * 8192; time = 0.1186s; samplesPerSecond = 69050.4
 Epoch[ 1 of 3]-Minibatch[  80-  80, 80.00%]: crossEntropy = 7.04040527 * 8192; time = 0.1188s; samplesPerSecond = 68936.5
 Epoch[ 1 of 3]-Minibatch[  81-  81, 81.00%]: crossEntropy = 6.76184082 * 8192; time = 0.1181s; samplesPerSecond = 69393.1
 Epoch[ 1 of 3]-Minibatch[  82-  82, 82.00%]: crossEntropy = 6.94274902 * 8192; time = 0.1178s; samplesPerSecond = 69565.2
 Epoch[ 1 of 3]-Minibatch[  83-  83, 83.00%]: crossEntropy = 6.91180420 * 8192; time = 0.1187s; samplesPerSecond = 69039.3
 Epoch[ 1 of 3]-Minibatch[  84-  84, 84.00%]: crossEntropy = 6.81842041 * 8192; time = 0.1187s; samplesPerSecond = 69031.8
 Epoch[ 1 of 3]-Minibatch[  85-  85, 85.00%]: crossEntropy = 6.87182617 * 8192; time = 0.1180s; samplesPerSecond = 69420.2
 Epoch[ 1 of 3]-Minibatch[  86-  86, 86.00%]: crossEntropy = 6.81518555 * 8192; time = 0.1187s; samplesPerSecond = 69042.2
 Epoch[ 1 of 3]-Minibatch[  87-  87, 87.00%]: crossEntropy = 6.91467285 * 8192; time = 0.1180s; samplesPerSecond = 69427.3
 Epoch[ 1 of 3]-Minibatch[  88-  88, 88.00%]: crossEntropy = 6.80804443 * 8192; time = 0.1179s; samplesPerSecond = 69479.7
 Epoch[ 1 of 3]-Minibatch[  89-  89, 89.00%]: crossEntropy = 6.82403564 * 8192; time = 0.1180s; samplesPerSecond = 69420.2
 Epoch[ 1 of 3]-Minibatch[  90-  90, 90.00%]: crossEntropy = 6.71887207 * 8192; time = 0.1180s; samplesPerSecond = 69429.6
 Epoch[ 1 of 3]-Minibatch[  91-  91, 91.00%]: crossEntropy = 6.82910156 * 8192; time = 0.1188s; samplesPerSecond = 68973.1
 Epoch[ 1 of 3]-Minibatch[  92-  92, 92.00%]: crossEntropy = 6.99603271 * 8192; time = 0.1179s; samplesPerSecond = 69454.3
 Epoch[ 1 of 3]-Minibatch[  93-  93, 93.00%]: crossEntropy = 6.78515625 * 8192; time = 0.1186s; samplesPerSecond = 69095.2
 Epoch[ 1 of 3]-Minibatch[  94-  94, 94.00%]: crossEntropy = 6.70532227 * 8192; time = 0.1178s; samplesPerSecond = 69525.7
 Epoch[ 1 of 3]-Minibatch[  95-  95, 95.00%]: crossEntropy = 6.88970947 * 8192; time = 0.1187s; samplesPerSecond = 68992.2
 Epoch[ 1 of 3]-Minibatch[  96-  96, 96.00%]: crossEntropy = 7.05651855 * 8192; time = 0.1186s; samplesPerSecond = 69055.6
 Epoch[ 1 of 3]-Minibatch[  97-  97, 97.00%]: crossEntropy = 6.95507812 * 8192; time = 0.1183s; samplesPerSecond = 69255.9
 Epoch[ 1 of 3]-Minibatch[  98-  98, 98.00%]: crossEntropy = 7.00250244 * 8192; time = 0.1186s; samplesPerSecond = 69080.1
 Epoch[ 1 of 3]-Minibatch[  99-  99, 99.00%]: crossEntropy = 6.89263916 * 8192; time = 0.1192s; samplesPerSecond = 68699.5
 Epoch[ 1 of 3]-Minibatch[ 100- 100, 100.00%]: crossEntropy = 6.78247070 * 8192; time = 0.1187s; samplesPerSecond = 69022.5
 Epoch[ 1 of 3]-Minibatch[ 101- 101, 101.00%]: crossEntropy = 6.89276123 * 8192; time = 0.1185s; samplesPerSecond = 69126.1
Finished Epoch[ 1 of 3]: [Training] crossEntropy = 7.37421485 * 827391; totalSamplesSeen = 827391; learningRatePerSample = 9.9999997e-05; epochTime=12.6714s
SGD: Saving checkpoint model './Output/lstm64/lstm64.dnn.1'

Starting Epoch 2: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 2 of 3]-Minibatch[   1-   1, 1.00%]: crossEntropy = 6.85596037 * 8192; time = 0.1208s; samplesPerSecond = 67791.6
 Epoch[ 2 of 3]-Minibatch[   2-   2, 2.00%]: crossEntropy = 6.82479525 * 8192; time = 0.1186s; samplesPerSecond = 69073.1
 Epoch[ 2 of 3]-Minibatch[   3-   3, 3.00%]: crossEntropy = 6.64835739 * 8192; time = 0.1187s; samplesPerSecond = 69009.1
 Epoch[ 2 of 3]-Minibatch[   4-   4, 4.00%]: crossEntropy = 6.99077988 * 8192; time = 0.1185s; samplesPerSecond = 69146.6
 Epoch[ 2 of 3]-Minibatch[   5-   5, 5.00%]: crossEntropy = 6.97017288 * 8192; time = 0.1193s; samplesPerSecond = 68646.5
 Epoch[ 2 of 3]-Minibatch[   6-   6, 6.00%]: crossEntropy = 6.76262665 * 8192; time = 0.1187s; samplesPerSecond = 69025.4
 Epoch[ 2 of 3]-Minibatch[   7-   7, 7.00%]: crossEntropy = 6.95949554 * 8192; time = 0.1194s; samplesPerSecond = 68620.6
 Epoch[ 2 of 3]-Minibatch[   8-   8, 8.00%]: crossEntropy = 6.82585907 * 8192; time = 0.1194s; samplesPerSecond = 68615.5
 Epoch[ 2 of 3]-Minibatch[   9-   9, 9.00%]: crossEntropy = 6.77748108 * 8192; time = 0.1188s; samplesPerSecond = 68970.2
 Epoch[ 2 of 3]-Minibatch[  10-  10, 10.00%]: crossEntropy = 6.78165817 * 8192; time = 0.1194s; samplesPerSecond = 68605.1
 Epoch[ 2 of 3]-Minibatch[  11-  11, 11.00%]: crossEntropy = 6.74072266 * 8192; time = 0.1186s; samplesPerSecond = 69066.1
 Epoch[ 2 of 3]-Minibatch[  12-  12, 12.00%]: crossEntropy = 6.88411713 * 8192; time = 0.1196s; samplesPerSecond = 68518.5
 Epoch[ 2 of 3]-Minibatch[  13-  13, 13.00%]: crossEntropy = 6.94709778 * 8192; time = 0.1195s; samplesPerSecond = 68579.3
 Epoch[ 2 of 3]-Minibatch[  14-  14, 14.00%]: crossEntropy = 6.87156576 * 3840; time = 0.0823s; samplesPerSecond = 46677.3
 Epoch[ 2 of 3]-Minibatch[  15-  15, 15.00%]: crossEntropy = 7.03356481 * 54; time = 0.0374s; samplesPerSecond = 1445.6
 Epoch[ 2 of 3]-Minibatch[  16-  16, 16.00%]: crossEntropy = 6.87443536 * 8191; time = 0.1252s; samplesPerSecond = 65416.0
 Epoch[ 2 of 3]-Minibatch[  17-  17, 17.00%]: crossEntropy = 6.78868866 * 8192; time = 0.1188s; samplesPerSecond = 68933.6
 Epoch[ 2 of 3]-Minibatch[  18-  18, 18.00%]: crossEntropy = 6.96743011 * 8192; time = 0.1187s; samplesPerSecond = 69013.2
 Epoch[ 2 of 3]-Minibatch[  19-  19, 19.00%]: crossEntropy = 6.89841461 * 8192; time = 0.1187s; samplesPerSecond = 69017.8
 Epoch[ 2 of 3]-Minibatch[  20-  20, 20.00%]: crossEntropy = 6.85726929 * 8192; time = 0.1190s; samplesPerSecond = 68863.5
 Epoch[ 2 of 3]-Minibatch[  21-  21, 21.00%]: crossEntropy = 6.78228760 * 8192; time = 0.1186s; samplesPerSecond = 69051.6
 Epoch[ 2 of 3]-Minibatch[  22-  22, 22.00%]: crossEntropy = 6.84228516 * 8192; time = 0.1194s; samplesPerSecond = 68604.0
 Epoch[ 2 of 3]-Minibatch[  23-  23, 23.00%]: crossEntropy = 6.83250427 * 8192; time = 0.1195s; samplesPerSecond = 68577.0
 Epoch[ 2 of 3]-Minibatch[  24-  24, 24.00%]: crossEntropy = 6.86943054 * 8192; time = 0.1186s; samplesPerSecond = 69066.7
 Epoch[ 2 of 3]-Minibatch[  25-  25, 25.00%]: crossEntropy = 6.73033142 * 8192; time = 0.1188s; samplesPerSecond = 68946.4
 Epoch[ 2 of 3]-Minibatch[  26-  26, 26.00%]: crossEntropy = 6.71469116 * 8192; time = 0.1193s; samplesPerSecond = 68676.4
 Epoch[ 2 of 3]-Minibatch[  27-  27, 27.00%]: crossEntropy = 6.63464355 * 8192; time = 0.1185s; samplesPerSecond = 69122.6
 Epoch[ 2 of 3]-Minibatch[  28-  28, 28.00%]: crossEntropy = 6.83874512 * 8192; time = 0.1194s; samplesPerSecond = 68622.4
 Epoch[ 2 of 3]-Minibatch[  29-  29, 29.00%]: crossEntropy = 6.94329834 * 8192; time = 0.1188s; samplesPerSecond = 68976.6
 Epoch[ 2 of 3]-Minibatch[  30-  30, 30.00%]: crossEntropy = 7.02923584 * 8192; time = 0.1186s; samplesPerSecond = 69074.3
 Epoch[ 2 of 3]-Minibatch[  31-  31, 31.00%]: crossEntropy = 6.91456604 * 8192; time = 0.1193s; samplesPerSecond = 68642.5
 Epoch[ 2 of 3]-Minibatch[  32-  32, 32.00%]: crossEntropy = 6.89775085 * 8192; time = 0.1193s; samplesPerSecond = 68642.5
 Epoch[ 2 of 3]-Minibatch[  33-  33, 33.00%]: crossEntropy = 6.75141907 * 8192; time = 0.1186s; samplesPerSecond = 69093.5
 Epoch[ 2 of 3]-Minibatch[  34-  34, 34.00%]: crossEntropy = 6.68684387 * 8192; time = 0.1195s; samplesPerSecond = 68566.6
 Epoch[ 2 of 3]-Minibatch[  35-  35, 35.00%]: crossEntropy = 6.80114746 * 8192; time = 0.1193s; samplesPerSecond = 68640.2
 Epoch[ 2 of 3]-Minibatch[  36-  36, 36.00%]: crossEntropy = 6.62469482 * 8192; time = 0.1186s; samplesPerSecond = 69074.8
 Epoch[ 2 of 3]-Minibatch[  37-  37, 37.00%]: crossEntropy = 6.77891541 * 8192; time = 0.1194s; samplesPerSecond = 68607.4
 Epoch[ 2 of 3]-Minibatch[  38-  38, 38.00%]: crossEntropy = 6.83280945 * 8192; time = 0.1186s; samplesPerSecond = 69081.8
 Epoch[ 2 of 3]-Minibatch[  39-  39, 39.00%]: crossEntropy = 6.92355347 * 8192; time = 0.1193s; samplesPerSecond = 68655.7
 Epoch[ 2 of 3]-Minibatch[  40-  40, 40.00%]: crossEntropy = 6.88543701 * 8192; time = 0.1194s; samplesPerSecond = 68609.7
 Epoch[ 2 of 3]-Minibatch[  41-  41, 41.00%]: crossEntropy = 6.83587646 * 8192; time = 0.1186s; samplesPerSecond = 69083.6
 Epoch[ 2 of 3]-Minibatch[  42-  42, 42.00%]: crossEntropy = 6.71051025 * 8192; time = 0.1193s; samplesPerSecond = 68641.9
 Epoch[ 2 of 3]-Minibatch[  43-  43, 43.00%]: crossEntropy = 6.79693604 * 8192; time = 0.1193s; samplesPerSecond = 68675.9
 Epoch[ 2 of 3]-Minibatch[  44-  44, 44.00%]: crossEntropy = 6.72485352 * 8192; time = 0.1193s; samplesPerSecond = 68662.0
 Epoch[ 2 of 3]-Minibatch[  45-  45, 45.00%]: crossEntropy = 6.74572754 * 8192; time = 0.1187s; samplesPerSecond = 69037.0
 Epoch[ 2 of 3]-Minibatch[  46-  46, 46.00%]: crossEntropy = 6.79345703 * 8192; time = 0.1194s; samplesPerSecond = 68593.1
 Epoch[ 2 of 3]-Minibatch[  47-  47, 47.00%]: crossEntropy = 6.95462036 * 8192; time = 0.1194s; samplesPerSecond = 68624.7
 Epoch[ 2 of 3]-Minibatch[  48-  48, 48.00%]: crossEntropy = 6.79275513 * 8192; time = 0.1186s; samplesPerSecond = 69060.3
 Epoch[ 2 of 3]-Minibatch[  49-  49, 49.00%]: crossEntropy = 6.83758545 * 8192; time = 0.1194s; samplesPerSecond = 68584.4
 Epoch[ 2 of 3]-Minibatch[  50-  50, 50.00%]: crossEntropy = 6.70468140 * 8192; time = 0.1195s; samplesPerSecond = 68527.1
 Epoch[ 2 of 3]-Minibatch[  51-  51, 51.00%]: crossEntropy = 6.73632812 * 8192; time = 0.1186s; samplesPerSecond = 69051.0
 Epoch[ 2 of 3]-Minibatch[  52-  52, 52.00%]: crossEntropy = 6.87850952 * 8192; time = 0.1186s; samplesPerSecond = 69067.9
 Epoch[ 2 of 3]-Minibatch[  53-  53, 53.00%]: crossEntropy = 6.65249634 * 8192; time = 0.1194s; samplesPerSecond = 68617.8
 Epoch[ 2 of 3]-Minibatch[  54-  54, 54.00%]: crossEntropy = 6.84820557 * 8192; time = 0.1188s; samplesPerSecond = 68939.4
 Epoch[ 2 of 3]-Minibatch[  55-  55, 55.00%]: crossEntropy = 6.76544189 * 8192; time = 0.1194s; samplesPerSecond = 68615.5
 Epoch[ 2 of 3]-Minibatch[  56-  56, 56.00%]: crossEntropy = 6.82153320 * 8192; time = 0.1187s; samplesPerSecond = 69018.4
 Epoch[ 2 of 3]-Minibatch[  57-  57, 57.00%]: crossEntropy = 6.92861938 * 8192; time = 0.1194s; samplesPerSecond = 68621.2
 Epoch[ 2 of 3]-Minibatch[  58-  58, 58.00%]: crossEntropy = 6.69866943 * 8192; time = 0.1194s; samplesPerSecond = 68610.3
 Epoch[ 2 of 3]-Minibatch[  59-  59, 59.00%]: crossEntropy = 6.64138794 * 8192; time = 0.1188s; samplesPerSecond = 68982.9
 Epoch[ 2 of 3]-Minibatch[  60-  60, 60.00%]: crossEntropy = 6.74157715 * 8192; time = 0.1187s; samplesPerSecond = 69013.7
 Epoch[ 2 of 3]-Minibatch[  61-  61, 61.00%]: crossEntropy = 6.81286621 * 8192; time = 0.1193s; samplesPerSecond = 68657.4
 Epoch[ 2 of 3]-Minibatch[  62-  62, 62.00%]: crossEntropy = 7.03320312 * 8192; time = 0.1187s; samplesPerSecond = 69042.8
 Epoch[ 2 of 3]-Minibatch[  63-  63, 63.00%]: crossEntropy = 6.90020752 * 8192; time = 0.1193s; samplesPerSecond = 68658.6
 Epoch[ 2 of 3]-Minibatch[  64-  64, 64.00%]: crossEntropy = 6.75534058 * 8192; time = 0.1193s; samplesPerSecond = 68688.5
 Epoch[ 2 of 3]-Minibatch[  65-  65, 65.00%]: crossEntropy = 6.74307251 * 8192; time = 0.1187s; samplesPerSecond = 69032.4
 Epoch[ 2 of 3]-Minibatch[  66-  66, 66.00%]: crossEntropy = 6.73104858 * 8192; time = 0.1186s; samplesPerSecond = 69074.8
 Epoch[ 2 of 3]-Minibatch[  67-  67, 67.00%]: crossEntropy = 6.74707031 * 8192; time = 0.1189s; samplesPerSecond = 68920.8
 Epoch[ 2 of 3]-Minibatch[  68-  68, 68.00%]: crossEntropy = 6.80352783 * 8192; time = 0.1186s; samplesPerSecond = 69070.8
 Epoch[ 2 of 3]-Minibatch[  69-  69, 69.00%]: crossEntropy = 6.90991211 * 8192; time = 0.1187s; samplesPerSecond = 69018.4
 Epoch[ 2 of 3]-Minibatch[  70-  70, 70.00%]: crossEntropy = 6.73696899 * 8192; time = 0.1187s; samplesPerSecond = 68994.0
 Epoch[ 2 of 3]-Minibatch[  71-  71, 71.00%]: crossEntropy = 6.64581299 * 8192; time = 0.1194s; samplesPerSecond = 68626.4
 Epoch[ 2 of 3]-Minibatch[  72-  72, 72.00%]: crossEntropy = 6.76077271 * 8192; time = 0.1195s; samplesPerSecond = 68546.0
 Epoch[ 2 of 3]-Minibatch[  73-  73, 73.00%]: crossEntropy = 6.69451904 * 8192; time = 0.1187s; samplesPerSecond = 69018.4
 Epoch[ 2 of 3]-Minibatch[  74-  74, 74.00%]: crossEntropy = 6.66732788 * 8192; time = 0.1194s; samplesPerSecond = 68592.5
 Epoch[ 2 of 3]-Minibatch[  75-  75, 75.00%]: crossEntropy = 6.79174805 * 8192; time = 0.1193s; samplesPerSecond = 68673.0
 Epoch[ 2 of 3]-Minibatch[  76-  76, 76.00%]: crossEntropy = 7.04739380 * 8192; time = 0.1186s; samplesPerSecond = 69101.1
 Epoch[ 2 of 3]-Minibatch[  77-  77, 77.00%]: crossEntropy = 6.93994141 * 8192; time = 0.1194s; samplesPerSecond = 68637.9
 Epoch[ 2 of 3]-Minibatch[  78-  78, 78.00%]: crossEntropy = 6.81298828 * 8192; time = 0.1194s; samplesPerSecond = 68613.2
 Epoch[ 2 of 3]-Minibatch[  79-  79, 79.00%]: crossEntropy = 6.81213379 * 8192; time = 0.1187s; samplesPerSecond = 69009.7
 Epoch[ 2 of 3]-Minibatch[  80-  80, 80.00%]: crossEntropy = 6.75830078 * 8192; time = 0.1193s; samplesPerSecond = 68638.5
 Epoch[ 2 of 3]-Minibatch[  81-  81, 81.00%]: crossEntropy = 6.72198486 * 8192; time = 0.1187s; samplesPerSecond = 69009.7
 Epoch[ 2 of 3]-Minibatch[  82-  82, 82.00%]: crossEntropy = 6.76342773 * 8192; time = 0.1194s; samplesPerSecond = 68623.5
 Epoch[ 2 of 3]-Minibatch[  83-  83, 83.00%]: crossEntropy = 6.58709717 * 8192; time = 0.1188s; samplesPerSecond = 68945.8
 Epoch[ 2 of 3]-Minibatch[  84-  84, 84.00%]: crossEntropy = 6.78076172 * 8192; time = 0.1187s; samplesPerSecond = 69022.5
 Epoch[ 2 of 3]-Minibatch[  85-  85, 85.00%]: crossEntropy = 6.83819580 * 8192; time = 0.1186s; samplesPerSecond = 69067.3
 Epoch[ 2 of 3]-Minibatch[  86-  86, 86.00%]: crossEntropy = 6.75262451 * 8192; time = 0.1186s; samplesPerSecond = 69084.7
 Epoch[ 2 of 3]-Minibatch[  87-  87, 87.00%]: crossEntropy = 6.73846436 * 8192; time = 0.1187s; samplesPerSecond = 69021.3
 Epoch[ 2 of 3]-Minibatch[  88-  88, 88.00%]: crossEntropy = 6.69866943 * 8192; time = 0.1187s; samplesPerSecond = 69041.7
 Epoch[ 2 of 3]-Minibatch[  89-  89, 89.00%]: crossEntropy = 6.71112061 * 8192; time = 0.1194s; samplesPerSecond = 68618.9
 Epoch[ 2 of 3]-Minibatch[  90-  90, 90.00%]: crossEntropy = 6.85028076 * 8192; time = 0.1194s; samplesPerSecond = 68587.9
 Epoch[ 2 of 3]-Minibatch[  91-  91, 91.00%]: crossEntropy = 6.64831543 * 8192; time = 0.1194s; samplesPerSecond = 68627.5
 Epoch[ 2 of 3]-Minibatch[  92-  92, 92.00%]: crossEntropy = 6.81475830 * 8192; time = 0.1187s; samplesPerSecond = 69022.5
 Epoch[ 2 of 3]-Minibatch[  93-  93, 93.00%]: crossEntropy = 6.67895508 * 8192; time = 0.1187s; samplesPerSecond = 69034.7
 Epoch[ 2 of 3]-Minibatch[  94-  94, 94.00%]: crossEntropy = 6.71234131 * 8192; time = 0.1188s; samplesPerSecond = 68973.1
 Epoch[ 2 of 3]-Minibatch[  95-  95, 95.00%]: crossEntropy = 6.75457764 * 8192; time = 0.1194s; samplesPerSecond = 68599.4
 Epoch[ 2 of 3]-Minibatch[  96-  96, 96.00%]: crossEntropy = 6.60089111 * 8192; time = 0.1194s; samplesPerSecond = 68609.7
 Epoch[ 2 of 3]-Minibatch[  97-  97, 97.00%]: crossEntropy = 6.85809326 * 8192; time = 0.1186s; samplesPerSecond = 69079.5
 Epoch[ 2 of 3]-Minibatch[  98-  98, 98.00%]: crossEntropy = 6.73583984 * 8192; time = 0.1186s; samplesPerSecond = 69045.7
 Epoch[ 2 of 3]-Minibatch[  99-  99, 99.00%]: crossEntropy = 6.67156982 * 8192; time = 0.1187s; samplesPerSecond = 69032.4
 Epoch[ 2 of 3]-Minibatch[ 100- 100, 100.00%]: crossEntropy = 6.69519043 * 8192; time = 0.1186s; samplesPerSecond = 69092.9
 Epoch[ 2 of 3]-Minibatch[ 101- 101, 101.00%]: crossEntropy = 6.66833496 * 8192; time = 0.1187s; samplesPerSecond = 69030.0
 Epoch[ 2 of 3]-Minibatch[ 102- 102, 102.00%]: crossEntropy = 6.72796631 * 8192; time = 0.1186s; samplesPerSecond = 69046.3
Finished Epoch[ 2 of 3]: [Training] crossEntropy = 6.79431121 * 823093; totalSamplesSeen = 1650484; learningRatePerSample = 9.9999997e-05; epochTime=12.0295s
SGD: Saving checkpoint model './Output/lstm64/lstm64.dnn.2'

Starting Epoch 3: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 3 of 3]-Minibatch[   1-   1, 1.00%]: crossEntropy = 6.76681185 * 8192; time = 0.1208s; samplesPerSecond = 67839.8
 Epoch[ 3 of 3]-Minibatch[   2-   2, 2.00%]: crossEntropy = 6.67168474 * 8192; time = 0.1193s; samplesPerSecond = 68657.4
 Epoch[ 3 of 3]-Minibatch[   3-   3, 3.00%]: crossEntropy = 6.58029842 * 8192; time = 0.1187s; samplesPerSecond = 69030.0
 Epoch[ 3 of 3]-Minibatch[   4-   4, 4.00%]: crossEntropy = 6.60978889 * 8192; time = 0.1195s; samplesPerSecond = 68571.2
 Epoch[ 3 of 3]-Minibatch[   5-   5, 5.00%]: crossEntropy = 6.81560707 * 8192; time = 0.1195s; samplesPerSecond = 68574.7
 Epoch[ 3 of 3]-Minibatch[   6-   6, 6.00%]: crossEntropy = 6.77363205 * 8192; time = 0.1186s; samplesPerSecond = 69053.9
 Epoch[ 3 of 3]-Minibatch[   7-   7, 7.00%]: crossEntropy = 6.70040131 * 8192; time = 0.1187s; samplesPerSecond = 69026.5
 Epoch[ 3 of 3]-Minibatch[   8-   8, 8.00%]: crossEntropy = 6.41245651 * 8192; time = 0.1194s; samplesPerSecond = 68595.9
 Epoch[ 3 of 3]-Minibatch[   9-   9, 9.00%]: crossEntropy = 6.60541916 * 8192; time = 0.1193s; samplesPerSecond = 68668.4
 Epoch[ 3 of 3]-Minibatch[  10-  10, 10.00%]: crossEntropy = 6.72663498 * 8192; time = 0.1187s; samplesPerSecond = 69036.4
 Epoch[ 3 of 3]-Minibatch[  11-  11, 11.00%]: crossEntropy = 6.77384186 * 8192; time = 0.1187s; samplesPerSecond = 69022.5
 Epoch[ 3 of 3]-Minibatch[  12-  12, 12.00%]: crossEntropy = 6.75667572 * 8192; time = 0.1195s; samplesPerSecond = 68546.6
 Epoch[ 3 of 3]-Minibatch[  13-  13, 13.00%]: crossEntropy = 6.65670013 * 8192; time = 0.1195s; samplesPerSecond = 68565.5
 Epoch[ 3 of 3]-Minibatch[  14-  14, 14.00%]: crossEntropy = 6.68856812 * 8192; time = 0.1188s; samplesPerSecond = 68961.5
 Epoch[ 3 of 3]-Minibatch[  15-  15, 15.00%]: crossEntropy = 6.70940399 * 8192; time = 0.1195s; samplesPerSecond = 68564.4
 Epoch[ 3 of 3]-Minibatch[  16-  16, 16.00%]: crossEntropy = 6.77418518 * 8192; time = 0.1195s; samplesPerSecond = 68563.8
 Epoch[ 3 of 3]-Minibatch[  17-  17, 17.00%]: crossEntropy = 6.59017181 * 8192; time = 0.1194s; samplesPerSecond = 68606.3
 Epoch[ 3 of 3]-Minibatch[  18-  18, 18.00%]: crossEntropy = 6.89331818 * 8192; time = 0.1187s; samplesPerSecond = 68998.0
 Epoch[ 3 of 3]-Minibatch[  19-  19, 19.00%]: crossEntropy = 6.75083160 * 8192; time = 0.1195s; samplesPerSecond = 68571.2
 Epoch[ 3 of 3]-Minibatch[  20-  20, 20.00%]: crossEntropy = 6.67369843 * 8192; time = 0.1194s; samplesPerSecond = 68585.0
 Epoch[ 3 of 3]-Minibatch[  21-  21, 21.00%]: crossEntropy = 6.62121582 * 8192; time = 0.1192s; samplesPerSecond = 68702.9
 Epoch[ 3 of 3]-Minibatch[  22-  22, 22.00%]: crossEntropy = 6.53459167 * 8192; time = 0.1186s; samplesPerSecond = 69053.9
 Epoch[ 3 of 3]-Minibatch[  23-  23, 23.00%]: crossEntropy = 6.64030457 * 8192; time = 0.1194s; samplesPerSecond = 68603.4
 Epoch[ 3 of 3]-Minibatch[  24-  24, 24.00%]: crossEntropy = 6.70436096 * 8192; time = 0.1187s; samplesPerSecond = 68991.7
 Epoch[ 3 of 3]-Minibatch[  25-  25, 25.00%]: crossEntropy = 6.81823730 * 8192; time = 0.1187s; samplesPerSecond = 69035.3
 Epoch[ 3 of 3]-Minibatch[  26-  26, 26.00%]: crossEntropy = 6.63536072 * 8192; time = 0.1188s; samplesPerSecond = 68962.0
 Epoch[ 3 of 3]-Minibatch[  27-  27, 27.00%]: crossEntropy = 6.65934917 * 7744; time = 0.1359s; samplesPerSecond = 56980.1
 Epoch[ 3 of 3]-Minibatch[  28-  28, 28.00%]: crossEntropy = 6.98842593 * 54; time = 0.0374s; samplesPerSecond = 1443.6
 Epoch[ 3 of 3]-Minibatch[  29-  29, 29.00%]: crossEntropy = 6.71741851 * 8191; time = 0.1246s; samplesPerSecond = 65738.9
 Epoch[ 3 of 3]-Minibatch[  30-  30, 30.00%]: crossEntropy = 6.70468140 * 8192; time = 0.1195s; samplesPerSecond = 68528.8
 Epoch[ 3 of 3]-Minibatch[  31-  31, 31.00%]: crossEntropy = 6.77096558 * 8192; time = 0.1188s; samplesPerSecond = 68933.6
 Epoch[ 3 of 3]-Minibatch[  32-  32, 32.00%]: crossEntropy = 6.64811707 * 8192; time = 0.1189s; samplesPerSecond = 68870.4
 Epoch[ 3 of 3]-Minibatch[  33-  33, 33.00%]: crossEntropy = 6.70069885 * 8192; time = 0.1187s; samplesPerSecond = 69001.0
 Epoch[ 3 of 3]-Minibatch[  34-  34, 34.00%]: crossEntropy = 6.70452881 * 8192; time = 0.1189s; samplesPerSecond = 68882.0
 Epoch[ 3 of 3]-Minibatch[  35-  35, 35.00%]: crossEntropy = 6.70394897 * 8192; time = 0.1194s; samplesPerSecond = 68617.2
 Epoch[ 3 of 3]-Minibatch[  36-  36, 36.00%]: crossEntropy = 6.71022034 * 8192; time = 0.1195s; samplesPerSecond = 68574.1
 Epoch[ 3 of 3]-Minibatch[  37-  37, 37.00%]: crossEntropy = 6.55685425 * 8192; time = 0.1197s; samplesPerSecond = 68456.6
 Epoch[ 3 of 3]-Minibatch[  38-  38, 38.00%]: crossEntropy = 6.59783936 * 8192; time = 0.1194s; samplesPerSecond = 68591.9
 Epoch[ 3 of 3]-Minibatch[  39-  39, 39.00%]: crossEntropy = 6.65142822 * 8192; time = 0.1195s; samplesPerSecond = 68545.4
 Epoch[ 3 of 3]-Minibatch[  40-  40, 40.00%]: crossEntropy = 6.53463745 * 8192; time = 0.1188s; samplesPerSecond = 68927.2
 Epoch[ 3 of 3]-Minibatch[  41-  41, 41.00%]: crossEntropy = 6.69223022 * 8192; time = 0.1188s; samplesPerSecond = 68982.4
 Epoch[ 3 of 3]-Minibatch[  42-  42, 42.00%]: crossEntropy = 6.74206543 * 8192; time = 0.1188s; samplesPerSecond = 68950.4
 Epoch[ 3 of 3]-Minibatch[  43-  43, 43.00%]: crossEntropy = 6.76116943 * 8192; time = 0.1194s; samplesPerSecond = 68625.2
 Epoch[ 3 of 3]-Minibatch[  44-  44, 44.00%]: crossEntropy = 6.81021118 * 8192; time = 0.1186s; samplesPerSecond = 69049.2
 Epoch[ 3 of 3]-Minibatch[  45-  45, 45.00%]: crossEntropy = 6.74502563 * 8192; time = 0.1187s; samplesPerSecond = 69010.8
 Epoch[ 3 of 3]-Minibatch[  46-  46, 46.00%]: crossEntropy = 6.61178589 * 8192; time = 0.1187s; samplesPerSecond = 69042.2
 Epoch[ 3 of 3]-Minibatch[  47-  47, 47.00%]: crossEntropy = 6.59127808 * 8192; time = 0.1196s; samplesPerSecond = 68495.0
 Epoch[ 3 of 3]-Minibatch[  48-  48, 48.00%]: crossEntropy = 6.73239136 * 8192; time = 0.1195s; samplesPerSecond = 68565.5
 Epoch[ 3 of 3]-Minibatch[  49-  49, 49.00%]: crossEntropy = 6.55688477 * 8192; time = 0.1195s; samplesPerSecond = 68569.5
 Epoch[ 3 of 3]-Minibatch[  50-  50, 50.00%]: crossEntropy = 6.73226929 * 8192; time = 0.1187s; samplesPerSecond = 69041.7
 Epoch[ 3 of 3]-Minibatch[  51-  51, 51.00%]: crossEntropy = 6.74810791 * 8192; time = 0.1194s; samplesPerSecond = 68618.3
 Epoch[ 3 of 3]-Minibatch[  52-  52, 52.00%]: crossEntropy = 6.76852417 * 8192; time = 0.1187s; samplesPerSecond = 69039.3
 Epoch[ 3 of 3]-Minibatch[  53-  53, 53.00%]: crossEntropy = 6.75903320 * 8192; time = 0.1195s; samplesPerSecond = 68551.2
 Epoch[ 3 of 3]-Minibatch[  54-  54, 54.00%]: crossEntropy = 6.85925293 * 8192; time = 0.1195s; samplesPerSecond = 68540.8
 Epoch[ 3 of 3]-Minibatch[  55-  55, 55.00%]: crossEntropy = 6.59677124 * 8192; time = 0.1189s; samplesPerSecond = 68902.3
 Epoch[ 3 of 3]-Minibatch[  56-  56, 56.00%]: crossEntropy = 6.69503784 * 8192; time = 0.1194s; samplesPerSecond = 68622.4
 Epoch[ 3 of 3]-Minibatch[  57-  57, 57.00%]: crossEntropy = 6.70361328 * 8192; time = 0.1189s; samplesPerSecond = 68910.4
 Epoch[ 3 of 3]-Minibatch[  58-  58, 58.00%]: crossEntropy = 6.65954590 * 8192; time = 0.1188s; samplesPerSecond = 68941.1
 Epoch[ 3 of 3]-Minibatch[  59-  59, 59.00%]: crossEntropy = 6.68472290 * 8192; time = 0.1194s; samplesPerSecond = 68635.0
 Epoch[ 3 of 3]-Minibatch[  60-  60, 60.00%]: crossEntropy = 6.76034546 * 8192; time = 0.1193s; samplesPerSecond = 68646.5
 Epoch[ 3 of 3]-Minibatch[  61-  61, 61.00%]: crossEntropy = 6.74133301 * 8192; time = 0.1187s; samplesPerSecond = 68998.0
 Epoch[ 3 of 3]-Minibatch[  62-  62, 62.00%]: crossEntropy = 6.76623535 * 8192; time = 0.1193s; samplesPerSecond = 68643.6
 Epoch[ 3 of 3]-Minibatch[  63-  63, 63.00%]: crossEntropy = 6.61712646 * 8192; time = 0.1195s; samplesPerSecond = 68576.4
 Epoch[ 3 of 3]-Minibatch[  64-  64, 64.00%]: crossEntropy = 6.63845825 * 8192; time = 0.1188s; samplesPerSecond = 68959.1
 Epoch[ 3 of 3]-Minibatch[  65-  65, 65.00%]: crossEntropy = 6.74514771 * 8192; time = 0.1194s; samplesPerSecond = 68590.2
 Epoch[ 3 of 3]-Minibatch[  66-  66, 66.00%]: crossEntropy = 6.53341675 * 8192; time = 0.1186s; samplesPerSecond = 69045.2
 Epoch[ 3 of 3]-Minibatch[  67-  67, 67.00%]: crossEntropy = 6.77301025 * 8192; time = 0.1195s; samplesPerSecond = 68535.7
 Epoch[ 3 of 3]-Minibatch[  68-  68, 68.00%]: crossEntropy = 6.70559692 * 8192; time = 0.1189s; samplesPerSecond = 68920.8
 Epoch[ 3 of 3]-Minibatch[  69-  69, 69.00%]: crossEntropy = 6.76223755 * 8192; time = 0.1188s; samplesPerSecond = 68971.9
 Epoch[ 3 of 3]-Minibatch[  70-  70, 70.00%]: crossEntropy = 6.68612671 * 8192; time = 0.1187s; samplesPerSecond = 68988.7
 Epoch[ 3 of 3]-Minibatch[  71-  71, 71.00%]: crossEntropy = 6.58020020 * 8192; time = 0.1194s; samplesPerSecond = 68598.2
 Epoch[ 3 of 3]-Minibatch[  72-  72, 72.00%]: crossEntropy = 6.59286499 * 8192; time = 0.1187s; samplesPerSecond = 69025.4
 Epoch[ 3 of 3]-Minibatch[  73-  73, 73.00%]: crossEntropy = 6.71841431 * 8192; time = 0.1195s; samplesPerSecond = 68571.8
 Epoch[ 3 of 3]-Minibatch[  74-  74, 74.00%]: crossEntropy = 6.66131592 * 8192; time = 0.1188s; samplesPerSecond = 68963.2
 Epoch[ 3 of 3]-Minibatch[  75-  75, 75.00%]: crossEntropy = 6.70321655 * 8192; time = 0.1189s; samplesPerSecond = 68925.5
 Epoch[ 3 of 3]-Minibatch[  76-  76, 76.00%]: crossEntropy = 6.66677856 * 8192; time = 0.1188s; samplesPerSecond = 68976.0
 Epoch[ 3 of 3]-Minibatch[  77-  77, 77.00%]: crossEntropy = 6.75912476 * 8192; time = 0.1194s; samplesPerSecond = 68588.5
 Epoch[ 3 of 3]-Minibatch[  78-  78, 78.00%]: crossEntropy = 6.63742065 * 8192; time = 0.1187s; samplesPerSecond = 69042.2
 Epoch[ 3 of 3]-Minibatch[  79-  79, 79.00%]: crossEntropy = 6.65783691 * 8192; time = 0.1195s; samplesPerSecond = 68573.0
 Epoch[ 3 of 3]-Minibatch[  80-  80, 80.00%]: crossEntropy = 6.66864014 * 8192; time = 0.1196s; samplesPerSecond = 68515.0
 Epoch[ 3 of 3]-Minibatch[  81-  81, 81.00%]: crossEntropy = 6.67163086 * 8192; time = 0.1193s; samplesPerSecond = 68667.8
 Epoch[ 3 of 3]-Minibatch[  82-  82, 82.00%]: crossEntropy = 6.69110107 * 8192; time = 0.1194s; samplesPerSecond = 68593.1
 Epoch[ 3 of 3]-Minibatch[  83-  83, 83.00%]: crossEntropy = 6.63171387 * 8192; time = 0.1186s; samplesPerSecond = 69053.3
 Epoch[ 3 of 3]-Minibatch[  84-  84, 84.00%]: crossEntropy = 6.59790039 * 8192; time = 0.1188s; samplesPerSecond = 68940.6
 Epoch[ 3 of 3]-Minibatch[  85-  85, 85.00%]: crossEntropy = 6.71984863 * 8192; time = 0.1188s; samplesPerSecond = 68980.6
 Epoch[ 3 of 3]-Minibatch[  86-  86, 86.00%]: crossEntropy = 6.66156006 * 8192; time = 0.1195s; samplesPerSecond = 68545.4
 Epoch[ 3 of 3]-Minibatch[  87-  87, 87.00%]: crossEntropy = 6.61273193 * 8192; time = 0.1188s; samplesPerSecond = 68942.3
 Epoch[ 3 of 3]-Minibatch[  88-  88, 88.00%]: crossEntropy = 6.67462158 * 8192; time = 0.1187s; samplesPerSecond = 69023.6
 Epoch[ 3 of 3]-Minibatch[  89-  89, 89.00%]: crossEntropy = 6.90325928 * 8192; time = 0.1188s; samplesPerSecond = 68942.9
 Epoch[ 3 of 3]-Minibatch[  90-  90, 90.00%]: crossEntropy = 6.81842041 * 8192; time = 0.1194s; samplesPerSecond = 68597.7
 Epoch[ 3 of 3]-Minibatch[  91-  91, 91.00%]: crossEntropy = 6.68212891 * 8192; time = 0.1190s; samplesPerSecond = 68827.6
 Epoch[ 3 of 3]-Minibatch[  92-  92, 92.00%]: crossEntropy = 6.71203613 * 8192; time = 0.1196s; samplesPerSecond = 68500.7
 Epoch[ 3 of 3]-Minibatch[  93-  93, 93.00%]: crossEntropy = 6.70483398 * 8192; time = 0.1188s; samplesPerSecond = 68938.8
 Epoch[ 3 of 3]-Minibatch[  94-  94, 94.00%]: crossEntropy = 6.62268066 * 8192; time = 0.1187s; samplesPerSecond = 69014.9
 Epoch[ 3 of 3]-Minibatch[  95-  95, 95.00%]: crossEntropy = 6.60565186 * 8192; time = 0.1194s; samplesPerSecond = 68593.1
 Epoch[ 3 of 3]-Minibatch[  96-  96, 96.00%]: crossEntropy = 6.49017334 * 8192; time = 0.1195s; samplesPerSecond = 68548.9
 Epoch[ 3 of 3]-Minibatch[  97-  97, 97.00%]: crossEntropy = 6.71441650 * 8192; time = 0.1195s; samplesPerSecond = 68537.4
 Epoch[ 3 of 3]-Minibatch[  98-  98, 98.00%]: crossEntropy = 6.76068115 * 8192; time = 0.1196s; samplesPerSecond = 68523.1
 Epoch[ 3 of 3]-Minibatch[  99-  99, 99.00%]: crossEntropy = 6.67993164 * 8192; time = 0.1187s; samplesPerSecond = 68992.2
 Epoch[ 3 of 3]-Minibatch[ 100- 100, 100.00%]: crossEntropy = 6.68542480 * 8192; time = 0.1195s; samplesPerSecond = 68558.0
 Epoch[ 3 of 3]-Minibatch[ 101- 101, 101.00%]: crossEntropy = 6.65649414 * 8192; time = 0.1196s; samplesPerSecond = 68469.8
 Epoch[ 3 of 3]-Minibatch[ 102- 102, 102.00%]: crossEntropy = 6.66229248 * 8192; time = 0.1195s; samplesPerSecond = 68529.9
Finished Epoch[ 3 of 3]: [Training] crossEntropy = 6.68646198 * 826997; totalSamplesSeen = 2477481; learningRatePerSample = 9.9999997e-05; epochTime=12.0952s
SGD: Saving checkpoint model './Output/lstm64/lstm64.dnn'
CNTKCommandTrainEnd: train

Action "train" complete.

__COMPLETED__
