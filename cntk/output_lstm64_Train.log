-------------------------------------------------------------------
Build info: 

		Built time: Sep 27 2016 14:05:01
		Last modified date: Tue Sep 27 07:19:56 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.1
		Build Branch: HEAD
		Build SHA1: 2e4a773398b5ee84e1695abe73eb831c3cca1e36
		Built by philly on 9ab719fcc26d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[1]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[2]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[3]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[4]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[5]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[6]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[7]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
-------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: rnn.cntk:command=train
configparameters: rnn.cntk:ConfigDir=rnn/PennTreebank/Config
configparameters: rnn.cntk:configName=lstm64
configparameters: rnn.cntk:confVocabSize=10000
configparameters: rnn.cntk:DataDir=rnn/PennTreebank/Data
configparameters: rnn.cntk:deviceId=0
configparameters: rnn.cntk:epochSize=327680
configparameters: rnn.cntk:maxEpochs=3
configparameters: rnn.cntk:maxTempMemSizeInSamplesForCNN=1
configparameters: rnn.cntk:minibatchSize=8192
configparameters: rnn.cntk:ModelDir=./Output/lstm64
configparameters: rnn.cntk:modelPath=./Output/lstm64/lstm64.dnn
configparameters: rnn.cntk:OutputDir=./Output
configparameters: rnn.cntk:precision=float
configparameters: rnn.cntk:RootDir=.
configparameters: rnn.cntk:stderr=./output_lstm64_Train.log
configparameters: rnn.cntk:traceLevel=1
configparameters: rnn.cntk:train=[
    action = "train"
    traceLevel = 1
epochSize = 0               
    BrainScriptNetworkBuilder = [
        inputDim = 10000
        labelDim = 10000
        embedDim = 256
        hiddenDim = (256:256)
        model(x) = [
            E = ParameterTensor (embedDim:inputDim)
            e = E * x
            h = RecurrentLSTMLayerStack (hiddenDim, allowOptimizedEngine = true)(e)
            W = ParameterTensor (labelDim:hiddenDim[1]) 
            b = ParameterTensor (labelDim,init='fixedValue',value=0);
            z = W * h + b
        ].z
        words  = if deviceId >= 0 then SparseInput (inputDim) else Input (inputDim)
        labels = Input (inputDim)
        z = model(words)
        crossEntropy = CrossEntropyWithSoftmax(labels, z)
        featureNodes    = (words)
        labelNodes      = (labels)
        criterionNodes  = (crossEntropy)
        evaluationNodes = (crossEntropy)
        outputNodes     = (z)
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "rnn/PennTreebank/Data/ptb.train.64.ctf"
        randomize = false
        traceLevel = 0
        input = [
            words  = [ alias = "S0"; dim = 10000; format = "sparse" ]
            labels = [ alias = "S1"; dim = 10000; format = "sparse" ]
        ]
    ]
    SGD = [
        epochSize=327680
        minibatchSize = 8192 
        learningRatesPerSample = 0.0001
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 3 
        numMBsToShowResult = 1
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
]

configparameters: rnn.cntk:trainFile=ptb.train.64.ctf
Commands: train
precision = "float"

##############################################################################
#                                                                            #
# train command (train action)                                               #
#                                                                            #
##############################################################################


Creating virgin network.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[0 x 0] as glorotUniform later when dimensions are fully known.

Post-processing network...

2 roots:
	crossEntropy = CrossEntropyWithSoftmax()
	z = Plus()

Validating network. 11 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10000 x *]
Validating --> z.W = LearnableParameter() :  -> [10000 x 256]
Validating --> z.h.W = LearnableParameter() :  -> [0 x 0]
Validating --> _z.E = LearnableParameter() :  -> [256 x 10000]
Validating --> words = SparseInputValue() :  -> [10000 x *]
Validating --> z.e = Times (_z.E, words) : [256 x 10000], [10000 x *] -> [256 x *]
Node 'z.h.W' (LearnableParameter operation) operation: Tensor shape was inferred as [256 x 4112].
Node 'z.h.W' (LearnableParameter operation): Initializing Parameter[256 x 4112] <- glorotUniform(seed=2, init dims=[4112 x 256], range=0.037062*1.000000, onCPU=true.
)Validating --> z.h = OptimizedRNNStack (z.h.W, z.e) : [256 x 4112], [256 x *] -> [256 x *]
Validating --> z.z.PlusArgs[0] = Times (z.W, z.h) : [10000 x 256], [256 x *] -> [10000 x *]
Validating --> z.b = LearnableParameter() :  -> [10000]
Validating --> z = Plus (z.z.PlusArgs[0], z.b) : [10000 x *], [10000] -> [10000 x *]
Validating --> crossEntropy = CrossEntropyWithSoftmax (labels, z) : [10000 x *], [10000 x *] -> [1]

Validating network. 5 nodes to process in pass 2.


Validating network, final pass.




Post-processing network complete.


Model has 11 nodes. Using GPU 0.

Training criterion:   crossEntropy = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 20 matrices, 6 are shared as 3, and 14 are not shared.

	{ z.h.W : [256 x 4112] (gradient)
	  z.z.PlusArgs[0] : [10000 x *] }
	{ z : [10000 x *] (gradient)
	  z.W : [10000 x 256] (gradient) }
	{ z.e : [256 x *] (gradient)
	  z.z.PlusArgs[0] : [10000 x *] (gradient) }


Training 6182672 parameters in 4 out of 4 parameter tensors and 9 nodes with gradient:

	Node '_z.E' (LearnableParameter operation) : [256 x 10000]
	Node 'z.W' (LearnableParameter operation) : [10000 x 256]
	Node 'z.b' (LearnableParameter operation) : [10000]
	Node 'z.h.W' (LearnableParameter operation) : [256 x 4112]

No PreCompute nodes found, or all already computed. Skipping pre-computation step.
Setting max temp memory size for Convolution operations to 1 samples.
WARNING: No Convolution operation found.

Starting Epoch 1: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 1 of 3]-Minibatch[   1-   1, 2.50%]: crossEntropy = 9.20936756 * 8191; time = 0.9209s; samplesPerSecond = 8894.3
 Epoch[ 1 of 3]-Minibatch[   2-   2, 5.00%]: crossEntropy = 9.19689655 * 8192; time = 0.1492s; samplesPerSecond = 54924.6
 Epoch[ 1 of 3]-Minibatch[   3-   3, 7.50%]: crossEntropy = 9.18547440 * 8192; time = 0.1431s; samplesPerSecond = 57233.9
 Epoch[ 1 of 3]-Minibatch[   4-   4, 10.00%]: crossEntropy = 9.17391968 * 8192; time = 0.1435s; samplesPerSecond = 57086.7
 Epoch[ 1 of 3]-Minibatch[   5-   5, 12.50%]: crossEntropy = 9.16050720 * 8192; time = 0.1441s; samplesPerSecond = 56862.0
 Epoch[ 1 of 3]-Minibatch[   6-   6, 15.00%]: crossEntropy = 9.14942932 * 8192; time = 0.1455s; samplesPerSecond = 56315.6
 Epoch[ 1 of 3]-Minibatch[   7-   7, 17.50%]: crossEntropy = 9.13819122 * 8192; time = 0.1453s; samplesPerSecond = 56364.4
 Epoch[ 1 of 3]-Minibatch[   8-   8, 20.00%]: crossEntropy = 9.12797546 * 8192; time = 0.1457s; samplesPerSecond = 56229.8
 Epoch[ 1 of 3]-Minibatch[   9-   9, 22.50%]: crossEntropy = 9.11499786 * 8192; time = 0.1453s; samplesPerSecond = 56375.2
WARNING: The same matrix with dim [1, 8192] has been transferred between different devices for 20 times.
 Epoch[ 1 of 3]-Minibatch[  10-  10, 25.00%]: crossEntropy = 9.10199738 * 8192; time = 0.1437s; samplesPerSecond = 56995.8
 Epoch[ 1 of 3]-Minibatch[  11-  11, 27.50%]: crossEntropy = 9.08050537 * 8192; time = 0.1451s; samplesPerSecond = 56449.1
 Epoch[ 1 of 3]-Minibatch[  12-  12, 30.00%]: crossEntropy = 9.06032562 * 8192; time = 0.1447s; samplesPerSecond = 56622.7
 Epoch[ 1 of 3]-Minibatch[  13-  13, 32.50%]: crossEntropy = 9.04947662 * 8192; time = 0.1445s; samplesPerSecond = 56686.9
 Epoch[ 1 of 3]-Minibatch[  14-  14, 35.00%]: crossEntropy = 9.04231262 * 8192; time = 0.1464s; samplesPerSecond = 55937.9
 Epoch[ 1 of 3]-Minibatch[  15-  15, 37.50%]: crossEntropy = 9.01525879 * 8192; time = 0.1461s; samplesPerSecond = 56068.5
 Epoch[ 1 of 3]-Minibatch[  16-  16, 40.00%]: crossEntropy = 9.00280762 * 8192; time = 0.1452s; samplesPerSecond = 56433.1
 Epoch[ 1 of 3]-Minibatch[  17-  17, 42.50%]: crossEntropy = 8.99172974 * 8192; time = 0.1445s; samplesPerSecond = 56680.3
 Epoch[ 1 of 3]-Minibatch[  18-  18, 45.00%]: crossEntropy = 8.96743774 * 8192; time = 0.1447s; samplesPerSecond = 56627.8
 Epoch[ 1 of 3]-Minibatch[  19-  19, 47.50%]: crossEntropy = 8.95545959 * 8192; time = 0.1445s; samplesPerSecond = 56696.0
 Epoch[ 1 of 3]-Minibatch[  20-  20, 50.00%]: crossEntropy = 8.92866516 * 8192; time = 0.1455s; samplesPerSecond = 56304.7
 Epoch[ 1 of 3]-Minibatch[  21-  21, 52.50%]: crossEntropy = 8.87585449 * 8192; time = 0.1455s; samplesPerSecond = 56304.0
 Epoch[ 1 of 3]-Minibatch[  22-  22, 55.00%]: crossEntropy = 8.85191345 * 8192; time = 0.1458s; samplesPerSecond = 56171.1
 Epoch[ 1 of 3]-Minibatch[  23-  23, 57.50%]: crossEntropy = 8.83335876 * 8192; time = 0.1452s; samplesPerSecond = 56430.8
 Epoch[ 1 of 3]-Minibatch[  24-  24, 60.00%]: crossEntropy = 8.75744629 * 8192; time = 0.1435s; samplesPerSecond = 57101.8
 Epoch[ 1 of 3]-Minibatch[  25-  25, 62.50%]: crossEntropy = 8.69483948 * 8192; time = 0.1437s; samplesPerSecond = 56999.3
 Epoch[ 1 of 3]-Minibatch[  26-  26, 65.00%]: crossEntropy = 8.64237976 * 8192; time = 0.1443s; samplesPerSecond = 56761.6
 Epoch[ 1 of 3]-Minibatch[  27-  27, 67.50%]: crossEntropy = 8.47142029 * 8192; time = 0.1462s; samplesPerSecond = 56040.9
 Epoch[ 1 of 3]-Minibatch[  28-  28, 70.00%]: crossEntropy = 8.31866455 * 8192; time = 0.1451s; samplesPerSecond = 56445.9
 Epoch[ 1 of 3]-Minibatch[  29-  29, 72.50%]: crossEntropy = 8.05415344 * 8192; time = 0.1452s; samplesPerSecond = 56409.8
 Epoch[ 1 of 3]-Minibatch[  30-  30, 75.00%]: crossEntropy = 7.85974121 * 8192; time = 0.1451s; samplesPerSecond = 56447.1
 Epoch[ 1 of 3]-Minibatch[  31-  31, 77.50%]: crossEntropy = 7.84774780 * 8192; time = 0.1449s; samplesPerSecond = 56531.3
 Epoch[ 1 of 3]-Minibatch[  32-  32, 80.00%]: crossEntropy = 7.66802979 * 8192; time = 0.1460s; samplesPerSecond = 56110.7
 Epoch[ 1 of 3]-Minibatch[  33-  33, 82.50%]: crossEntropy = 7.61288452 * 8192; time = 0.1435s; samplesPerSecond = 57085.5
 Epoch[ 1 of 3]-Minibatch[  34-  34, 85.00%]: crossEntropy = 7.57461548 * 8192; time = 0.1436s; samplesPerSecond = 57043.8
 Epoch[ 1 of 3]-Minibatch[  35-  35, 87.50%]: crossEntropy = 7.46719360 * 8192; time = 0.1449s; samplesPerSecond = 56541.0
 Epoch[ 1 of 3]-Minibatch[  36-  36, 90.00%]: crossEntropy = 7.50192261 * 8192; time = 0.1457s; samplesPerSecond = 56211.2
 Epoch[ 1 of 3]-Minibatch[  37-  37, 92.50%]: crossEntropy = 7.37396240 * 8192; time = 0.1449s; samplesPerSecond = 56533.2
 Epoch[ 1 of 3]-Minibatch[  38-  38, 95.00%]: crossEntropy = 7.27862549 * 8192; time = 0.1432s; samplesPerSecond = 57215.9
 Epoch[ 1 of 3]-Minibatch[  39-  39, 97.50%]: crossEntropy = 7.42779541 * 8192; time = 0.1450s; samplesPerSecond = 56485.6
 Epoch[ 1 of 3]-Minibatch[  40-  40, 100.00%]: crossEntropy = 7.27520752 * 8192; time = 0.1447s; samplesPerSecond = 56633.3
 Epoch[ 1 of 3]-Minibatch[  41-  41, 102.50%]: crossEntropy = 7.37710571 * 8192; time = 0.1419s; samplesPerSecond = 57750.7
Finished Epoch[ 1 of 3]: [Training] crossEntropy = 8.52237838 * 335871; totalSamplesSeen = 335871; learningRatePerSample = 9.9999997e-05; epochTime=6.71785s
SGD: Saving checkpoint model './Output/lstm64/lstm64.dnn.1'

Starting Epoch 2: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 2 of 3]-Minibatch[   1-   1, 2.50%]: crossEntropy = 7.36128044 * 8192; time = 0.1508s; samplesPerSecond = 54332.3
 Epoch[ 2 of 3]-Minibatch[   2-   2, 5.00%]: crossEntropy = 7.28150654 * 8192; time = 0.1457s; samplesPerSecond = 56213.9
 Epoch[ 2 of 3]-Minibatch[   3-   3, 7.50%]: crossEntropy = 7.16885662 * 8192; time = 0.1461s; samplesPerSecond = 56074.6
 Epoch[ 2 of 3]-Minibatch[   4-   4, 10.00%]: crossEntropy = 7.11327362 * 8192; time = 0.1442s; samplesPerSecond = 56828.1
 Epoch[ 2 of 3]-Minibatch[   5-   5, 12.50%]: crossEntropy = 7.08837700 * 8192; time = 0.1446s; samplesPerSecond = 56645.4
 Epoch[ 2 of 3]-Minibatch[   6-   6, 15.00%]: crossEntropy = 7.23926163 * 8192; time = 0.1447s; samplesPerSecond = 56630.9
 Epoch[ 2 of 3]-Minibatch[   7-   7, 17.50%]: crossEntropy = 7.37353516 * 8192; time = 0.1458s; samplesPerSecond = 56184.2
 Epoch[ 2 of 3]-Minibatch[   8-   8, 20.00%]: crossEntropy = 7.22635651 * 8192; time = 0.1458s; samplesPerSecond = 56174.2
 Epoch[ 2 of 3]-Minibatch[   9-   9, 22.50%]: crossEntropy = 7.20155334 * 8192; time = 0.1454s; samplesPerSecond = 56335.3
 Epoch[ 2 of 3]-Minibatch[  10-  10, 25.00%]: crossEntropy = 7.00180054 * 8192; time = 0.1450s; samplesPerSecond = 56487.2
 Epoch[ 2 of 3]-Minibatch[  11-  11, 27.50%]: crossEntropy = 7.12316132 * 8192; time = 0.1446s; samplesPerSecond = 56636.4
 Epoch[ 2 of 3]-Minibatch[  12-  12, 30.00%]: crossEntropy = 7.10803223 * 8192; time = 0.1447s; samplesPerSecond = 56607.0
 Epoch[ 2 of 3]-Minibatch[  13-  13, 32.50%]: crossEntropy = 7.17115021 * 8192; time = 0.1446s; samplesPerSecond = 56653.2
 Epoch[ 2 of 3]-Minibatch[  14-  14, 35.00%]: crossEntropy = 7.20501709 * 8192; time = 0.1447s; samplesPerSecond = 56628.6
 Epoch[ 2 of 3]-Minibatch[  15-  15, 37.50%]: crossEntropy = 7.05299377 * 8192; time = 0.1460s; samplesPerSecond = 56093.8
 Epoch[ 2 of 3]-Minibatch[  16-  16, 40.00%]: crossEntropy = 7.01063538 * 8192; time = 0.1448s; samplesPerSecond = 56571.1
 Epoch[ 2 of 3]-Minibatch[  17-  17, 42.50%]: crossEntropy = 7.07924652 * 8192; time = 0.1454s; samplesPerSecond = 56349.3
 Epoch[ 2 of 3]-Minibatch[  18-  18, 45.00%]: crossEntropy = 6.96891022 * 8192; time = 0.1435s; samplesPerSecond = 57082.7
 Epoch[ 2 of 3]-Minibatch[  19-  19, 47.50%]: crossEntropy = 7.01321411 * 8192; time = 0.1437s; samplesPerSecond = 56989.4
 Epoch[ 2 of 3]-Minibatch[  20-  20, 50.00%]: crossEntropy = 6.94943237 * 8192; time = 0.1441s; samplesPerSecond = 56844.7
 Epoch[ 2 of 3]-Minibatch[  21-  21, 52.50%]: crossEntropy = 7.42575073 * 8192; time = 0.1449s; samplesPerSecond = 56543.0
 Epoch[ 2 of 3]-Minibatch[  22-  22, 55.00%]: crossEntropy = 7.38905334 * 8192; time = 0.1461s; samplesPerSecond = 56080.8
 Epoch[ 2 of 3]-Minibatch[  23-  23, 57.50%]: crossEntropy = 7.22575378 * 8192; time = 0.1458s; samplesPerSecond = 56204.3
 Epoch[ 2 of 3]-Minibatch[  24-  24, 60.00%]: crossEntropy = 7.12667847 * 8192; time = 0.1458s; samplesPerSecond = 56185.4
 Epoch[ 2 of 3]-Minibatch[  25-  25, 62.50%]: crossEntropy = 6.99954224 * 8192; time = 0.1445s; samplesPerSecond = 56707.0
 Epoch[ 2 of 3]-Minibatch[  26-  26, 65.00%]: crossEntropy = 7.01811218 * 8192; time = 0.1450s; samplesPerSecond = 56510.6
 Epoch[ 2 of 3]-Minibatch[  27-  27, 67.50%]: crossEntropy = 7.13748169 * 8192; time = 0.1440s; samplesPerSecond = 56871.1
 Epoch[ 2 of 3]-Minibatch[  28-  28, 70.00%]: crossEntropy = 6.93765259 * 8192; time = 0.1452s; samplesPerSecond = 56403.6
 Epoch[ 2 of 3]-Minibatch[  29-  29, 72.50%]: crossEntropy = 7.14068604 * 8192; time = 0.1450s; samplesPerSecond = 56494.2
 Epoch[ 2 of 3]-Minibatch[  30-  30, 75.00%]: crossEntropy = 7.18640137 * 8192; time = 0.1456s; samplesPerSecond = 56245.2
 Epoch[ 2 of 3]-Minibatch[  31-  31, 77.50%]: crossEntropy = 6.99797058 * 8192; time = 0.1449s; samplesPerSecond = 56519.2
 Epoch[ 2 of 3]-Minibatch[  32-  32, 80.00%]: crossEntropy = 6.99339294 * 8192; time = 0.1435s; samplesPerSecond = 57101.0
 Epoch[ 2 of 3]-Minibatch[  33-  33, 82.50%]: crossEntropy = 6.91558838 * 8192; time = 0.1437s; samplesPerSecond = 57005.3
 Epoch[ 2 of 3]-Minibatch[  34-  34, 85.00%]: crossEntropy = 6.87400818 * 8192; time = 0.1440s; samplesPerSecond = 56901.5
 Epoch[ 2 of 3]-Minibatch[  35-  35, 87.50%]: crossEntropy = 6.98202515 * 8192; time = 0.1441s; samplesPerSecond = 56831.3
 Epoch[ 2 of 3]-Minibatch[  36-  36, 90.00%]: crossEntropy = 6.83021545 * 8192; time = 0.1455s; samplesPerSecond = 56309.8
 Epoch[ 2 of 3]-Minibatch[  37-  37, 92.50%]: crossEntropy = 7.06079102 * 8192; time = 0.1452s; samplesPerSecond = 56410.6
 Epoch[ 2 of 3]-Minibatch[  38-  38, 95.00%]: crossEntropy = 6.95040894 * 8192; time = 0.1440s; samplesPerSecond = 56872.3
 Epoch[ 2 of 3]-Minibatch[  39-  39, 97.50%]: crossEntropy = 7.02764893 * 8192; time = 0.1428s; samplesPerSecond = 57347.7
 Epoch[ 2 of 3]-Minibatch[  40-  40, 100.00%]: crossEntropy = 7.06146240 * 8192; time = 0.1418s; samplesPerSecond = 57766.2
Finished Epoch[ 2 of 3]: [Training] crossEntropy = 7.10045547 * 327680; totalSamplesSeen = 663551; learningRatePerSample = 9.9999997e-05; epochTime=5.79821s
SGD: Saving checkpoint model './Output/lstm64/lstm64.dnn.2'

Starting Epoch 3: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 3 of 3]-Minibatch[   1-   1, 2.50%]: crossEntropy = 6.80466938 * 8192; time = 0.1487s; samplesPerSecond = 55089.7
 Epoch[ 3 of 3]-Minibatch[   2-   2, 5.00%]: crossEntropy = 6.99141788 * 8192; time = 0.1456s; samplesPerSecond = 56276.1
 Epoch[ 3 of 3]-Minibatch[   3-   3, 7.50%]: crossEntropy = 6.95058632 * 8192; time = 0.1458s; samplesPerSecond = 56175.4
 Epoch[ 3 of 3]-Minibatch[   4-   4, 10.00%]: crossEntropy = 6.87241936 * 8192; time = 0.1450s; samplesPerSecond = 56487.2
 Epoch[ 3 of 3]-Minibatch[   5-   5, 12.50%]: crossEntropy = 6.93601036 * 8192; time = 0.1444s; samplesPerSecond = 56742.7
 Epoch[ 3 of 3]-Minibatch[   6-   6, 15.00%]: crossEntropy = 6.85274506 * 8192; time = 0.1446s; samplesPerSecond = 56668.5
 Epoch[ 3 of 3]-Minibatch[   7-   7, 17.50%]: crossEntropy = 6.96455383 * 8192; time = 0.1441s; samplesPerSecond = 56847.8
 Epoch[ 3 of 3]-Minibatch[   8-   8, 20.00%]: crossEntropy = 6.85884476 * 8192; time = 0.1445s; samplesPerSecond = 56680.7
 Epoch[ 3 of 3]-Minibatch[   9-   9, 22.50%]: crossEntropy = 6.87840271 * 8192; time = 0.1450s; samplesPerSecond = 56478.2
 Epoch[ 3 of 3]-Minibatch[  10-  10, 25.00%]: crossEntropy = 6.80199432 * 8192; time = 0.1451s; samplesPerSecond = 56449.8
 Epoch[ 3 of 3]-Minibatch[  11-  11, 27.50%]: crossEntropy = 6.89996338 * 8192; time = 0.1464s; samplesPerSecond = 55950.2
 Epoch[ 3 of 3]-Minibatch[  12-  12, 30.00%]: crossEntropy = 7.14690399 * 8192; time = 0.1453s; samplesPerSecond = 56364.0
 Epoch[ 3 of 3]-Minibatch[  13-  13, 32.50%]: crossEntropy = 6.85994720 * 8192; time = 0.1434s; samplesPerSecond = 57107.4
 Epoch[ 3 of 3]-Minibatch[  14-  14, 35.00%]: crossEntropy = 6.78353882 * 8192; time = 0.1438s; samplesPerSecond = 56986.2
 Epoch[ 3 of 3]-Minibatch[  15-  15, 37.50%]: crossEntropy = 6.98394012 * 8192; time = 0.1440s; samplesPerSecond = 56898.0
 Epoch[ 3 of 3]-Minibatch[  16-  16, 40.00%]: crossEntropy = 7.08823395 * 8192; time = 0.1460s; samplesPerSecond = 56111.1
 Epoch[ 3 of 3]-Minibatch[  17-  17, 42.50%]: crossEntropy = 6.97328949 * 8192; time = 0.1446s; samplesPerSecond = 56636.4
 Epoch[ 3 of 3]-Minibatch[  18-  18, 45.00%]: crossEntropy = 7.10210419 * 8192; time = 0.1449s; samplesPerSecond = 56541.8
 Epoch[ 3 of 3]-Minibatch[  19-  19, 47.50%]: crossEntropy = 7.14275360 * 8192; time = 0.1447s; samplesPerSecond = 56606.3
 Epoch[ 3 of 3]-Minibatch[  20-  20, 50.00%]: crossEntropy = 6.90354919 * 8192; time = 0.1443s; samplesPerSecond = 56773.0
 Epoch[ 3 of 3]-Minibatch[  21-  21, 52.50%]: crossEntropy = 6.99324036 * 8192; time = 0.1447s; samplesPerSecond = 56614.5
 Epoch[ 3 of 3]-Minibatch[  22-  22, 55.00%]: crossEntropy = 6.99568176 * 8192; time = 0.1439s; samplesPerSecond = 56912.2
 Epoch[ 3 of 3]-Minibatch[  23-  23, 57.50%]: crossEntropy = 6.68896484 * 8192; time = 0.1453s; samplesPerSecond = 56368.3
 Epoch[ 3 of 3]-Minibatch[  24-  24, 60.00%]: crossEntropy = 6.94960022 * 8192; time = 0.1458s; samplesPerSecond = 56192.3
 Epoch[ 3 of 3]-Minibatch[  25-  25, 62.50%]: crossEntropy = 6.87670898 * 8192; time = 0.1445s; samplesPerSecond = 56676.4
 Epoch[ 3 of 3]-Minibatch[  26-  26, 65.00%]: crossEntropy = 6.70103455 * 8192; time = 0.1450s; samplesPerSecond = 56489.5
 Epoch[ 3 of 3]-Minibatch[  27-  27, 67.50%]: crossEntropy = 6.74923706 * 8192; time = 0.1436s; samplesPerSecond = 57064.4
 Epoch[ 3 of 3]-Minibatch[  28-  28, 70.00%]: crossEntropy = 6.71078491 * 8192; time = 0.1435s; samplesPerSecond = 57104.6
 Epoch[ 3 of 3]-Minibatch[  29-  29, 72.50%]: crossEntropy = 6.72012329 * 8192; time = 0.1435s; samplesPerSecond = 57096.7
 Epoch[ 3 of 3]-Minibatch[  30-  30, 75.00%]: crossEntropy = 6.84284973 * 8192; time = 0.1438s; samplesPerSecond = 56964.8
 Epoch[ 3 of 3]-Minibatch[  31-  31, 77.50%]: crossEntropy = 6.80891418 * 8192; time = 0.1446s; samplesPerSecond = 56666.6
 Epoch[ 3 of 3]-Minibatch[  32-  32, 80.00%]: crossEntropy = 6.90989685 * 8192; time = 0.1459s; samplesPerSecond = 56128.8
 Epoch[ 3 of 3]-Minibatch[  33-  33, 82.50%]: crossEntropy = 6.92042542 * 8192; time = 0.1437s; samplesPerSecond = 56995.4
 Epoch[ 3 of 3]-Minibatch[  34-  34, 85.00%]: crossEntropy = 6.85647786 * 3840; time = 0.0757s; samplesPerSecond = 50697.8
 Epoch[ 3 of 3]-Minibatch[  35-  35, 87.50%]: crossEntropy = 7.09490741 * 54; time = 0.0304s; samplesPerSecond = 1774.3
 Epoch[ 3 of 3]-Minibatch[  36-  36, 90.00%]: crossEntropy = 6.88891771 * 8191; time = 0.1470s; samplesPerSecond = 55722.2
 Epoch[ 3 of 3]-Minibatch[  37-  37, 92.50%]: crossEntropy = 6.80738831 * 8192; time = 0.1442s; samplesPerSecond = 56827.7
 Epoch[ 3 of 3]-Minibatch[  38-  38, 95.00%]: crossEntropy = 6.99064636 * 8192; time = 0.1450s; samplesPerSecond = 56512.9
 Epoch[ 3 of 3]-Minibatch[  39-  39, 97.50%]: crossEntropy = 6.87455750 * 8192; time = 0.1452s; samplesPerSecond = 56408.2
 Epoch[ 3 of 3]-Minibatch[  40-  40, 100.00%]: crossEntropy = 6.82403564 * 8192; time = 0.1451s; samplesPerSecond = 56445.6
 Epoch[ 3 of 3]-Minibatch[  41-  41, 102.50%]: crossEntropy = 6.84204102 * 8192; time = 0.1453s; samplesPerSecond = 56374.1
 Epoch[ 3 of 3]-Minibatch[  42-  42, 105.00%]: crossEntropy = 6.93173218 * 8192; time = 0.1414s; samplesPerSecond = 57950.9
Finished Epoch[ 3 of 3]: [Training] crossEntropy = 6.89514602 * 331573; totalSamplesSeen = 995124; learningRatePerSample = 9.9999997e-05; epochTime=5.8998s
SGD: Saving checkpoint model './Output/lstm64/lstm64.dnn'

Action "train" complete.

COMPLETED.
