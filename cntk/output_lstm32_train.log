-------------------------------------------------------------------
Build info: 

		Built time: Aug 30 2016 14:07:49
		Last modified date: Mon Aug 29 18:55:53 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.1
		Build Branch: HEAD
		Build SHA1: 2f9c73cab134c45ab3ddcf1ca6873cc4d18dec34
		Built by philly on 17068eac0c7b
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12204 MB
		Device[1]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[2]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[3]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
-------------------------------------------------------------------

Running on localhost at 2016/09/22 09:35:01
Command line: 
cntk/cntk/bin/cntk  configFile=rnn/PennTreebank/Config/rnn.cntk  configName=lstm32  deviceId=0  minibatchSize=4096  epochSize=409600  DataDir=rnn/PennTreebank/Data  ConfigDir=rnn/PennTreebank/Config  trainFile=ptb.train.32.ctf


Configuration After Processing and Variable Resolution:

configparameters: rnn.cntk:command=train
configparameters: rnn.cntk:ConfigDir=rnn/PennTreebank/Config
configparameters: rnn.cntk:configName=lstm32
configparameters: rnn.cntk:confVocabSize=10000
configparameters: rnn.cntk:DataDir=rnn/PennTreebank/Data
configparameters: rnn.cntk:deviceId=0
configparameters: rnn.cntk:epochSize=409600
configparameters: rnn.cntk:maxEpochs=3
configparameters: rnn.cntk:maxTempMemSizeInSamplesForCNN=1
configparameters: rnn.cntk:minibatchSize=4096
configparameters: rnn.cntk:ModelDir=./Output/lstm32
configparameters: rnn.cntk:modelPath=./Output/lstm32/lstm32.dnn
configparameters: rnn.cntk:OutputDir=./Output
configparameters: rnn.cntk:precision=float
configparameters: rnn.cntk:RootDir=.
configparameters: rnn.cntk:shareNodeValueMatrices=true
configparameters: rnn.cntk:stderr=./output_lstm32
configparameters: rnn.cntk:traceLevel=1
configparameters: rnn.cntk:train=[
    action = "train"
    traceLevel = 1
epochSize = 0               
    BrainScriptNetworkBuilder = [
        inputDim = 10000
        labelDim = 10000
        embedDim = 256
        hiddenDim = (256:256)
        model(x) = [
            E = ParameterTensor (embedDim:inputDim)
            e = E * x
            h = RecurrentLSTMLayerStack (hiddenDim, cellShapes=hiddenDim, allowOptimizedEngine = true)(e)
            W = ParameterTensor (labelDim:hiddenDim[1]) 
            b = ParameterTensor (labelDim,init='fixedValue',value=0);
            z = W * h + b
        ].z
        words  = if deviceId >= 0 then SparseInput (inputDim) else Input (inputDim)
        labels = Input (inputDim)
        z = model(words)
        crossEntropy = CrossEntropyWithSoftmax(labels, z)
        featureNodes    = (words)
        labelNodes      = (labels)
        criterionNodes  = (crossEntropy)
        evaluationNodes = (crossEntropy)
        outputNodes     = (z)
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "rnn/PennTreebank/Data/ptb.train.32.ctf"
        randomize = false
        traceLevel = 0
        input = [
            words  = [ alias = "S0"; dim = 10000; format = "sparse" ]
            labels = [ alias = "S1"; dim = 10000; format = "sparse" ]
        ]
    ]
    SGD = [
        epochSize=409600
        minibatchSize = 4096 
        learningRatesPerSample = 0.0001
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 3 
        numMBsToShowResult = 1
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
]

configparameters: rnn.cntk:trainFile=ptb.train.32.ctf
Commands: train
Precision = "float"
CNTKModelPath: ./Output/lstm32/lstm32.dnn
CNTKCommandTrainInfo: train : 3
CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

##############################################################################
#                                                                            #
# Action "train"                                                             #
#                                                                            #
##############################################################################

CNTKCommandTrainBegin: train

Creating virgin network.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[10000 x 256] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[10000 x 256] <- uniform(seed=1, init dims=[10000 x 256], range=0.050000*1.000000, onCPU=true).
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as heNormal later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as heNormal later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[256 x 10000] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[256 x 10000] <- uniform(seed=4, init dims=[256 x 10000], range=0.050000*1.000000, onCPU=true).
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- heNormal(seed=5, init dims=[1024 x 256], range=0.088388*1.000000, onCPU=true).
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- heNormal(seed=6, init dims=[1024 x 256], range=0.088388*1.000000, onCPU=true).
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[10000] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[10000] <- 0.000000.

Post-processing network...

2 roots:
	crossEntropy = CrossEntropyWithSoftmax()
	z = Plus()

Loop[0] --> Loop_z.h.x.lstmState._.ht -> 17 nodes

	z.h.x.prevState.h	z.h.x.lstmState._.proj4.PlusArgs[1]	z.h.x.lstmState._.proj4
	z.h.x.lstmState._.otProj	z.h.x.lstmState._.ot	z.h.x.lstmState._.ftProj
	z.h.x.lstmState._.ft	z.h.x.prevState.c	z.h.x.lstmState._.bft
	z.h.x.lstmState._.itProj	z.h.x.lstmState._.it	z.h.x.lstmState._.bitProj
	z.h.x.lstmState._.bit.ElementTimesArgs[1]	z.h.x.lstmState._.bit	z.h.x.lstmState._.ct
	z.h.x.lstmState._.ht.ElementTimesArgs[1]	z.h.x.lstmState._.ht

Loop[1] --> Loop_z.h.lstmState._.ht -> 17 nodes

	z.h.prevState.h	z.h.lstmState._.proj4.PlusArgs[1]	z.h.lstmState._.proj4
	z.h.lstmState._.otProj	z.h.lstmState._.ot	z.h.lstmState._.ftProj
	z.h.lstmState._.ft	z.h.prevState.c	z.h.lstmState._.bft
	z.h.lstmState._.itProj	z.h.lstmState._.it	z.h.lstmState._.bitProj
	z.h.lstmState._.bit.ElementTimesArgs[1]	z.h.lstmState._.bit	z.h.lstmState._.ct
	z.h.lstmState._.ht.ElementTimesArgs[1]	z.h.lstmState._.ht

Validating network. 53 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10000 x *]
Validating --> z.W = LearnableParameter() :  -> [10000 x 256]
Validating --> z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> _z.E = LearnableParameter() :  -> [256 x 10000]
Validating --> words = SparseInputValue() :  -> [10000 x *]
Validating --> z.e = Times (_z.E, words) : [256 x 10000], [10000 x *] -> [256 x *]
Node 'z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- heNormal(seed=3, init dims=[1024 x 256], range=0.088388*1.000000, onCPU=true).
Validating --> z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1] = Times (z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.e) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[0] = Plus (z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[0], z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1]) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[1] = Times (z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0], z.h.x.prevState.h) : [1024 x 256], [0] -> [1024]
Validating --> z.h.x.lstmState._.proj4 = Plus (z.h.x.lstmState._.proj4.PlusArgs[0], z.h.x.lstmState._.proj4.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.h.x.lstmState._.otProj = Slice (z.h.x.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ot = Sigmoid (z.h.x.lstmState._.otProj) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ftProj = Slice (z.h.x.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ft = Sigmoid (z.h.x.lstmState._.ftProj) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.bft = ElementTimes (z.h.x.lstmState._.ft, z.h.x.prevState.c) : [256 x *], [0] -> [256 x *]
Validating --> z.h.x.lstmState._.itProj = Slice (z.h.x.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.it = Sigmoid (z.h.x.lstmState._.itProj) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.bitProj = Slice (z.h.x.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.bit.ElementTimesArgs[1] = Tanh (z.h.x.lstmState._.bitProj) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.bit = ElementTimes (z.h.x.lstmState._.it, z.h.x.lstmState._.bit.ElementTimesArgs[1]) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ct = Plus (z.h.x.lstmState._.bft, z.h.x.lstmState._.bit) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ht.ElementTimesArgs[1] = Tanh (z.h.x.lstmState._.ct) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.ht = ElementTimes (z.h.x.lstmState._.ot, z.h.x.lstmState._.ht.ElementTimesArgs[1]) : [256 x *], [256 x *] -> [256 x *]
Node 'z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- heNormal(seed=2, init dims=[1024 x 256], range=0.088388*1.000000, onCPU=true).
Validating --> z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1] = Times (z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.h.x.lstmState._.ht) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.h.lstmState._.proj4.PlusArgs[0] = Plus (z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[0], z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1]) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.h.lstmState._.proj4.PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.h.lstmState._.proj4.PlusArgs[1] = Times (z.h.lstmState._.proj4.PlusArgs[1].TimesArgs[0], z.h.prevState.h) : [1024 x 256], [0] -> [1024]
Validating --> z.h.lstmState._.proj4 = Plus (z.h.lstmState._.proj4.PlusArgs[0], z.h.lstmState._.proj4.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.h.lstmState._.otProj = Slice (z.h.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.lstmState._.ot = Sigmoid (z.h.lstmState._.otProj) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.ftProj = Slice (z.h.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.lstmState._.ft = Sigmoid (z.h.lstmState._.ftProj) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.bft = ElementTimes (z.h.lstmState._.ft, z.h.prevState.c) : [256 x *], [0] -> [256 x *]
Validating --> z.h.lstmState._.itProj = Slice (z.h.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.lstmState._.it = Sigmoid (z.h.lstmState._.itProj) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.bitProj = Slice (z.h.lstmState._.proj4) : [1024 x *] -> [256 x *]
Validating --> z.h.lstmState._.bit.ElementTimesArgs[1] = Tanh (z.h.lstmState._.bitProj) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.bit = ElementTimes (z.h.lstmState._.it, z.h.lstmState._.bit.ElementTimesArgs[1]) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.ct = Plus (z.h.lstmState._.bft, z.h.lstmState._.bit) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.ht.ElementTimesArgs[1] = Tanh (z.h.lstmState._.ct) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.ht = ElementTimes (z.h.lstmState._.ot, z.h.lstmState._.ht.ElementTimesArgs[1]) : [256 x *], [256 x *] -> [256 x *]
Validating --> z.z.PlusArgs[0] = Times (z.W, z.h.lstmState._.ht) : [10000 x 256], [256 x *] -> [10000 x *]
Validating --> z.b = LearnableParameter() :  -> [10000]
Validating --> z = Plus (z.z.PlusArgs[0], z.b) : [10000 x *], [10000] -> [10000 x *]
Validating --> crossEntropy = CrossEntropyWithSoftmax (labels, z) : [10000 x *], [10000 x *] -> [1]

Validating network. 42 nodes to process in pass 2.

Validating --> z.h.x.prevState.h = PastValue (z.h.x.lstmState._.ht) : [256 x *] -> [256 x *]
Validating --> z.h.x.lstmState._.proj4.PlusArgs[1] = Times (z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0], z.h.x.prevState.h) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.h.x.prevState.c = PastValue (z.h.x.lstmState._.ct) : [256 x *] -> [256 x *]
Validating --> z.h.prevState.h = PastValue (z.h.lstmState._.ht) : [256 x *] -> [256 x *]
Validating --> z.h.lstmState._.proj4.PlusArgs[1] = Times (z.h.lstmState._.proj4.PlusArgs[1].TimesArgs[0], z.h.prevState.h) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.h.prevState.c = PastValue (z.h.lstmState._.ct) : [256 x *] -> [256 x *]

Validating network. 6 nodes to process in pass 3.


Validating network, final pass.



10 out of 53 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

Created model with 53 nodes on GPU 0.

Training criterion node(s):
	crossEntropy = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 104 matrices, 58 are shared as 26, and 46 are not shared.

	{ z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[0] : [1024] (gradient)
	  z.h.prevState.h : [256 x *] }
	{ z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[0] : [1024] (gradient)
	  z.h.x.prevState.h : [256 x *] }
	{ z.h.prevState.c : [256 x *]
	  z.h.x.lstmState._.proj4 : [1024 x *] (gradient) }
	{ z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1] : [1024 x *]
	  z.h.lstmState._.proj4.PlusArgs[1] : [1024 x *]
	  z.h.x.lstmState._.proj4.PlusArgs[0] : [1024 x *] }
	{ z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1] : [1024 x *]
	  z.h.x.lstmState._.proj4.PlusArgs[1] : [1024 x *] }
	{ z.h.lstmState._.proj4.PlusArgs[0] : [1024 x *]
	  z.z.PlusArgs[0] : [10000 x *] }
	{ z.h.lstmState._.ot : [256 x *]
	  z.h.x.lstmState._.bft : [256 x *] (gradient) }
	{ z.h.lstmState._.ft : [256 x *]
	  z.h.x.lstmState._.bit.ElementTimesArgs[1] : [256 x *] (gradient) }
	{ z.h.lstmState._.it : [256 x *]
	  z.h.x.lstmState._.ftProj : [256 x *] (gradient) }
	{ z.e : [256 x *] (gradient)
	  z.h.lstmState._.bit.ElementTimesArgs[1] : [256 x *]
	  z.h.x.lstmState._.proj4.PlusArgs[1] : [1024 x *] (gradient) }
	{ z : [10000 x *] (gradient)
	  z.W : [10000 x 256] (gradient) }
	{ z.h.lstmState._.ot : [256 x *] (gradient)
	  z.h.x.lstmState._.bit : [256 x *] (gradient)
	  z.z.PlusArgs[0] : [10000 x *] (gradient) }
	{ z.h.lstmState._.bft : [256 x *] (gradient)
	  z.h.x.lstmState._.ft : [256 x *] (gradient) }
	{ z.h.lstmState._.bit : [256 x *] (gradient)
	  z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1] : [1024 x *] (gradient)
	  z.h.x.prevState.h : [256 x *] (gradient) }
	{ z.h.lstmState._.it : [256 x *] (gradient)
	  z.h.x.lstmState._.otProj : [256 x *] (gradient) }
	{ z.h.lstmState._.bit.ElementTimesArgs[1] : [256 x *] (gradient)
	  z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient) }
	{ z.h.lstmState._.bitProj : [256 x *] (gradient)
	  z.h.x.lstmState._.proj4.PlusArgs[0] : [1024 x *] (gradient)
	  z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient) }
	{ z.h.lstmState._.proj4 : [1024 x *] (gradient)
	  z.h.x.lstmState._.ht.ElementTimesArgs[1] : [256 x *] (gradient) }
	{ z.h.lstmState._.itProj : [256 x *] (gradient)
	  z.h.x.prevState.c : [256 x *] (gradient) }
	{ z.h.lstmState._.ft : [256 x *] (gradient)
	  z.h.x.lstmState._.bitProj : [256 x *] (gradient) }
	{ z.h.prevState.c : [256 x *] (gradient)
	  z.h.x.lstmState._.itProj : [256 x *] (gradient) }
	{ z.h.lstmState._.ftProj : [256 x *] (gradient)
	  z.h.x.lstmState._.it : [256 x *] (gradient) }
	{ z.h.lstmState._.otProj : [256 x *] (gradient)
	  z.h.x.lstmState._.ct : [256 x *] (gradient) }
	{ z.h.lstmState._.proj4.PlusArgs[0] : [1024 x *] (gradient)
	  z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient) }
	{ z.h.lstmState._.proj4.PlusArgs[1] : [1024 x *] (gradient)
	  z.h.x.lstmState._.ht : [256 x *] (gradient) }
	{ z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1] : [1024 x *] (gradient)
	  z.h.prevState.h : [256 x *] (gradient)
	  z.h.x.lstmState._.ot : [256 x *] (gradient) }


Training 6180624 parameters in 9 out of 9 parameter tensors and 51 nodes with gradient:

	Node '_z.E' (LearnableParameter operation) : [256 x 10000]
	Node 'z.W' (LearnableParameter operation) : [10000 x 256]
	Node 'z.b' (LearnableParameter operation) : [10000]
	Node 'z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[0]' (LearnableParameter operation) : [1024]
	Node 'z.h.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
	Node 'z.h.lstmState._.proj4.PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
	Node 'z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[0]' (LearnableParameter operation) : [1024]
	Node 'z.h.x.lstmState._.proj4.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
	Node 'z.h.x.lstmState._.proj4.PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]

No PreCompute nodes found, or all already computed. Skipping pre-computation step.
Setting max temp memory size for Convolution operations to 1 samples.
WARNING: No Convolution operation found.

Starting Epoch 1: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 1 of 3]-Minibatch[   1-   1, 1.00%]: crossEntropy = 9.21055784 * 4095; time = 0.7674s; samplesPerSecond = 5336.1
 Epoch[ 1 of 3]-Minibatch[   2-   2, 2.00%]: crossEntropy = 9.20462036 * 4096; time = 0.0709s; samplesPerSecond = 57738.9
 Epoch[ 1 of 3]-Minibatch[   3-   3, 3.00%]: crossEntropy = 9.19758797 * 4096; time = 0.0664s; samplesPerSecond = 61717.4
 Epoch[ 1 of 3]-Minibatch[   4-   4, 4.00%]: crossEntropy = 9.19251442 * 4096; time = 0.0635s; samplesPerSecond = 64548.7
 Epoch[ 1 of 3]-Minibatch[   5-   5, 5.00%]: crossEntropy = 9.18666840 * 4096; time = 0.0625s; samplesPerSecond = 65525.5
 Epoch[ 1 of 3]-Minibatch[   6-   6, 6.00%]: crossEntropy = 9.18044662 * 4096; time = 0.0639s; samplesPerSecond = 64112.2
 Epoch[ 1 of 3]-Minibatch[   7-   7, 7.00%]: crossEntropy = 9.17190933 * 4096; time = 0.0622s; samplesPerSecond = 65896.6
 Epoch[ 1 of 3]-Minibatch[   8-   8, 8.00%]: crossEntropy = 9.17057800 * 4096; time = 0.0622s; samplesPerSecond = 65874.3
 Epoch[ 1 of 3]-Minibatch[   9-   9, 9.00%]: crossEntropy = 9.15885925 * 4096; time = 0.0625s; samplesPerSecond = 65503.5
 Epoch[ 1 of 3]-Minibatch[  10-  10, 10.00%]: crossEntropy = 9.15456390 * 4096; time = 0.0623s; samplesPerSecond = 65786.5
 Epoch[ 1 of 3]-Minibatch[  11-  11, 11.00%]: crossEntropy = 9.14675140 * 4096; time = 0.0625s; samplesPerSecond = 65483.6
 Epoch[ 1 of 3]-Minibatch[  12-  12, 12.00%]: crossEntropy = 9.13928223 * 4096; time = 0.0625s; samplesPerSecond = 65515.0
 Epoch[ 1 of 3]-Minibatch[  13-  13, 13.00%]: crossEntropy = 9.12609863 * 4096; time = 0.0626s; samplesPerSecond = 65478.4
 Epoch[ 1 of 3]-Minibatch[  14-  14, 14.00%]: crossEntropy = 9.12895203 * 4096; time = 0.0622s; samplesPerSecond = 65815.1
 Epoch[ 1 of 3]-Minibatch[  15-  15, 15.00%]: crossEntropy = 9.11630249 * 4096; time = 0.0621s; samplesPerSecond = 65933.7
 Epoch[ 1 of 3]-Minibatch[  16-  16, 16.00%]: crossEntropy = 9.10394287 * 4096; time = 0.0627s; samplesPerSecond = 65361.4
 Epoch[ 1 of 3]-Minibatch[  17-  17, 17.00%]: crossEntropy = 9.08650208 * 4096; time = 0.0625s; samplesPerSecond = 65568.5
 Epoch[ 1 of 3]-Minibatch[  18-  18, 18.00%]: crossEntropy = 9.07722473 * 4096; time = 0.0627s; samplesPerSecond = 65311.3
 Epoch[ 1 of 3]-Minibatch[  19-  19, 19.00%]: crossEntropy = 9.05151367 * 4096; time = 0.0627s; samplesPerSecond = 65312.4
 Epoch[ 1 of 3]-Minibatch[  20-  20, 20.00%]: crossEntropy = 9.03884888 * 4096; time = 0.0633s; samplesPerSecond = 64744.6
 Epoch[ 1 of 3]-Minibatch[  21-  21, 21.00%]: crossEntropy = 9.00749207 * 4096; time = 0.0624s; samplesPerSecond = 65640.0
 Epoch[ 1 of 3]-Minibatch[  22-  22, 22.00%]: crossEntropy = 8.96322632 * 4096; time = 0.0627s; samplesPerSecond = 65295.7
 Epoch[ 1 of 3]-Minibatch[  23-  23, 23.00%]: crossEntropy = 8.90145874 * 4096; time = 0.0627s; samplesPerSecond = 65337.4
 Epoch[ 1 of 3]-Minibatch[  24-  24, 24.00%]: crossEntropy = 8.86514282 * 4096; time = 0.0626s; samplesPerSecond = 65428.2
 Epoch[ 1 of 3]-Minibatch[  25-  25, 25.00%]: crossEntropy = 8.81993103 * 4096; time = 0.0618s; samplesPerSecond = 66309.4
 Epoch[ 1 of 3]-Minibatch[  26-  26, 26.00%]: crossEntropy = 8.71221924 * 4096; time = 0.0624s; samplesPerSecond = 65638.9
 Epoch[ 1 of 3]-Minibatch[  27-  27, 27.00%]: crossEntropy = 8.61256409 * 4096; time = 0.0626s; samplesPerSecond = 65383.3
 Epoch[ 1 of 3]-Minibatch[  28-  28, 28.00%]: crossEntropy = 8.62118530 * 4096; time = 0.0623s; samplesPerSecond = 65758.0
 Epoch[ 1 of 3]-Minibatch[  29-  29, 29.00%]: crossEntropy = 8.36544800 * 4096; time = 0.0624s; samplesPerSecond = 65660.0
 Epoch[ 1 of 3]-Minibatch[  30-  30, 30.00%]: crossEntropy = 8.27536011 * 4096; time = 0.0623s; samplesPerSecond = 65791.8
 Epoch[ 1 of 3]-Minibatch[  31-  31, 31.00%]: crossEntropy = 8.10641479 * 4096; time = 0.0623s; samplesPerSecond = 65727.4
 Epoch[ 1 of 3]-Minibatch[  32-  32, 32.00%]: crossEntropy = 8.02371216 * 4096; time = 0.0624s; samplesPerSecond = 65649.4
 Epoch[ 1 of 3]-Minibatch[  33-  33, 33.00%]: crossEntropy = 7.97894287 * 4096; time = 0.0619s; samplesPerSecond = 66164.8
 Epoch[ 1 of 3]-Minibatch[  34-  34, 34.00%]: crossEntropy = 7.90551758 * 4096; time = 0.0624s; samplesPerSecond = 65623.1
 Epoch[ 1 of 3]-Minibatch[  35-  35, 35.00%]: crossEntropy = 7.76907349 * 4096; time = 0.0624s; samplesPerSecond = 65692.6
 Epoch[ 1 of 3]-Minibatch[  36-  36, 36.00%]: crossEntropy = 7.76766968 * 4096; time = 0.0627s; samplesPerSecond = 65343.6
 Epoch[ 1 of 3]-Minibatch[  37-  37, 37.00%]: crossEntropy = 7.67504883 * 4096; time = 0.0629s; samplesPerSecond = 65138.9
 Epoch[ 1 of 3]-Minibatch[  38-  38, 38.00%]: crossEntropy = 7.70272827 * 4096; time = 0.0619s; samplesPerSecond = 66202.3
 Epoch[ 1 of 3]-Minibatch[  39-  39, 39.00%]: crossEntropy = 7.67916870 * 4096; time = 0.0627s; samplesPerSecond = 65368.7
 Epoch[ 1 of 3]-Minibatch[  40-  40, 40.00%]: crossEntropy = 7.64282227 * 4096; time = 0.0624s; samplesPerSecond = 65671.5
 Epoch[ 1 of 3]-Minibatch[  41-  41, 41.00%]: crossEntropy = 7.51156616 * 4096; time = 0.0619s; samplesPerSecond = 66173.4
 Epoch[ 1 of 3]-Minibatch[  42-  42, 42.00%]: crossEntropy = 7.47348022 * 4096; time = 0.0618s; samplesPerSecond = 66265.5
 Epoch[ 1 of 3]-Minibatch[  43-  43, 43.00%]: crossEntropy = 7.42465210 * 4096; time = 0.0627s; samplesPerSecond = 65367.6
 Epoch[ 1 of 3]-Minibatch[  44-  44, 44.00%]: crossEntropy = 7.64483643 * 4096; time = 0.0628s; samplesPerSecond = 65246.8
 Epoch[ 1 of 3]-Minibatch[  45-  45, 45.00%]: crossEntropy = 7.47747803 * 4096; time = 0.0627s; samplesPerSecond = 65348.8
 Epoch[ 1 of 3]-Minibatch[  46-  46, 46.00%]: crossEntropy = 7.60644531 * 4096; time = 0.0627s; samplesPerSecond = 65289.5
 Epoch[ 1 of 3]-Minibatch[  47-  47, 47.00%]: crossEntropy = 7.54244995 * 4096; time = 0.0627s; samplesPerSecond = 65345.7
 Epoch[ 1 of 3]-Minibatch[  48-  48, 48.00%]: crossEntropy = 7.31457520 * 4096; time = 0.0625s; samplesPerSecond = 65536.0
 Epoch[ 1 of 3]-Minibatch[  49-  49, 49.00%]: crossEntropy = 7.35293579 * 4096; time = 0.0624s; samplesPerSecond = 65608.4
 Epoch[ 1 of 3]-Minibatch[  50-  50, 50.00%]: crossEntropy = 7.47772217 * 4096; time = 0.0627s; samplesPerSecond = 65347.8
 Epoch[ 1 of 3]-Minibatch[  51-  51, 51.00%]: crossEntropy = 7.42355347 * 4096; time = 0.0627s; samplesPerSecond = 65280.1
 Epoch[ 1 of 3]-Minibatch[  52-  52, 52.00%]: crossEntropy = 7.41036987 * 4096; time = 0.0623s; samplesPerSecond = 65704.2
 Epoch[ 1 of 3]-Minibatch[  53-  53, 53.00%]: crossEntropy = 7.30130005 * 4096; time = 0.0624s; samplesPerSecond = 65650.5
 Epoch[ 1 of 3]-Minibatch[  54-  54, 54.00%]: crossEntropy = 7.19866943 * 4096; time = 0.0627s; samplesPerSecond = 65320.7
 Epoch[ 1 of 3]-Minibatch[  55-  55, 55.00%]: crossEntropy = 7.28918457 * 4096; time = 0.0623s; samplesPerSecond = 65719.0
 Epoch[ 1 of 3]-Minibatch[  56-  56, 56.00%]: crossEntropy = 7.30197144 * 4096; time = 0.0628s; samplesPerSecond = 65185.6
 Epoch[ 1 of 3]-Minibatch[  57-  57, 57.00%]: crossEntropy = 7.22705078 * 4096; time = 0.0623s; samplesPerSecond = 65712.6
 Epoch[ 1 of 3]-Minibatch[  58-  58, 58.00%]: crossEntropy = 7.27282715 * 4096; time = 0.0628s; samplesPerSecond = 65274.9
 Epoch[ 1 of 3]-Minibatch[  59-  59, 59.00%]: crossEntropy = 7.24755859 * 4096; time = 0.0627s; samplesPerSecond = 65346.8
 Epoch[ 1 of 3]-Minibatch[  60-  60, 60.00%]: crossEntropy = 7.24780273 * 4096; time = 0.0622s; samplesPerSecond = 65809.8
 Epoch[ 1 of 3]-Minibatch[  61-  61, 61.00%]: crossEntropy = 7.24902344 * 4096; time = 0.0624s; samplesPerSecond = 65646.3
 Epoch[ 1 of 3]-Minibatch[  62-  62, 62.00%]: crossEntropy = 7.21975708 * 4096; time = 0.0626s; samplesPerSecond = 65479.4
 Epoch[ 1 of 3]-Minibatch[  63-  63, 63.00%]: crossEntropy = 7.26132202 * 4096; time = 0.0629s; samplesPerSecond = 65102.7
 Epoch[ 1 of 3]-Minibatch[  64-  64, 64.00%]: crossEntropy = 7.21929932 * 4096; time = 0.0621s; samplesPerSecond = 65907.2
 Epoch[ 1 of 3]-Minibatch[  65-  65, 65.00%]: crossEntropy = 7.17028809 * 4096; time = 0.0626s; samplesPerSecond = 65402.1
 Epoch[ 1 of 3]-Minibatch[  66-  66, 66.00%]: crossEntropy = 7.25549316 * 4096; time = 0.0628s; samplesPerSecond = 65229.2
 Epoch[ 1 of 3]-Minibatch[  67-  67, 67.00%]: crossEntropy = 7.19964600 * 4096; time = 0.0628s; samplesPerSecond = 65234.4
 Epoch[ 1 of 3]-Minibatch[  68-  68, 68.00%]: crossEntropy = 7.13671875 * 4096; time = 0.0618s; samplesPerSecond = 66266.5
 Epoch[ 1 of 3]-Minibatch[  69-  69, 69.00%]: crossEntropy = 7.08758545 * 4096; time = 0.0628s; samplesPerSecond = 65232.3
 Epoch[ 1 of 3]-Minibatch[  70-  70, 70.00%]: crossEntropy = 7.07177734 * 4096; time = 0.0627s; samplesPerSecond = 65372.8
 Epoch[ 1 of 3]-Minibatch[  71-  71, 71.00%]: crossEntropy = 7.11883545 * 4096; time = 0.0622s; samplesPerSecond = 65810.8
 Epoch[ 1 of 3]-Minibatch[  72-  72, 72.00%]: crossEntropy = 7.16357422 * 4096; time = 0.0618s; samplesPerSecond = 66225.8
 Epoch[ 1 of 3]-Minibatch[  73-  73, 73.00%]: crossEntropy = 7.03247070 * 4096; time = 0.0624s; samplesPerSecond = 65632.6
 Epoch[ 1 of 3]-Minibatch[  74-  74, 74.00%]: crossEntropy = 7.16418457 * 4096; time = 0.0625s; samplesPerSecond = 65484.7
 Epoch[ 1 of 3]-Minibatch[  75-  75, 75.00%]: crossEntropy = 6.97991943 * 4096; time = 0.0625s; samplesPerSecond = 65580.1
 Epoch[ 1 of 3]-Minibatch[  76-  76, 76.00%]: crossEntropy = 7.12304688 * 4096; time = 0.0627s; samplesPerSecond = 65364.5
 Epoch[ 1 of 3]-Minibatch[  77-  77, 77.00%]: crossEntropy = 7.14862061 * 4096; time = 0.0627s; samplesPerSecond = 65314.5
 Epoch[ 1 of 3]-Minibatch[  78-  78, 78.00%]: crossEntropy = 7.15423584 * 4096; time = 0.0623s; samplesPerSecond = 65704.2
 Epoch[ 1 of 3]-Minibatch[  79-  79, 79.00%]: crossEntropy = 7.10021973 * 4096; time = 0.0617s; samplesPerSecond = 66333.1
 Epoch[ 1 of 3]-Minibatch[  80-  80, 80.00%]: crossEntropy = 6.97631836 * 4096; time = 0.0627s; samplesPerSecond = 65324.9
 Epoch[ 1 of 3]-Minibatch[  81-  81, 81.00%]: crossEntropy = 7.08142090 * 4096; time = 0.0626s; samplesPerSecond = 65419.8
 Epoch[ 1 of 3]-Minibatch[  82-  82, 82.00%]: crossEntropy = 7.15948486 * 4096; time = 0.0624s; samplesPerSecond = 65674.7
 Epoch[ 1 of 3]-Minibatch[  83-  83, 83.00%]: crossEntropy = 7.06982422 * 4096; time = 0.0628s; samplesPerSecond = 65251.0
 Epoch[ 1 of 3]-Minibatch[  84-  84, 84.00%]: crossEntropy = 7.05358887 * 4096; time = 0.0629s; samplesPerSecond = 65101.6
 Epoch[ 1 of 3]-Minibatch[  85-  85, 85.00%]: crossEntropy = 6.90795898 * 4096; time = 0.0623s; samplesPerSecond = 65737.9
 Epoch[ 1 of 3]-Minibatch[  86-  86, 86.00%]: crossEntropy = 6.94061279 * 4096; time = 0.0624s; samplesPerSecond = 65614.7
 Epoch[ 1 of 3]-Minibatch[  87-  87, 87.00%]: crossEntropy = 6.95916748 * 4096; time = 0.0628s; samplesPerSecond = 65198.0
 Epoch[ 1 of 3]-Minibatch[  88-  88, 88.00%]: crossEntropy = 6.90502930 * 4096; time = 0.0625s; samplesPerSecond = 65572.7
 Epoch[ 1 of 3]-Minibatch[  89-  89, 89.00%]: crossEntropy = 6.86132812 * 4096; time = 0.0622s; samplesPerSecond = 65806.6
 Epoch[ 1 of 3]-Minibatch[  90-  90, 90.00%]: crossEntropy = 6.88751221 * 4096; time = 0.0624s; samplesPerSecond = 65675.8
 Epoch[ 1 of 3]-Minibatch[  91-  91, 91.00%]: crossEntropy = 7.00665283 * 4096; time = 0.0624s; samplesPerSecond = 65634.7
 Epoch[ 1 of 3]-Minibatch[  92-  92, 92.00%]: crossEntropy = 6.98419189 * 4096; time = 0.0625s; samplesPerSecond = 65539.1
 Epoch[ 1 of 3]-Minibatch[  93-  93, 93.00%]: crossEntropy = 6.85675049 * 4096; time = 0.0631s; samplesPerSecond = 64943.7
 Epoch[ 1 of 3]-Minibatch[  94-  94, 94.00%]: crossEntropy = 6.96929932 * 4096; time = 0.0628s; samplesPerSecond = 65263.5
 Epoch[ 1 of 3]-Minibatch[  95-  95, 95.00%]: crossEntropy = 6.94824219 * 4096; time = 0.0623s; samplesPerSecond = 65723.2
 Epoch[ 1 of 3]-Minibatch[  96-  96, 96.00%]: crossEntropy = 6.90850830 * 4096; time = 0.0624s; samplesPerSecond = 65649.4
 Epoch[ 1 of 3]-Minibatch[  97-  97, 97.00%]: crossEntropy = 7.00640869 * 4096; time = 0.0628s; samplesPerSecond = 65218.8
 Epoch[ 1 of 3]-Minibatch[  98-  98, 98.00%]: crossEntropy = 6.99713135 * 4096; time = 0.0623s; samplesPerSecond = 65755.9
 Epoch[ 1 of 3]-Minibatch[  99-  99, 99.00%]: crossEntropy = 6.88671875 * 4096; time = 0.0628s; samplesPerSecond = 65254.1
 Epoch[ 1 of 3]-Minibatch[ 100- 100, 100.00%]: crossEntropy = 7.04437256 * 4096; time = 0.0623s; samplesPerSecond = 65701.0
 Epoch[ 1 of 3]-Minibatch[ 101- 101, 101.00%]: crossEntropy = 7.09625244 * 4096; time = 0.0628s; samplesPerSecond = 65263.5
Finished Epoch[ 1 of 3]: [Training] crossEntropy = 7.77572004 * 413695; totalSamplesSeen = 413695; learningRatePerSample = 9.9999997e-05; epochTime=7.03363s
SGD: Saving checkpoint model './Output/lstm32/lstm32.dnn.1'

Starting Epoch 2: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 2 of 3]-Minibatch[   1-   1, 1.00%]: crossEntropy = 7.04489422 * 4096; time = 0.0638s; samplesPerSecond = 64186.5
 Epoch[ 2 of 3]-Minibatch[   2-   2, 2.00%]: crossEntropy = 6.93258190 * 4096; time = 0.0624s; samplesPerSecond = 65683.1
 Epoch[ 2 of 3]-Minibatch[   3-   3, 3.00%]: crossEntropy = 6.99297142 * 4096; time = 0.0626s; samplesPerSecond = 65456.4
 Epoch[ 2 of 3]-Minibatch[   4-   4, 4.00%]: crossEntropy = 6.93083954 * 4096; time = 0.0630s; samplesPerSecond = 64972.6
 Epoch[ 2 of 3]-Minibatch[   5-   5, 5.00%]: crossEntropy = 6.92593384 * 4096; time = 0.0628s; samplesPerSecond = 65226.0
 Epoch[ 2 of 3]-Minibatch[   6-   6, 6.00%]: crossEntropy = 7.00793457 * 4096; time = 0.0629s; samplesPerSecond = 65109.9
 Epoch[ 2 of 3]-Minibatch[   7-   7, 7.00%]: crossEntropy = 6.96873856 * 4096; time = 0.0620s; samplesPerSecond = 66089.0
 Epoch[ 2 of 3]-Minibatch[   8-   8, 8.00%]: crossEntropy = 7.02466965 * 4096; time = 0.0627s; samplesPerSecond = 65330.1
 Epoch[ 2 of 3]-Minibatch[   9-   9, 9.00%]: crossEntropy = 6.87221146 * 4096; time = 0.0624s; samplesPerSecond = 65621.0
 Epoch[ 2 of 3]-Minibatch[  10-  10, 10.00%]: crossEntropy = 6.97552490 * 4096; time = 0.0622s; samplesPerSecond = 65870.1
 Epoch[ 2 of 3]-Minibatch[  11-  11, 11.00%]: crossEntropy = 6.93918610 * 4096; time = 0.0627s; samplesPerSecond = 65346.8
 Epoch[ 2 of 3]-Minibatch[  12-  12, 12.00%]: crossEntropy = 6.81491852 * 4096; time = 0.0628s; samplesPerSecond = 65269.7
 Epoch[ 2 of 3]-Minibatch[  13-  13, 13.00%]: crossEntropy = 6.99134827 * 4096; time = 0.0628s; samplesPerSecond = 65209.4
 Epoch[ 2 of 3]-Minibatch[  14-  14, 14.00%]: crossEntropy = 7.15804291 * 4096; time = 0.0623s; samplesPerSecond = 65705.3
 Epoch[ 2 of 3]-Minibatch[  15-  15, 15.00%]: crossEntropy = 7.07760620 * 4096; time = 0.0624s; samplesPerSecond = 65689.5
 Epoch[ 2 of 3]-Minibatch[  16-  16, 16.00%]: crossEntropy = 6.89472198 * 4096; time = 0.0624s; samplesPerSecond = 65666.3
 Epoch[ 2 of 3]-Minibatch[  17-  17, 17.00%]: crossEntropy = 6.82966614 * 4096; time = 0.0624s; samplesPerSecond = 65647.3
 Epoch[ 2 of 3]-Minibatch[  18-  18, 18.00%]: crossEntropy = 6.84034729 * 4096; time = 0.0629s; samplesPerSecond = 65117.2
 Epoch[ 2 of 3]-Minibatch[  19-  19, 19.00%]: crossEntropy = 6.97554016 * 4096; time = 0.0627s; samplesPerSecond = 65353.0
 Epoch[ 2 of 3]-Minibatch[  20-  20, 20.00%]: crossEntropy = 6.83894348 * 4096; time = 0.0627s; samplesPerSecond = 65327.0
 Epoch[ 2 of 3]-Minibatch[  21-  21, 21.00%]: crossEntropy = 6.98060608 * 4096; time = 0.0623s; samplesPerSecond = 65716.9
 Epoch[ 2 of 3]-Minibatch[  22-  22, 22.00%]: crossEntropy = 6.93229675 * 4096; time = 0.0623s; samplesPerSecond = 65779.1
 Epoch[ 2 of 3]-Minibatch[  23-  23, 23.00%]: crossEntropy = 6.88996887 * 4096; time = 0.0622s; samplesPerSecond = 65875.4
 Epoch[ 2 of 3]-Minibatch[  24-  24, 24.00%]: crossEntropy = 6.77830505 * 4096; time = 0.0625s; samplesPerSecond = 65555.9
 Epoch[ 2 of 3]-Minibatch[  25-  25, 25.00%]: crossEntropy = 6.81492615 * 4096; time = 0.0627s; samplesPerSecond = 65350.9
 Epoch[ 2 of 3]-Minibatch[  26-  26, 26.00%]: crossEntropy = 6.76658630 * 4096; time = 0.0627s; samplesPerSecond = 65304.0
 Epoch[ 2 of 3]-Minibatch[  27-  27, 27.00%]: crossEntropy = 6.96334839 * 4096; time = 0.0624s; samplesPerSecond = 65652.6
 Epoch[ 2 of 3]-Minibatch[  28-  28, 28.00%]: crossEntropy = 6.91389465 * 4096; time = 0.0629s; samplesPerSecond = 65150.3
 Epoch[ 2 of 3]-Minibatch[  29-  29, 29.00%]: crossEntropy = 6.91888428 * 4096; time = 0.0623s; samplesPerSecond = 65712.6
 Epoch[ 2 of 3]-Minibatch[  30-  30, 30.00%]: crossEntropy = 6.90525818 * 4096; time = 0.0627s; samplesPerSecond = 65370.7
 Epoch[ 2 of 3]-Minibatch[  31-  31, 31.00%]: crossEntropy = 6.83787537 * 4096; time = 0.0623s; samplesPerSecond = 65704.2
 Epoch[ 2 of 3]-Minibatch[  32-  32, 32.00%]: crossEntropy = 6.82904053 * 4096; time = 0.0629s; samplesPerSecond = 65146.2
 Epoch[ 2 of 3]-Minibatch[  33-  33, 33.00%]: crossEntropy = 6.87113953 * 4096; time = 0.0626s; samplesPerSecond = 65384.3
 Epoch[ 2 of 3]-Minibatch[  34-  34, 34.00%]: crossEntropy = 6.81983948 * 4096; time = 0.0624s; samplesPerSecond = 65661.0
 Epoch[ 2 of 3]-Minibatch[  35-  35, 35.00%]: crossEntropy = 6.81115723 * 4096; time = 0.0624s; samplesPerSecond = 65687.3
 Epoch[ 2 of 3]-Minibatch[  36-  36, 36.00%]: crossEntropy = 6.65913391 * 4096; time = 0.0624s; samplesPerSecond = 65612.6
 Epoch[ 2 of 3]-Minibatch[  37-  37, 37.00%]: crossEntropy = 7.44772339 * 4096; time = 0.0624s; samplesPerSecond = 65593.7
 Epoch[ 2 of 3]-Minibatch[  38-  38, 38.00%]: crossEntropy = 7.19381714 * 4096; time = 0.0625s; samplesPerSecond = 65525.5
 Epoch[ 2 of 3]-Minibatch[  39-  39, 39.00%]: crossEntropy = 7.13204956 * 4096; time = 0.0628s; samplesPerSecond = 65254.1
 Epoch[ 2 of 3]-Minibatch[  40-  40, 40.00%]: crossEntropy = 7.44046021 * 4096; time = 0.0629s; samplesPerSecond = 65144.1
 Epoch[ 2 of 3]-Minibatch[  41-  41, 41.00%]: crossEntropy = 6.91851807 * 4096; time = 0.0624s; samplesPerSecond = 65684.2
 Epoch[ 2 of 3]-Minibatch[  42-  42, 42.00%]: crossEntropy = 6.95046997 * 4096; time = 0.0627s; samplesPerSecond = 65287.4
 Epoch[ 2 of 3]-Minibatch[  43-  43, 43.00%]: crossEntropy = 7.00894165 * 4096; time = 0.0625s; samplesPerSecond = 65562.2
 Epoch[ 2 of 3]-Minibatch[  44-  44, 44.00%]: crossEntropy = 6.91085815 * 4096; time = 0.0629s; samplesPerSecond = 65094.4
 Epoch[ 2 of 3]-Minibatch[  45-  45, 45.00%]: crossEntropy = 6.85900879 * 4096; time = 0.0622s; samplesPerSecond = 65842.6
 Epoch[ 2 of 3]-Minibatch[  46-  46, 46.00%]: crossEntropy = 6.87609863 * 4096; time = 0.0619s; samplesPerSecond = 66191.6
 Epoch[ 2 of 3]-Minibatch[  47-  47, 47.00%]: crossEntropy = 6.81930542 * 4096; time = 0.0621s; samplesPerSecond = 65919.9
 Epoch[ 2 of 3]-Minibatch[  48-  48, 48.00%]: crossEntropy = 6.82052612 * 4096; time = 0.0627s; samplesPerSecond = 65348.8
 Epoch[ 2 of 3]-Minibatch[  49-  49, 49.00%]: crossEntropy = 6.90768433 * 4096; time = 0.0628s; samplesPerSecond = 65204.2
 Epoch[ 2 of 3]-Minibatch[  50-  50, 50.00%]: crossEntropy = 6.82388306 * 4096; time = 0.0627s; samplesPerSecond = 65310.3
 Epoch[ 2 of 3]-Minibatch[  51-  51, 51.00%]: crossEntropy = 6.73861694 * 4096; time = 0.0624s; samplesPerSecond = 65657.9
 Epoch[ 2 of 3]-Minibatch[  52-  52, 52.00%]: crossEntropy = 6.78317261 * 4096; time = 0.0627s; samplesPerSecond = 65363.4
 Epoch[ 2 of 3]-Minibatch[  53-  53, 53.00%]: crossEntropy = 6.89666748 * 4096; time = 0.0619s; samplesPerSecond = 66176.6
 Epoch[ 2 of 3]-Minibatch[  54-  54, 54.00%]: crossEntropy = 6.71148682 * 4096; time = 0.0624s; samplesPerSecond = 65658.9
 Epoch[ 2 of 3]-Minibatch[  55-  55, 55.00%]: crossEntropy = 6.79220581 * 4096; time = 0.0623s; samplesPerSecond = 65712.6
 Epoch[ 2 of 3]-Minibatch[  56-  56, 56.00%]: crossEntropy = 6.89578247 * 4096; time = 0.0624s; samplesPerSecond = 65637.9
 Epoch[ 2 of 3]-Minibatch[  57-  57, 57.00%]: crossEntropy = 6.79812622 * 4096; time = 0.0628s; samplesPerSecond = 65257.2
 Epoch[ 2 of 3]-Minibatch[  58-  58, 58.00%]: crossEntropy = 6.82623291 * 4096; time = 0.0628s; samplesPerSecond = 65234.4
 Epoch[ 2 of 3]-Minibatch[  59-  59, 59.00%]: crossEntropy = 6.83309937 * 4096; time = 0.0626s; samplesPerSecond = 65395.8
 Epoch[ 2 of 3]-Minibatch[  60-  60, 60.00%]: crossEntropy = 6.85498047 * 4096; time = 0.0624s; samplesPerSecond = 65637.9
 Epoch[ 2 of 3]-Minibatch[  61-  61, 61.00%]: crossEntropy = 6.70391846 * 4096; time = 0.0628s; samplesPerSecond = 65222.9
 Epoch[ 2 of 3]-Minibatch[  62-  62, 62.00%]: crossEntropy = 6.75106812 * 4096; time = 0.0624s; samplesPerSecond = 65676.8
 Epoch[ 2 of 3]-Minibatch[  63-  63, 63.00%]: crossEntropy = 6.91452026 * 4096; time = 0.0623s; samplesPerSecond = 65753.8
 Epoch[ 2 of 3]-Minibatch[  64-  64, 64.00%]: crossEntropy = 6.93832397 * 4096; time = 0.0624s; samplesPerSecond = 65669.4
 Epoch[ 2 of 3]-Minibatch[  65-  65, 65.00%]: crossEntropy = 6.88150024 * 4096; time = 0.0627s; samplesPerSecond = 65282.2
 Epoch[ 2 of 3]-Minibatch[  66-  66, 66.00%]: crossEntropy = 6.83813477 * 4096; time = 0.0626s; samplesPerSecond = 65403.1
 Epoch[ 2 of 3]-Minibatch[  67-  67, 67.00%]: crossEntropy = 6.78900146 * 4096; time = 0.0626s; samplesPerSecond = 65470.0
 Epoch[ 2 of 3]-Minibatch[  68-  68, 68.00%]: crossEntropy = 6.79751587 * 4096; time = 0.0628s; samplesPerSecond = 65191.8
 Epoch[ 2 of 3]-Minibatch[  69-  69, 69.00%]: crossEntropy = 6.99316406 * 4096; time = 0.0624s; samplesPerSecond = 65617.9
 Epoch[ 2 of 3]-Minibatch[  70-  70, 70.00%]: crossEntropy = 6.78320312 * 4096; time = 0.0624s; samplesPerSecond = 65644.2
 Epoch[ 2 of 3]-Minibatch[  71-  71, 71.00%]: crossEntropy = 6.79867554 * 4096; time = 0.0624s; samplesPerSecond = 65674.7
 Epoch[ 2 of 3]-Minibatch[  72-  72, 72.00%]: crossEntropy = 6.74032593 * 4096; time = 0.0623s; samplesPerSecond = 65759.1
 Epoch[ 2 of 3]-Minibatch[  73-  73, 73.00%]: crossEntropy = 6.82562256 * 4096; time = 0.0626s; samplesPerSecond = 65436.5
 Epoch[ 2 of 3]-Minibatch[  74-  74, 74.00%]: crossEntropy = 6.85900879 * 4096; time = 0.0628s; samplesPerSecond = 65237.5
 Epoch[ 2 of 3]-Minibatch[  75-  75, 75.00%]: crossEntropy = 6.83160400 * 4096; time = 0.0623s; samplesPerSecond = 65726.3
 Epoch[ 2 of 3]-Minibatch[  76-  76, 76.00%]: crossEntropy = 6.76562500 * 4096; time = 0.0626s; samplesPerSecond = 65424.0
 Epoch[ 2 of 3]-Minibatch[  77-  77, 77.00%]: crossEntropy = 6.83020020 * 4096; time = 0.0624s; samplesPerSecond = 65616.8
 Epoch[ 2 of 3]-Minibatch[  78-  78, 78.00%]: crossEntropy = 6.75122070 * 4096; time = 0.0624s; samplesPerSecond = 65658.9
 Epoch[ 2 of 3]-Minibatch[  79-  79, 79.00%]: crossEntropy = 6.70544434 * 4096; time = 0.0627s; samplesPerSecond = 65284.3
 Epoch[ 2 of 3]-Minibatch[  80-  80, 80.00%]: crossEntropy = 6.73547363 * 4096; time = 0.0627s; samplesPerSecond = 65310.3
 Epoch[ 2 of 3]-Minibatch[  81-  81, 81.00%]: crossEntropy = 6.64904785 * 4096; time = 0.0622s; samplesPerSecond = 65838.3
 Epoch[ 2 of 3]-Minibatch[  82-  82, 82.00%]: crossEntropy = 6.77770996 * 4096; time = 0.0628s; samplesPerSecond = 65270.7
 Epoch[ 2 of 3]-Minibatch[  83-  83, 83.00%]: crossEntropy = 7.03955078 * 4096; time = 0.0629s; samplesPerSecond = 65163.8
 Epoch[ 2 of 3]-Minibatch[  84-  84, 84.00%]: crossEntropy = 6.98626709 * 4096; time = 0.0619s; samplesPerSecond = 66159.5
 Epoch[ 2 of 3]-Minibatch[  85-  85, 85.00%]: crossEntropy = 6.79919434 * 4096; time = 0.0627s; samplesPerSecond = 65316.5
 Epoch[ 2 of 3]-Minibatch[  86-  86, 86.00%]: crossEntropy = 6.75427246 * 4096; time = 0.0628s; samplesPerSecond = 65178.3
 Epoch[ 2 of 3]-Minibatch[  87-  87, 87.00%]: crossEntropy = 6.95159912 * 4096; time = 0.0624s; samplesPerSecond = 65628.4
 Epoch[ 2 of 3]-Minibatch[  88-  88, 88.00%]: crossEntropy = 6.45336914 * 4096; time = 0.0624s; samplesPerSecond = 65615.8
 Epoch[ 2 of 3]-Minibatch[  89-  89, 89.00%]: crossEntropy = 6.74914551 * 4096; time = 0.0628s; samplesPerSecond = 65203.2
 Epoch[ 2 of 3]-Minibatch[  90-  90, 90.00%]: crossEntropy = 6.82788086 * 4096; time = 0.0628s; samplesPerSecond = 65245.8
 Epoch[ 2 of 3]-Minibatch[  91-  91, 91.00%]: crossEntropy = 6.79711914 * 4096; time = 0.0628s; samplesPerSecond = 65255.1
 Epoch[ 2 of 3]-Minibatch[  92-  92, 92.00%]: crossEntropy = 6.81195068 * 4096; time = 0.0624s; samplesPerSecond = 65627.4
 Epoch[ 2 of 3]-Minibatch[  93-  93, 93.00%]: crossEntropy = 6.77288818 * 4096; time = 0.0626s; samplesPerSecond = 65406.2
 Epoch[ 2 of 3]-Minibatch[  94-  94, 94.00%]: crossEntropy = 6.73327637 * 4096; time = 0.0628s; samplesPerSecond = 65176.2
 Epoch[ 2 of 3]-Minibatch[  95-  95, 95.00%]: crossEntropy = 6.92437744 * 4096; time = 0.0629s; samplesPerSecond = 65081.0
 Epoch[ 2 of 3]-Minibatch[  96-  96, 96.00%]: crossEntropy = 6.77679443 * 4096; time = 0.0628s; samplesPerSecond = 65233.3
 Epoch[ 2 of 3]-Minibatch[  97-  97, 97.00%]: crossEntropy = 6.88378906 * 4096; time = 0.0621s; samplesPerSecond = 65975.1
 Epoch[ 2 of 3]-Minibatch[  98-  98, 98.00%]: crossEntropy = 6.73730469 * 4096; time = 0.0630s; samplesPerSecond = 65060.3
 Epoch[ 2 of 3]-Minibatch[  99-  99, 99.00%]: crossEntropy = 6.78491211 * 4096; time = 0.0620s; samplesPerSecond = 66073.0
 Epoch[ 2 of 3]-Minibatch[ 100- 100, 100.00%]: crossEntropy = 6.72265625 * 4096; time = 0.0624s; samplesPerSecond = 65607.4
Finished Epoch[ 2 of 3]: [Training] crossEntropy = 6.87135254 * 409600; totalSamplesSeen = 823295; learningRatePerSample = 9.9999997e-05; epochTime=6.25766s
SGD: Saving checkpoint model './Output/lstm32/lstm32.dnn.2'

Starting Epoch 3: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 3 of 3]-Minibatch[   1-   1, 1.00%]: crossEntropy = 6.84101820 * 4096; time = 0.0640s; samplesPerSecond = 64047.0
 Epoch[ 3 of 3]-Minibatch[   2-   2, 2.00%]: crossEntropy = 6.83298349 * 4096; time = 0.0631s; samplesPerSecond = 64958.1
 Epoch[ 3 of 3]-Minibatch[   3-   3, 3.00%]: crossEntropy = 6.73764992 * 4096; time = 0.0624s; samplesPerSecond = 65653.7
 Epoch[ 3 of 3]-Minibatch[   4-   4, 4.00%]: crossEntropy = 6.82316589 * 4096; time = 0.0625s; samplesPerSecond = 65569.6
 Epoch[ 3 of 3]-Minibatch[   5-   5, 5.00%]: crossEntropy = 6.71040344 * 4096; time = 0.0628s; samplesPerSecond = 65272.8
 Epoch[ 3 of 3]-Minibatch[   6-   6, 6.00%]: crossEntropy = 6.57018280 * 4096; time = 0.0625s; samplesPerSecond = 65502.5
 Epoch[ 3 of 3]-Minibatch[   7-   7, 7.00%]: crossEntropy = 6.73538208 * 4096; time = 0.0619s; samplesPerSecond = 66196.9
 Epoch[ 3 of 3]-Minibatch[   8-   8, 8.00%]: crossEntropy = 7.00155640 * 4096; time = 0.0624s; samplesPerSecond = 65676.8
 Epoch[ 3 of 3]-Minibatch[   9-   9, 9.00%]: crossEntropy = 6.76444244 * 4096; time = 0.0625s; samplesPerSecond = 65505.6
 Epoch[ 3 of 3]-Minibatch[  10-  10, 10.00%]: crossEntropy = 6.86466217 * 4096; time = 0.0624s; samplesPerSecond = 65684.2
 Epoch[ 3 of 3]-Minibatch[  11-  11, 11.00%]: crossEntropy = 6.67861938 * 4096; time = 0.0624s; samplesPerSecond = 65594.8
 Epoch[ 3 of 3]-Minibatch[  12-  12, 12.00%]: crossEntropy = 6.79711914 * 4096; time = 0.0629s; samplesPerSecond = 65118.2
 Epoch[ 3 of 3]-Minibatch[  13-  13, 13.00%]: crossEntropy = 6.71531677 * 4096; time = 0.0630s; samplesPerSecond = 65049.9
 Epoch[ 3 of 3]-Minibatch[  14-  14, 14.00%]: crossEntropy = 7.07302094 * 4096; time = 0.0620s; samplesPerSecond = 66062.4
 Epoch[ 3 of 3]-Minibatch[  15-  15, 15.00%]: crossEntropy = 7.18055725 * 4096; time = 0.0627s; samplesPerSecond = 65285.3
 Epoch[ 3 of 3]-Minibatch[  16-  16, 16.00%]: crossEntropy = 6.92312622 * 4096; time = 0.0624s; samplesPerSecond = 65684.2
 Epoch[ 3 of 3]-Minibatch[  17-  17, 17.00%]: crossEntropy = 6.64592743 * 4096; time = 0.0622s; samplesPerSecond = 65870.1
 Epoch[ 3 of 3]-Minibatch[  18-  18, 18.00%]: crossEntropy = 6.74275208 * 4096; time = 0.0627s; samplesPerSecond = 65284.3
 Epoch[ 3 of 3]-Minibatch[  19-  19, 19.00%]: crossEntropy = 6.69319916 * 4096; time = 0.0627s; samplesPerSecond = 65360.3
 Epoch[ 3 of 3]-Minibatch[  20-  20, 20.00%]: crossEntropy = 6.85224915 * 4096; time = 0.0629s; samplesPerSecond = 65093.4
 Epoch[ 3 of 3]-Minibatch[  21-  21, 21.00%]: crossEntropy = 6.70318604 * 4096; time = 0.0629s; samplesPerSecond = 65163.8
 Epoch[ 3 of 3]-Minibatch[  22-  22, 22.00%]: crossEntropy = 6.71517944 * 4096; time = 0.0625s; samplesPerSecond = 65532.9
 Epoch[ 3 of 3]-Minibatch[  23-  23, 23.00%]: crossEntropy = 6.92277527 * 4096; time = 0.0625s; samplesPerSecond = 65581.1
 Epoch[ 3 of 3]-Minibatch[  24-  24, 24.00%]: crossEntropy = 6.71392822 * 4096; time = 0.0624s; samplesPerSecond = 65635.8
 Epoch[ 3 of 3]-Minibatch[  25-  25, 25.00%]: crossEntropy = 6.75604248 * 4096; time = 0.0619s; samplesPerSecond = 66184.1
 Epoch[ 3 of 3]-Minibatch[  26-  26, 26.00%]: crossEntropy = 6.77180481 * 4096; time = 0.0624s; samplesPerSecond = 65689.5
 Epoch[ 3 of 3]-Minibatch[  27-  27, 27.00%]: crossEntropy = 6.66711325 * 3872; time = 0.0723s; samplesPerSecond = 53565.7
 Epoch[ 3 of 3]-Minibatch[  28-  28, 28.00%]: crossEntropy = 6.87215909 * 22; time = 0.0164s; samplesPerSecond = 1341.2
 Epoch[ 3 of 3]-Minibatch[  29-  29, 29.00%]: crossEntropy = 6.70926435 * 4095; time = 0.0665s; samplesPerSecond = 61538.2
 Epoch[ 3 of 3]-Minibatch[  30-  30, 30.00%]: crossEntropy = 6.77737427 * 4096; time = 0.0624s; samplesPerSecond = 65691.6
 Epoch[ 3 of 3]-Minibatch[  31-  31, 31.00%]: crossEntropy = 6.62045288 * 4096; time = 0.0623s; samplesPerSecond = 65753.8
 Epoch[ 3 of 3]-Minibatch[  32-  32, 32.00%]: crossEntropy = 6.98466492 * 4096; time = 0.0624s; samplesPerSecond = 65650.5
 Epoch[ 3 of 3]-Minibatch[  33-  33, 33.00%]: crossEntropy = 7.02923584 * 4096; time = 0.0625s; samplesPerSecond = 65578.0
 Epoch[ 3 of 3]-Minibatch[  34-  34, 34.00%]: crossEntropy = 6.79013062 * 4096; time = 0.0624s; samplesPerSecond = 65680.0
 Epoch[ 3 of 3]-Minibatch[  35-  35, 35.00%]: crossEntropy = 6.60267639 * 4096; time = 0.0627s; samplesPerSecond = 65349.9
 Epoch[ 3 of 3]-Minibatch[  36-  36, 36.00%]: crossEntropy = 6.77867126 * 4096; time = 0.0625s; samplesPerSecond = 65573.8
 Epoch[ 3 of 3]-Minibatch[  37-  37, 37.00%]: crossEntropy = 6.92805481 * 4096; time = 0.0627s; samplesPerSecond = 65312.4
 Epoch[ 3 of 3]-Minibatch[  38-  38, 38.00%]: crossEntropy = 6.75135803 * 4096; time = 0.0624s; samplesPerSecond = 65682.1
 Epoch[ 3 of 3]-Minibatch[  39-  39, 39.00%]: crossEntropy = 6.77461243 * 4096; time = 0.0624s; samplesPerSecond = 65590.6
 Epoch[ 3 of 3]-Minibatch[  40-  40, 40.00%]: crossEntropy = 6.76379395 * 4096; time = 0.0627s; samplesPerSecond = 65354.1
 Epoch[ 3 of 3]-Minibatch[  41-  41, 41.00%]: crossEntropy = 6.73153687 * 4096; time = 0.0624s; samplesPerSecond = 65594.8
 Epoch[ 3 of 3]-Minibatch[  42-  42, 42.00%]: crossEntropy = 6.87051392 * 4096; time = 0.0624s; samplesPerSecond = 65601.1
 Epoch[ 3 of 3]-Minibatch[  43-  43, 43.00%]: crossEntropy = 6.83245850 * 4096; time = 0.0624s; samplesPerSecond = 65636.8
 Epoch[ 3 of 3]-Minibatch[  44-  44, 44.00%]: crossEntropy = 6.74362183 * 4096; time = 0.0622s; samplesPerSecond = 65829.9
 Epoch[ 3 of 3]-Minibatch[  45-  45, 45.00%]: crossEntropy = 6.62667847 * 4096; time = 0.0619s; samplesPerSecond = 66144.5
 Epoch[ 3 of 3]-Minibatch[  46-  46, 46.00%]: crossEntropy = 6.64358521 * 4096; time = 0.0623s; samplesPerSecond = 65706.3
 Epoch[ 3 of 3]-Minibatch[  47-  47, 47.00%]: crossEntropy = 6.48074341 * 4096; time = 0.0625s; samplesPerSecond = 65543.3
 Epoch[ 3 of 3]-Minibatch[  48-  48, 48.00%]: crossEntropy = 6.75271606 * 4096; time = 0.0624s; samplesPerSecond = 65627.4
 Epoch[ 3 of 3]-Minibatch[  49-  49, 49.00%]: crossEntropy = 6.73223877 * 4096; time = 0.0626s; samplesPerSecond = 65482.6
 Epoch[ 3 of 3]-Minibatch[  50-  50, 50.00%]: crossEntropy = 6.65835571 * 4096; time = 0.0629s; samplesPerSecond = 65166.9
 Epoch[ 3 of 3]-Minibatch[  51-  51, 51.00%]: crossEntropy = 6.60906982 * 4096; time = 0.0623s; samplesPerSecond = 65725.3
 Epoch[ 3 of 3]-Minibatch[  52-  52, 52.00%]: crossEntropy = 6.75305176 * 4096; time = 0.0628s; samplesPerSecond = 65205.3
 Epoch[ 3 of 3]-Minibatch[  53-  53, 53.00%]: crossEntropy = 6.78506470 * 4096; time = 0.0629s; samplesPerSecond = 65098.5
 Epoch[ 3 of 3]-Minibatch[  54-  54, 54.00%]: crossEntropy = 6.59710693 * 4096; time = 0.0623s; samplesPerSecond = 65723.2
 Epoch[ 3 of 3]-Minibatch[  55-  55, 55.00%]: crossEntropy = 6.65255737 * 4096; time = 0.0629s; samplesPerSecond = 65164.8
 Epoch[ 3 of 3]-Minibatch[  56-  56, 56.00%]: crossEntropy = 6.85195923 * 4096; time = 0.0620s; samplesPerSecond = 66105.0
 Epoch[ 3 of 3]-Minibatch[  57-  57, 57.00%]: crossEntropy = 6.69155884 * 4096; time = 0.0624s; samplesPerSecond = 65617.9
 Epoch[ 3 of 3]-Minibatch[  58-  58, 58.00%]: crossEntropy = 6.83459473 * 4096; time = 0.0626s; samplesPerSecond = 65381.2
 Epoch[ 3 of 3]-Minibatch[  59-  59, 59.00%]: crossEntropy = 6.86639404 * 4096; time = 0.0622s; samplesPerSecond = 65814.0
 Epoch[ 3 of 3]-Minibatch[  60-  60, 60.00%]: crossEntropy = 6.80633545 * 4096; time = 0.0627s; samplesPerSecond = 65329.0
 Epoch[ 3 of 3]-Minibatch[  61-  61, 61.00%]: crossEntropy = 6.73425293 * 4096; time = 0.0629s; samplesPerSecond = 65156.5
 Epoch[ 3 of 3]-Minibatch[  62-  62, 62.00%]: crossEntropy = 6.74325562 * 4096; time = 0.0629s; samplesPerSecond = 65135.8
 Epoch[ 3 of 3]-Minibatch[  63-  63, 63.00%]: crossEntropy = 6.61108398 * 4096; time = 0.0623s; samplesPerSecond = 65750.6
 Epoch[ 3 of 3]-Minibatch[  64-  64, 64.00%]: crossEntropy = 6.69906616 * 4096; time = 0.0629s; samplesPerSecond = 65128.6
 Epoch[ 3 of 3]-Minibatch[  65-  65, 65.00%]: crossEntropy = 6.68515015 * 4096; time = 0.0623s; samplesPerSecond = 65769.6
 Epoch[ 3 of 3]-Minibatch[  66-  66, 66.00%]: crossEntropy = 6.62045288 * 4096; time = 0.0628s; samplesPerSecond = 65214.6
 Epoch[ 3 of 3]-Minibatch[  67-  67, 67.00%]: crossEntropy = 6.76171875 * 4096; time = 0.0625s; samplesPerSecond = 65573.8
 Epoch[ 3 of 3]-Minibatch[  68-  68, 68.00%]: crossEntropy = 6.77780151 * 4096; time = 0.0627s; samplesPerSecond = 65332.2
 Epoch[ 3 of 3]-Minibatch[  69-  69, 69.00%]: crossEntropy = 6.56903076 * 4096; time = 0.0624s; samplesPerSecond = 65623.1
 Epoch[ 3 of 3]-Minibatch[  70-  70, 70.00%]: crossEntropy = 6.68051147 * 4096; time = 0.0624s; samplesPerSecond = 65674.7
 Epoch[ 3 of 3]-Minibatch[  71-  71, 71.00%]: crossEntropy = 6.75411987 * 4096; time = 0.0629s; samplesPerSecond = 65112.0
 Epoch[ 3 of 3]-Minibatch[  72-  72, 72.00%]: crossEntropy = 6.97128296 * 4096; time = 0.0624s; samplesPerSecond = 65614.7
 Epoch[ 3 of 3]-Minibatch[  73-  73, 73.00%]: crossEntropy = 6.73507690 * 4096; time = 0.0628s; samplesPerSecond = 65227.1
 Epoch[ 3 of 3]-Minibatch[  74-  74, 74.00%]: crossEntropy = 6.81146240 * 4096; time = 0.0624s; samplesPerSecond = 65610.5
 Epoch[ 3 of 3]-Minibatch[  75-  75, 75.00%]: crossEntropy = 6.76480103 * 4096; time = 0.0619s; samplesPerSecond = 66149.9
 Epoch[ 3 of 3]-Minibatch[  76-  76, 76.00%]: crossEntropy = 6.66940308 * 4096; time = 0.0627s; samplesPerSecond = 65372.8
 Epoch[ 3 of 3]-Minibatch[  77-  77, 77.00%]: crossEntropy = 6.72549438 * 4096; time = 0.0624s; samplesPerSecond = 65614.7
 Epoch[ 3 of 3]-Minibatch[  78-  78, 78.00%]: crossEntropy = 6.99890137 * 4096; time = 0.0624s; samplesPerSecond = 65603.2
 Epoch[ 3 of 3]-Minibatch[  79-  79, 79.00%]: crossEntropy = 6.90954590 * 4096; time = 0.0625s; samplesPerSecond = 65537.0
 Epoch[ 3 of 3]-Minibatch[  80-  80, 80.00%]: crossEntropy = 6.85333252 * 4096; time = 0.0628s; samplesPerSecond = 65265.5
 Epoch[ 3 of 3]-Minibatch[  81-  81, 81.00%]: crossEntropy = 6.64270020 * 4096; time = 0.0626s; samplesPerSecond = 65438.6
 Epoch[ 3 of 3]-Minibatch[  82-  82, 82.00%]: crossEntropy = 6.63494873 * 4096; time = 0.0625s; samplesPerSecond = 65507.7
 Epoch[ 3 of 3]-Minibatch[  83-  83, 83.00%]: crossEntropy = 6.72143555 * 4096; time = 0.0626s; samplesPerSecond = 65455.4
 Epoch[ 3 of 3]-Minibatch[  84-  84, 84.00%]: crossEntropy = 6.73645020 * 4096; time = 0.0625s; samplesPerSecond = 65579.0
 Epoch[ 3 of 3]-Minibatch[  85-  85, 85.00%]: crossEntropy = 6.70440674 * 4096; time = 0.0625s; samplesPerSecond = 65559.1
 Epoch[ 3 of 3]-Minibatch[  86-  86, 86.00%]: crossEntropy = 6.73089600 * 4096; time = 0.0623s; samplesPerSecond = 65728.5
 Epoch[ 3 of 3]-Minibatch[  87-  87, 87.00%]: crossEntropy = 6.80590820 * 4096; time = 0.0623s; samplesPerSecond = 65701.0
 Epoch[ 3 of 3]-Minibatch[  88-  88, 88.00%]: crossEntropy = 6.68841553 * 4096; time = 0.0628s; samplesPerSecond = 65246.8
 Epoch[ 3 of 3]-Minibatch[  89-  89, 89.00%]: crossEntropy = 6.78698730 * 4096; time = 0.0628s; samplesPerSecond = 65218.8
 Epoch[ 3 of 3]-Minibatch[  90-  90, 90.00%]: crossEntropy = 6.66131592 * 4096; time = 0.0628s; samplesPerSecond = 65172.1
 Epoch[ 3 of 3]-Minibatch[  91-  91, 91.00%]: crossEntropy = 6.82769775 * 4096; time = 0.0623s; samplesPerSecond = 65721.1
 Epoch[ 3 of 3]-Minibatch[  92-  92, 92.00%]: crossEntropy = 6.75299072 * 4096; time = 0.0620s; samplesPerSecond = 66086.9
 Epoch[ 3 of 3]-Minibatch[  93-  93, 93.00%]: crossEntropy = 6.68896484 * 4096; time = 0.0630s; samplesPerSecond = 65063.4
 Epoch[ 3 of 3]-Minibatch[  94-  94, 94.00%]: crossEntropy = 6.81848145 * 4096; time = 0.0625s; samplesPerSecond = 65550.7
 Epoch[ 3 of 3]-Minibatch[  95-  95, 95.00%]: crossEntropy = 6.76745605 * 4096; time = 0.0620s; samplesPerSecond = 66041.1
 Epoch[ 3 of 3]-Minibatch[  96-  96, 96.00%]: crossEntropy = 6.69030762 * 4096; time = 0.0627s; samplesPerSecond = 65290.5
 Epoch[ 3 of 3]-Minibatch[  97-  97, 97.00%]: crossEntropy = 6.62677002 * 4096; time = 0.0628s; samplesPerSecond = 65220.9
 Epoch[ 3 of 3]-Minibatch[  98-  98, 98.00%]: crossEntropy = 6.61981201 * 4096; time = 0.0625s; samplesPerSecond = 65586.4
 Epoch[ 3 of 3]-Minibatch[  99-  99, 99.00%]: crossEntropy = 6.63903809 * 4096; time = 0.0625s; samplesPerSecond = 65579.0
 Epoch[ 3 of 3]-Minibatch[ 100- 100, 100.00%]: crossEntropy = 6.71484375 * 4096; time = 0.0628s; samplesPerSecond = 65175.2
 Epoch[ 3 of 3]-Minibatch[ 101- 101, 101.00%]: crossEntropy = 6.67376709 * 4096; time = 0.0624s; samplesPerSecond = 65635.8
 Epoch[ 3 of 3]-Minibatch[ 102- 102, 102.00%]: crossEntropy = 6.76019287 * 4096; time = 0.0627s; samplesPerSecond = 65297.8
Finished Epoch[ 3 of 3]: [Training] crossEntropy = 6.75483926 * 413493; totalSamplesSeen = 1236788; learningRatePerSample = 9.9999997e-05; epochTime=6.34818s
SGD: Saving checkpoint model './Output/lstm32/lstm32.dnn'
CNTKCommandTrainEnd: train

Action "train" complete.

__COMPLETED__
