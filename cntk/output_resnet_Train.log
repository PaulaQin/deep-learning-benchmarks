-------------------------------------------------------------------
Build info: 

		Built time: Sep 27 2016 14:05:01
		Last modified date: Tue Sep 27 07:19:56 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.1
		Build Branch: HEAD
		Build SHA1: 2e4a773398b5ee84e1695abe73eb831c3cca1e36
		Built by philly on 9ab719fcc26d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12205 MB
		Device[1]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[2]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[3]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
-------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: resnet.cntk:command=Train
configparameters: resnet.cntk:ConfigDir=cnn/resnet
configparameters: resnet.cntk:configName=resnet
configparameters: resnet.cntk:CreateEval=[    
    action="edit"
    CurModel="./Output/resnet/ResNet_50"
    NewModel="./Output/resnet/ResNet_50.Eval"
    editPath="cnn/resnet/CreateEvalModel.mel"
]

configparameters: resnet.cntk:DataDir=cnn
configparameters: resnet.cntk:deviceId=0
configparameters: resnet.cntk:epochSize=1600
configparameters: resnet.cntk:initOnCPUOnly=true
configparameters: resnet.cntk:maxEpochs=2
configparameters: resnet.cntk:minibatchSize=16
configparameters: resnet.cntk:ModelDir=./Output/resnet
configparameters: resnet.cntk:ndlMacros=cnn/resnet/Macros.ndl
configparameters: resnet.cntk:numMBsToShowResult=1
configparameters: resnet.cntk:OutputDir=./Output
configparameters: resnet.cntk:parallelTrain=false
configparameters: resnet.cntk:precision=float
configparameters: resnet.cntk:prefetch=true
configparameters: resnet.cntk:RootDir=.
configparameters: resnet.cntk:shareNodeValueMatrices=true
configparameters: resnet.cntk:stderr=./output_resnet_Train.log
configparameters: resnet.cntk:stride1x1=1
configparameters: resnet.cntk:stride3x3=2
configparameters: resnet.cntk:Test=[
    action="test"
    modelPath="./Output/resnet/ResNet_50.Eval"
    minibatchSize=32
    reader=[
        readerType="ImageReader"
        file="cnn/val_map.txt"
        randomize="None"
        features=[
            width=224
            height=224
            channels=3
            cropType="Center"
            meanFile="cnn/resnet/ImageNet1K_mean.xml"
        ]
        labels=[
            labelDim=1000
        ]
    ]    
]

configparameters: resnet.cntk:traceLevel=1
configparameters: resnet.cntk:Train=[
    action="train"
    modelPath="./Output/resnet/ResNet_50"
     NDLNetworkBuilder=[
        networkDescription="cnn/resnet/ResNet_50.ndl"
    ]
    SGD=[
        epochSize=1600
        minibatchSize=16
        learningRatesPerMB=1.0*30:0.1*30:0.01*30:0.001
        momentumPerMB=0.9
        maxEpochs=2
        gradUpdateType="None"
        L2RegWeight=0.0001
        dropoutRate=0
        ParallelTrain=[
            parallelizationMethod="DataParallelSGD"
            distributedMBReading="true"
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=32
            ]
        ]
    ]
    reader=[
        readerType=UCIFastReader
        file=cnn/imagenet_data.txt
        randomize=None
        features=[
            dim=150528
            start=1
        ]
        labels=[
            dim=1
            start=0
    	labelDim=1000
    	labelMappingFile=cnn/labelmap.1K.txt
        ]
    ]
]

Commands: Train
precision = "float"

##############################################################################
#                                                                            #
# Train command (train action)                                               #
#                                                                            #
##############################################################################

parallelTrain option is not enabled. ParallelTrain config will be ignored.

Creating virgin network.
NDLBuilder Using GPU 0

OutputNodes.t Times operation: For legacy compatibility, the sample layout of left input (OutputNodes.W LearnableParameter operation) was patched to [1000 x 1 x 1 x 2048] (from [1000 x 2048])
conv1.c.c.c: using cuDNN convolution engine for geometry: Input: 224 x 224 x 3, Output: 112 x 112 x 64, Kernel: 7 x 7 x 3, Map: 1 x 1 x 64, Stride: 2 x 2 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
pool1.p: using cuDNN convolution engine for geometry: Input: 112 x 112 x 64, Output: 56 x 56 x 64, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.
rn1_1.c1.c.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 64, Output: 56 x 56 x 64, Kernel: 1 x 1 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_1.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 64, Output: 56 x 56 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_1.c3.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 64, Output: 56 x 56 x 256, Kernel: 1 x 1 x 64, Map: 1 x 1 x 256, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 64, Output: 56 x 56 x 256, Kernel: 1 x 1 x 64, Map: 1 x 1 x 256, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_2.c1.c.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 256, Output: 56 x 56 x 64, Kernel: 1 x 1 x 256, Map: 1 x 1 x 64, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_2.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 64, Output: 56 x 56 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_2.c3.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 64, Output: 56 x 56 x 256, Kernel: 1 x 1 x 64, Map: 1 x 1 x 256, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_3.c1.c.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 256, Output: 56 x 56 x 64, Kernel: 1 x 1 x 256, Map: 1 x 1 x 64, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_3.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 64, Output: 56 x 56 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_3.c3.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 64, Output: 56 x 56 x 256, Kernel: 1 x 1 x 64, Map: 1 x 1 x 256, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c1.c.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 256, Output: 56 x 56 x 128, Kernel: 1 x 1 x 256, Map: 1 x 1 x 128, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 128, Output: 28 x 28 x 128, Kernel: 3 x 3 x 128, Map: 1 x 1 x 128, Stride: 2 x 2 x 128, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c3.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 128, Output: 28 x 28 x 512, Kernel: 1 x 1 x 128, Map: 1 x 1 x 512, Stride: 1 x 1 x 128, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 56 x 56 x 256, Output: 28 x 28 x 512, Kernel: 1 x 1 x 256, Map: 1 x 1 x 512, Stride: 2 x 2 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_2.c1.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 512, Output: 28 x 28 x 128, Kernel: 1 x 1 x 512, Map: 1 x 1 x 128, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_2.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 128, Output: 28 x 28 x 128, Kernel: 3 x 3 x 128, Map: 1 x 1 x 128, Stride: 1 x 1 x 128, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_2.c3.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 128, Output: 28 x 28 x 512, Kernel: 1 x 1 x 128, Map: 1 x 1 x 512, Stride: 1 x 1 x 128, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_3.c1.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 512, Output: 28 x 28 x 128, Kernel: 1 x 1 x 512, Map: 1 x 1 x 128, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_3.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 128, Output: 28 x 28 x 128, Kernel: 3 x 3 x 128, Map: 1 x 1 x 128, Stride: 1 x 1 x 128, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_3.c3.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 128, Output: 28 x 28 x 512, Kernel: 1 x 1 x 128, Map: 1 x 1 x 512, Stride: 1 x 1 x 128, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_4.c1.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 512, Output: 28 x 28 x 128, Kernel: 1 x 1 x 512, Map: 1 x 1 x 128, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_4.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 128, Output: 28 x 28 x 128, Kernel: 3 x 3 x 128, Map: 1 x 1 x 128, Stride: 1 x 1 x 128, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_4.c3.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 128, Output: 28 x 28 x 512, Kernel: 1 x 1 x 128, Map: 1 x 1 x 512, Stride: 1 x 1 x 128, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c1.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 512, Output: 28 x 28 x 256, Kernel: 1 x 1 x 512, Map: 1 x 1 x 256, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 256, Output: 14 x 14 x 256, Kernel: 3 x 3 x 256, Map: 1 x 1 x 256, Stride: 2 x 2 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c3.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 1024, Kernel: 1 x 1 x 256, Map: 1 x 1 x 1024, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 512, Output: 14 x 14 x 1024, Kernel: 1 x 1 x 512, Map: 1 x 1 x 1024, Stride: 2 x 2 x 512, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_2.c1.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 1024, Output: 14 x 14 x 256, Kernel: 1 x 1 x 1024, Map: 1 x 1 x 256, Stride: 1 x 1 x 1024, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_2.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 256, Kernel: 3 x 3 x 256, Map: 1 x 1 x 256, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_2.c3.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 1024, Kernel: 1 x 1 x 256, Map: 1 x 1 x 1024, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_3.c1.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 1024, Output: 14 x 14 x 256, Kernel: 1 x 1 x 1024, Map: 1 x 1 x 256, Stride: 1 x 1 x 1024, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_3.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 256, Kernel: 3 x 3 x 256, Map: 1 x 1 x 256, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_3.c3.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 1024, Kernel: 1 x 1 x 256, Map: 1 x 1 x 1024, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_4.c1.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 1024, Output: 14 x 14 x 256, Kernel: 1 x 1 x 1024, Map: 1 x 1 x 256, Stride: 1 x 1 x 1024, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_4.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 256, Kernel: 3 x 3 x 256, Map: 1 x 1 x 256, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_4.c3.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 1024, Kernel: 1 x 1 x 256, Map: 1 x 1 x 1024, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_5.c1.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 1024, Output: 14 x 14 x 256, Kernel: 1 x 1 x 1024, Map: 1 x 1 x 256, Stride: 1 x 1 x 1024, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_5.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 256, Kernel: 3 x 3 x 256, Map: 1 x 1 x 256, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_5.c3.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 1024, Kernel: 1 x 1 x 256, Map: 1 x 1 x 1024, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_6.c1.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 1024, Output: 14 x 14 x 256, Kernel: 1 x 1 x 1024, Map: 1 x 1 x 256, Stride: 1 x 1 x 1024, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_6.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 256, Kernel: 3 x 3 x 256, Map: 1 x 1 x 256, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_6.c3.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 256, Output: 14 x 14 x 1024, Kernel: 1 x 1 x 256, Map: 1 x 1 x 1024, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_1.c1.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 1024, Output: 14 x 14 x 512, Kernel: 1 x 1 x 1024, Map: 1 x 1 x 512, Stride: 1 x 1 x 1024, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_1.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 512, Output: 7 x 7 x 512, Kernel: 3 x 3 x 512, Map: 1 x 1 x 512, Stride: 2 x 2 x 512, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_1.c3.c: using cuDNN convolution engine for geometry: Input: 7 x 7 x 512, Output: 7 x 7 x 2048, Kernel: 1 x 1 x 512, Map: 1 x 1 x 2048, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 1024, Output: 7 x 7 x 2048, Kernel: 1 x 1 x 1024, Map: 1 x 1 x 2048, Stride: 2 x 2 x 1024, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_2.c1.c.c: using cuDNN convolution engine for geometry: Input: 7 x 7 x 2048, Output: 7 x 7 x 512, Kernel: 1 x 1 x 2048, Map: 1 x 1 x 512, Stride: 1 x 1 x 2048, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_2.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 7 x 7 x 512, Output: 7 x 7 x 512, Kernel: 3 x 3 x 512, Map: 1 x 1 x 512, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_2.c3.c: using cuDNN convolution engine for geometry: Input: 7 x 7 x 512, Output: 7 x 7 x 2048, Kernel: 1 x 1 x 512, Map: 1 x 1 x 2048, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_3.c1.c.c: using cuDNN convolution engine for geometry: Input: 7 x 7 x 2048, Output: 7 x 7 x 512, Kernel: 1 x 1 x 2048, Map: 1 x 1 x 512, Stride: 1 x 1 x 2048, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_3.c2.c.c.c: using cuDNN convolution engine for geometry: Input: 7 x 7 x 512, Output: 7 x 7 x 512, Kernel: 3 x 3 x 512, Map: 1 x 1 x 512, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn4_3.c3.c: using cuDNN convolution engine for geometry: Input: 7 x 7 x 512, Output: 7 x 7 x 2048, Kernel: 1 x 1 x 512, Map: 1 x 1 x 2048, Stride: 1 x 1 x 512, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
pool2: using cuDNN convolution engine for geometry: Input: 7 x 7 x 2048, Output: 1 x 1 x 2048, Kernel: 7 x 7 x 1, Map: 1, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
********** DEPRECATED **********
UCIFastReader is no longer actively maintained.
It is known to have defects, proceed with caution (better yet, switch to CNTKTextFormatReader)!
For more details please see https://github.com/Microsoft/CNTK/wiki 
Reading UCI file cnn/imagenet_data.txt

Model has 446 nodes. Using GPU 0.

Training criterion:   CE = CrossEntropyWithSoftmax
Evaluation criterion: Err = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 783 matrices, 426 are shared as 131, and 357 are not shared.

	{ conv1.c.y.y : [112 x 112 x 64 x *]
	  conv1.c.y.y : [112 x 112 x 64 x *] (gradient)
	  pool1.p : [56 x 56 x 64 x *] }
	{ conv1.c.c.c : [112 x 112 x 64 x *] (gradient)
	  conv1.y : [112 x 112 x 64 x *] }
	{ conv1.c.W : [64 x 147] (gradient)
	  rn1_1.c1.c.c : [56 x 56 x 64 x *] }
	{ conv1.c.y.sc : [64 x 1] (gradient)
	  conv1.y : [112 x 112 x 64 x *] (gradient) }
	{ rn1_1.c1.c.y.y : [56 x 56 x 64 x *]
	  rn1_1.c2.c.c.c : [56 x 56 x 64 x *] }
	{ conv1.c.y.b : [64 x 1] (gradient)
	  rn1_1.c1.c.c : [56 x 56 x 64 x *] (gradient)
	  rn1_1.c1.y : [56 x 56 x 64 x *] }
	{ rn1_1.c1.c.y.sc : [64 x 1] (gradient)
	  rn1_1.c1.y : [56 x 56 x 64 x *] (gradient)
	  rn1_1.c2.c.y.y : [56 x 56 x 64 x *]
	  rn1_1.c3.c : [56 x 56 x 256 x *] }
	{ rn1_1.c1.c.W : [64 x 64] (gradient)
	  rn1_1.c2.c.c.c : [56 x 56 x 64 x *] (gradient)
	  rn1_1.c2.y : [56 x 56 x 64 x *] }
	{ rn1_1.c3.y.b : [256 x 1] (gradient)
	  rn1_1.c3.y.y : [56 x 56 x 256 x *]
	  rn1_1.c_proj.c : [56 x 56 x 256 x *] (gradient)
	  rn1_1.p : [56 x 56 x 256 x *] (gradient) }
	{ rn1_1.c3.y.sc : [256 x 1] (gradient)
	  rn1_1.c_proj.c : [56 x 56 x 256 x *] }
	{ rn1_1.c2.c.W : [64 x 576] (gradient)
	  rn1_1.c3.c : [56 x 56 x 256 x *] (gradient) }
	{ rn1_1.c3.y.y : [56 x 56 x 256 x *] (gradient)
	  rn1_1.c_proj.y.y : [56 x 56 x 256 x *]
	  rn1_1.y : [56 x 56 x 256 x *] }
	{ rn1_1.c3.W : [256 x 64] (gradient)
	  rn1_1.p : [56 x 56 x 256 x *]
	  rn1_2.c1.c.c : [56 x 56 x 64 x *] }
	{ pool1.p : [56 x 56 x 64 x *] (gradient)
	  rn1_2.c1.c.y.y : [56 x 56 x 64 x *]
	  rn1_2.c2.c.c.c : [56 x 56 x 64 x *] }
	{ rn1_1.c_proj.y.y : [56 x 56 x 256 x *] (gradient)
	  rn1_2.c1.c.c : [56 x 56 x 64 x *] (gradient)
	  rn1_2.c1.y : [56 x 56 x 64 x *] }
	{ rn1_1.c_proj.y.b : [256 x 1] (gradient)
	  rn1_2.c1.c.y.y : [56 x 56 x 64 x *] (gradient) }
	{ rn1_2.c1.c.y.sc : [64 x 1] (gradient)
	  rn1_2.c1.y : [56 x 56 x 64 x *] (gradient)
	  rn1_2.c2.c.y.y : [56 x 56 x 64 x *]
	  rn1_2.c3.c : [56 x 56 x 256 x *] }
	{ rn1_2.c1.c.W : [64 x 256] (gradient)
	  rn1_2.c2.c.c.c : [56 x 56 x 64 x *] (gradient)
	  rn1_2.c2.y : [56 x 56 x 64 x *] }
	{ rn1_2.c3.y.y : [56 x 56 x 256 x *]
	  rn1_2.c3.y.y : [56 x 56 x 256 x *] (gradient)
	  rn1_2.y : [56 x 56 x 256 x *] }
	{ rn1_2.c3.W : [256 x 64] (gradient)
	  rn1_2.p : [56 x 56 x 256 x *]
	  rn1_3.c1.c.c : [56 x 56 x 64 x *] }
	{ rn1_2.c2.c.W : [64 x 576] (gradient)
	  rn1_2.c3.c : [56 x 56 x 256 x *] (gradient)
	  rn1_2.p : [56 x 56 x 256 x *] (gradient) }
	{ rn1_2.c3.y.sc : [256 x 1] (gradient)
	  rn1_3.c1.c.y.y : [56 x 56 x 64 x *]
	  rn1_3.c2.c.c.c : [56 x 56 x 64 x *] }
	{ rn1_1.c2.c.y.sc : [64 x 1] (gradient)
	  rn1_1.c2.y : [56 x 56 x 64 x *] (gradient)
	  rn1_1.y : [56 x 56 x 256 x *] (gradient)
	  rn1_3.c1.c.c : [56 x 56 x 64 x *] (gradient)
	  rn1_3.c1.y : [56 x 56 x 64 x *] }
	{ rn1_3.c1.c.y.sc : [64 x 1] (gradient)
	  rn1_3.c1.y : [56 x 56 x 64 x *] (gradient)
	  rn1_3.c2.c.y.y : [56 x 56 x 64 x *]
	  rn1_3.c3.c : [56 x 56 x 256 x *] }
	{ rn1_3.c1.c.W : [64 x 256] (gradient)
	  rn1_3.c2.c.c.c : [56 x 56 x 64 x *] (gradient)
	  rn1_3.c2.y : [56 x 56 x 64 x *] }
	{ rn1_3.c3.y.y : [56 x 56 x 256 x *]
	  rn1_3.c3.y.y : [56 x 56 x 256 x *] (gradient)
	  rn1_3.y : [56 x 56 x 256 x *] }
	{ rn1_3.c3.W : [256 x 64] (gradient)
	  rn1_3.p : [56 x 56 x 256 x *]
	  rn2_1.c1.c.c : [56 x 56 x 128 x *] }
	{ rn1_3.c2.c.W : [64 x 576] (gradient)
	  rn1_3.c3.c : [56 x 56 x 256 x *] (gradient)
	  rn1_3.p : [56 x 56 x 256 x *] (gradient) }
	{ rn1_3.c3.y.sc : [256 x 1] (gradient)
	  rn2_1.c1.c.y.y : [56 x 56 x 128 x *]
	  rn2_1.c2.c.c.c : [28 x 28 x 128 x *] }
	{ rn1_2.c2.c.y.sc : [64 x 1] (gradient)
	  rn1_2.c2.y : [56 x 56 x 64 x *] (gradient)
	  rn1_2.y : [56 x 56 x 256 x *] (gradient)
	  rn2_1.c1.c.c : [56 x 56 x 128 x *] (gradient)
	  rn2_1.c1.y : [56 x 56 x 128 x *] }
	{ rn2_1.c1.c.y.sc : [128 x 1] (gradient)
	  rn2_1.c1.y : [56 x 56 x 128 x *] (gradient)
	  rn2_1.c2.c.y.y : [28 x 28 x 128 x *]
	  rn2_1.c3.c : [28 x 28 x 512 x *] }
	{ rn2_1.c1.c.W : [128 x 256] (gradient)
	  rn2_1.c2.c.c.c : [28 x 28 x 128 x *] (gradient)
	  rn2_1.c2.y : [28 x 28 x 128 x *] }
	{ rn2_1.c3.y.b : [512 x 1] (gradient)
	  rn2_1.c3.y.y : [28 x 28 x 512 x *]
	  rn2_1.c_proj.c : [28 x 28 x 512 x *] (gradient)
	  rn2_1.p : [28 x 28 x 512 x *] (gradient) }
	{ rn2_1.c3.y.sc : [512 x 1] (gradient)
	  rn2_1.c_proj.c : [28 x 28 x 512 x *] }
	{ rn2_1.c2.c.W : [128 x 1152] (gradient)
	  rn2_1.c3.c : [28 x 28 x 512 x *] (gradient) }
	{ rn2_1.c3.y.y : [28 x 28 x 512 x *] (gradient)
	  rn2_1.c_proj.y.y : [28 x 28 x 512 x *]
	  rn2_1.y : [28 x 28 x 512 x *] }
	{ rn2_1.c3.W : [512 x 128] (gradient)
	  rn2_1.p : [28 x 28 x 512 x *]
	  rn2_2.c1.c.c : [28 x 28 x 128 x *] }
	{ rn1_3.c2.c.y.sc : [64 x 1] (gradient)
	  rn1_3.c2.y : [56 x 56 x 64 x *] (gradient)
	  rn1_3.y : [56 x 56 x 256 x *] (gradient)
	  rn2_2.c1.c.y.y : [28 x 28 x 128 x *]
	  rn2_2.c2.c.c.c : [28 x 28 x 128 x *] }
	{ rn2_1.c_proj.y.y : [28 x 28 x 512 x *] (gradient)
	  rn2_2.c1.c.c : [28 x 28 x 128 x *] (gradient)
	  rn2_2.c1.y : [28 x 28 x 128 x *] }
	{ rn2_1.c_proj.y.b : [512 x 1] (gradient)
	  rn2_2.c1.c.y.y : [28 x 28 x 128 x *] (gradient) }
	{ rn2_2.c1.c.y.sc : [128 x 1] (gradient)
	  rn2_2.c1.y : [28 x 28 x 128 x *] (gradient)
	  rn2_2.c2.c.y.y : [28 x 28 x 128 x *]
	  rn2_2.c3.c : [28 x 28 x 512 x *] }
	{ rn2_2.c1.c.W : [128 x 512] (gradient)
	  rn2_2.c2.c.c.c : [28 x 28 x 128 x *] (gradient)
	  rn2_2.c2.y : [28 x 28 x 128 x *] }
	{ rn2_2.c3.y.y : [28 x 28 x 512 x *]
	  rn2_2.c3.y.y : [28 x 28 x 512 x *] (gradient)
	  rn2_2.y : [28 x 28 x 512 x *] }
	{ rn2_2.c3.W : [512 x 128] (gradient)
	  rn2_2.p : [28 x 28 x 512 x *]
	  rn2_3.c1.c.c : [28 x 28 x 128 x *] }
	{ rn2_2.c2.c.W : [128 x 1152] (gradient)
	  rn2_2.c3.c : [28 x 28 x 512 x *] (gradient)
	  rn2_2.p : [28 x 28 x 512 x *] (gradient) }
	{ rn2_2.c3.y.sc : [512 x 1] (gradient)
	  rn2_3.c1.c.y.y : [28 x 28 x 128 x *]
	  rn2_3.c2.c.c.c : [28 x 28 x 128 x *] }
	{ rn2_1.c2.c.y.sc : [128 x 1] (gradient)
	  rn2_1.c2.y : [28 x 28 x 128 x *] (gradient)
	  rn2_1.y : [28 x 28 x 512 x *] (gradient)
	  rn2_3.c1.c.c : [28 x 28 x 128 x *] (gradient)
	  rn2_3.c1.y : [28 x 28 x 128 x *] }
	{ rn2_3.c1.c.y.sc : [128 x 1] (gradient)
	  rn2_3.c1.y : [28 x 28 x 128 x *] (gradient)
	  rn2_3.c2.c.y.y : [28 x 28 x 128 x *]
	  rn2_3.c3.c : [28 x 28 x 512 x *] }
	{ rn2_3.c1.c.W : [128 x 512] (gradient)
	  rn2_3.c2.c.c.c : [28 x 28 x 128 x *] (gradient)
	  rn2_3.c2.y : [28 x 28 x 128 x *] }
	{ rn2_3.c3.y.y : [28 x 28 x 512 x *]
	  rn2_3.c3.y.y : [28 x 28 x 512 x *] (gradient)
	  rn2_3.y : [28 x 28 x 512 x *] }
	{ rn2_3.c3.W : [512 x 128] (gradient)
	  rn2_3.p : [28 x 28 x 512 x *]
	  rn2_4.c1.c.c : [28 x 28 x 128 x *] }
	{ rn2_3.c2.c.W : [128 x 1152] (gradient)
	  rn2_3.c3.c : [28 x 28 x 512 x *] (gradient)
	  rn2_3.p : [28 x 28 x 512 x *] (gradient) }
	{ rn2_3.c3.y.sc : [512 x 1] (gradient)
	  rn2_4.c1.c.y.y : [28 x 28 x 128 x *]
	  rn2_4.c2.c.c.c : [28 x 28 x 128 x *] }
	{ rn2_2.c2.c.y.sc : [128 x 1] (gradient)
	  rn2_2.c2.y : [28 x 28 x 128 x *] (gradient)
	  rn2_2.y : [28 x 28 x 512 x *] (gradient)
	  rn2_4.c1.c.c : [28 x 28 x 128 x *] (gradient)
	  rn2_4.c1.y : [28 x 28 x 128 x *] }
	{ rn2_4.c1.c.y.sc : [128 x 1] (gradient)
	  rn2_4.c1.y : [28 x 28 x 128 x *] (gradient)
	  rn2_4.c2.c.y.y : [28 x 28 x 128 x *]
	  rn2_4.c3.c : [28 x 28 x 512 x *] }
	{ rn2_4.c1.c.W : [128 x 512] (gradient)
	  rn2_4.c2.c.c.c : [28 x 28 x 128 x *] (gradient)
	  rn2_4.c2.y : [28 x 28 x 128 x *] }
	{ rn2_4.c3.y.y : [28 x 28 x 512 x *]
	  rn2_4.c3.y.y : [28 x 28 x 512 x *] (gradient)
	  rn2_4.y : [28 x 28 x 512 x *] }
	{ rn2_4.c3.W : [512 x 128] (gradient)
	  rn2_4.p : [28 x 28 x 512 x *]
	  rn3_1.c1.c.c : [28 x 28 x 256 x *] }
	{ rn2_4.c2.c.W : [128 x 1152] (gradient)
	  rn2_4.c3.c : [28 x 28 x 512 x *] (gradient)
	  rn2_4.p : [28 x 28 x 512 x *] (gradient) }
	{ rn2_4.c3.y.sc : [512 x 1] (gradient)
	  rn3_1.c1.c.y.y : [28 x 28 x 256 x *]
	  rn3_1.c2.c.c.c : [14 x 14 x 256 x *] }
	{ rn2_3.c2.c.y.sc : [128 x 1] (gradient)
	  rn2_3.c2.y : [28 x 28 x 128 x *] (gradient)
	  rn2_3.y : [28 x 28 x 512 x *] (gradient)
	  rn3_1.c1.c.c : [28 x 28 x 256 x *] (gradient)
	  rn3_1.c1.y : [28 x 28 x 256 x *] }
	{ rn3_1.c1.c.y.sc : [256 x 1] (gradient)
	  rn3_1.c1.y : [28 x 28 x 256 x *] (gradient)
	  rn3_1.c2.c.y.y : [14 x 14 x 256 x *]
	  rn3_1.c3.c : [14 x 14 x 1024 x *] }
	{ rn3_1.c1.c.W : [256 x 512] (gradient)
	  rn3_1.c2.c.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_1.c2.y : [14 x 14 x 256 x *] }
	{ rn3_1.c3.y.b : [1024 x 1] (gradient)
	  rn3_1.c3.y.y : [14 x 14 x 1024 x *]
	  rn3_1.c_proj.c : [14 x 14 x 1024 x *] (gradient)
	  rn3_1.p : [14 x 14 x 1024 x *] (gradient) }
	{ rn3_1.c3.y.sc : [1024 x 1] (gradient)
	  rn3_1.c_proj.c : [14 x 14 x 1024 x *] }
	{ rn3_1.c2.c.W : [256 x 2304] (gradient)
	  rn3_1.c3.c : [14 x 14 x 1024 x *] (gradient) }
	{ rn3_1.c3.y.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_1.c_proj.y.y : [14 x 14 x 1024 x *]
	  rn3_1.y : [14 x 14 x 1024 x *] }
	{ rn3_1.c3.W : [1024 x 256] (gradient)
	  rn3_1.p : [14 x 14 x 1024 x *]
	  rn3_2.c1.c.c : [14 x 14 x 256 x *] }
	{ rn2_4.c2.c.y.sc : [128 x 1] (gradient)
	  rn2_4.c2.y : [28 x 28 x 128 x *] (gradient)
	  rn2_4.y : [28 x 28 x 512 x *] (gradient)
	  rn3_2.c1.c.y.y : [14 x 14 x 256 x *]
	  rn3_2.c2.c.c.c : [14 x 14 x 256 x *] }
	{ rn3_1.c_proj.y.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_2.c1.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_2.c1.y : [14 x 14 x 256 x *] }
	{ rn3_1.c_proj.y.b : [1024 x 1] (gradient)
	  rn3_2.c1.c.y.y : [14 x 14 x 256 x *] (gradient) }
	{ rn3_2.c1.c.y.sc : [256 x 1] (gradient)
	  rn3_2.c1.y : [14 x 14 x 256 x *] (gradient)
	  rn3_2.c2.c.y.y : [14 x 14 x 256 x *]
	  rn3_2.c3.c : [14 x 14 x 1024 x *] }
	{ rn3_2.c1.c.W : [256 x 1024] (gradient)
	  rn3_2.c2.c.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_2.c2.y : [14 x 14 x 256 x *] }
	{ rn3_2.c3.y.y : [14 x 14 x 1024 x *]
	  rn3_2.c3.y.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_2.y : [14 x 14 x 1024 x *] }
	{ rn3_2.c3.W : [1024 x 256] (gradient)
	  rn3_2.p : [14 x 14 x 1024 x *]
	  rn3_3.c1.c.c : [14 x 14 x 256 x *] }
	{ rn3_2.c2.c.W : [256 x 2304] (gradient)
	  rn3_2.c3.c : [14 x 14 x 1024 x *] (gradient)
	  rn3_2.p : [14 x 14 x 1024 x *] (gradient) }
	{ rn3_2.c3.y.sc : [1024 x 1] (gradient)
	  rn3_3.c1.c.y.y : [14 x 14 x 256 x *]
	  rn3_3.c2.c.c.c : [14 x 14 x 256 x *] }
	{ rn3_1.c2.c.y.sc : [256 x 1] (gradient)
	  rn3_1.c2.y : [14 x 14 x 256 x *] (gradient)
	  rn3_1.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_3.c1.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_3.c1.y : [14 x 14 x 256 x *] }
	{ rn3_3.c1.c.y.sc : [256 x 1] (gradient)
	  rn3_3.c1.y : [14 x 14 x 256 x *] (gradient)
	  rn3_3.c2.c.y.y : [14 x 14 x 256 x *]
	  rn3_3.c3.c : [14 x 14 x 1024 x *] }
	{ rn3_3.c1.c.W : [256 x 1024] (gradient)
	  rn3_3.c2.c.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_3.c2.y : [14 x 14 x 256 x *] }
	{ rn3_3.c3.y.y : [14 x 14 x 1024 x *]
	  rn3_3.c3.y.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_3.y : [14 x 14 x 1024 x *] }
	{ rn3_3.c3.W : [1024 x 256] (gradient)
	  rn3_3.p : [14 x 14 x 1024 x *]
	  rn3_4.c1.c.c : [14 x 14 x 256 x *] }
	{ rn3_3.c2.c.W : [256 x 2304] (gradient)
	  rn3_3.c3.c : [14 x 14 x 1024 x *] (gradient)
	  rn3_3.p : [14 x 14 x 1024 x *] (gradient) }
	{ rn3_3.c3.y.sc : [1024 x 1] (gradient)
	  rn3_4.c1.c.y.y : [14 x 14 x 256 x *]
	  rn3_4.c2.c.c.c : [14 x 14 x 256 x *] }
	{ rn3_2.c2.c.y.sc : [256 x 1] (gradient)
	  rn3_2.c2.y : [14 x 14 x 256 x *] (gradient)
	  rn3_2.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_4.c1.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_4.c1.y : [14 x 14 x 256 x *] }
	{ rn3_4.c1.c.y.sc : [256 x 1] (gradient)
	  rn3_4.c1.y : [14 x 14 x 256 x *] (gradient)
	  rn3_4.c2.c.y.y : [14 x 14 x 256 x *]
	  rn3_4.c3.c : [14 x 14 x 1024 x *] }
	{ rn3_4.c1.c.W : [256 x 1024] (gradient)
	  rn3_4.c2.c.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_4.c2.y : [14 x 14 x 256 x *] }
	{ rn3_4.c3.y.y : [14 x 14 x 1024 x *]
	  rn3_4.c3.y.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_4.y : [14 x 14 x 1024 x *] }
	{ rn3_4.c3.W : [1024 x 256] (gradient)
	  rn3_4.p : [14 x 14 x 1024 x *]
	  rn3_5.c1.c.c : [14 x 14 x 256 x *] }
	{ rn3_4.c2.c.W : [256 x 2304] (gradient)
	  rn3_4.c3.c : [14 x 14 x 1024 x *] (gradient)
	  rn3_4.p : [14 x 14 x 1024 x *] (gradient) }
	{ rn3_4.c3.y.sc : [1024 x 1] (gradient)
	  rn3_5.c1.c.y.y : [14 x 14 x 256 x *]
	  rn3_5.c2.c.c.c : [14 x 14 x 256 x *] }
	{ rn3_3.c2.c.y.sc : [256 x 1] (gradient)
	  rn3_3.c2.y : [14 x 14 x 256 x *] (gradient)
	  rn3_3.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_5.c1.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_5.c1.y : [14 x 14 x 256 x *] }
	{ rn3_5.c1.c.y.sc : [256 x 1] (gradient)
	  rn3_5.c1.y : [14 x 14 x 256 x *] (gradient)
	  rn3_5.c2.c.y.y : [14 x 14 x 256 x *]
	  rn3_5.c3.c : [14 x 14 x 1024 x *] }
	{ rn3_5.c1.c.W : [256 x 1024] (gradient)
	  rn3_5.c2.c.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_5.c2.y : [14 x 14 x 256 x *] }
	{ rn3_5.c3.y.y : [14 x 14 x 1024 x *]
	  rn3_5.c3.y.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_5.y : [14 x 14 x 1024 x *] }
	{ rn3_5.c3.W : [1024 x 256] (gradient)
	  rn3_5.p : [14 x 14 x 1024 x *]
	  rn3_6.c1.c.c : [14 x 14 x 256 x *] }
	{ rn3_5.c2.c.W : [256 x 2304] (gradient)
	  rn3_5.c3.c : [14 x 14 x 1024 x *] (gradient)
	  rn3_5.p : [14 x 14 x 1024 x *] (gradient) }
	{ rn3_5.c3.y.sc : [1024 x 1] (gradient)
	  rn3_6.c1.c.y.y : [14 x 14 x 256 x *]
	  rn3_6.c2.c.c.c : [14 x 14 x 256 x *] }
	{ rn3_4.c2.c.y.sc : [256 x 1] (gradient)
	  rn3_4.c2.y : [14 x 14 x 256 x *] (gradient)
	  rn3_4.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_6.c1.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_6.c1.y : [14 x 14 x 256 x *] }
	{ rn3_6.c1.c.y.sc : [256 x 1] (gradient)
	  rn3_6.c1.y : [14 x 14 x 256 x *] (gradient)
	  rn3_6.c2.c.y.y : [14 x 14 x 256 x *]
	  rn3_6.c3.c : [14 x 14 x 1024 x *] }
	{ rn3_6.c1.c.W : [256 x 1024] (gradient)
	  rn3_6.c2.c.c.c : [14 x 14 x 256 x *] (gradient)
	  rn3_6.c2.y : [14 x 14 x 256 x *] }
	{ rn3_6.c3.y.y : [14 x 14 x 1024 x *]
	  rn3_6.c3.y.y : [14 x 14 x 1024 x *] (gradient)
	  rn3_6.y : [14 x 14 x 1024 x *] }
	{ rn3_6.c3.W : [1024 x 256] (gradient)
	  rn3_6.p : [14 x 14 x 1024 x *]
	  rn4_1.c1.c.c : [14 x 14 x 512 x *] }
	{ rn3_6.c2.c.W : [256 x 2304] (gradient)
	  rn3_6.c3.c : [14 x 14 x 1024 x *] (gradient)
	  rn3_6.p : [14 x 14 x 1024 x *] (gradient) }
	{ rn3_6.c3.y.sc : [1024 x 1] (gradient)
	  rn4_1.c1.c.y.y : [14 x 14 x 512 x *]
	  rn4_1.c2.c.c.c : [7 x 7 x 512 x *] }
	{ rn3_5.c2.c.y.sc : [256 x 1] (gradient)
	  rn3_5.c2.y : [14 x 14 x 256 x *] (gradient)
	  rn3_5.y : [14 x 14 x 1024 x *] (gradient)
	  rn4_1.c1.c.c : [14 x 14 x 512 x *] (gradient)
	  rn4_1.c1.y : [14 x 14 x 512 x *] }
	{ rn4_1.c1.c.y.sc : [512 x 1] (gradient)
	  rn4_1.c1.y : [14 x 14 x 512 x *] (gradient)
	  rn4_1.c2.c.y.y : [7 x 7 x 512 x *]
	  rn4_1.c3.c : [7 x 7 x 2048 x *] }
	{ rn4_1.c1.c.W : [512 x 1024] (gradient)
	  rn4_1.c2.c.c.c : [7 x 7 x 512 x *] (gradient)
	  rn4_1.c2.y : [7 x 7 x 512 x *] }
	{ rn4_1.c3.y.b : [2048 x 1] (gradient)
	  rn4_1.c3.y.y : [7 x 7 x 2048 x *]
	  rn4_1.c_proj.c : [7 x 7 x 2048 x *] (gradient)
	  rn4_1.p : [7 x 7 x 2048 x *] (gradient) }
	{ rn4_1.c3.y.sc : [2048 x 1] (gradient)
	  rn4_1.c_proj.c : [7 x 7 x 2048 x *] }
	{ rn4_1.c2.c.W : [512 x 4608] (gradient)
	  rn4_1.c3.c : [7 x 7 x 2048 x *] (gradient) }
	{ rn4_1.c3.y.y : [7 x 7 x 2048 x *] (gradient)
	  rn4_1.c_proj.y.y : [7 x 7 x 2048 x *]
	  rn4_1.y : [7 x 7 x 2048 x *] }
	{ rn4_1.c3.W : [2048 x 512] (gradient)
	  rn4_1.p : [7 x 7 x 2048 x *]
	  rn4_2.c1.c.c : [7 x 7 x 512 x *] }
	{ rn3_6.c2.c.y.sc : [256 x 1] (gradient)
	  rn3_6.c2.y : [14 x 14 x 256 x *] (gradient)
	  rn3_6.y : [14 x 14 x 1024 x *] (gradient)
	  rn4_2.c1.c.y.y : [7 x 7 x 512 x *]
	  rn4_2.c2.c.c.c : [7 x 7 x 512 x *] }
	{ rn4_1.c_proj.y.y : [7 x 7 x 2048 x *] (gradient)
	  rn4_2.c1.c.c : [7 x 7 x 512 x *] (gradient)
	  rn4_2.c1.y : [7 x 7 x 512 x *] }
	{ rn4_1.c_proj.y.b : [2048 x 1] (gradient)
	  rn4_2.c1.c.y.y : [7 x 7 x 512 x *] (gradient) }
	{ rn4_2.c1.c.y.sc : [512 x 1] (gradient)
	  rn4_2.c1.y : [7 x 7 x 512 x *] (gradient)
	  rn4_2.c2.c.y.y : [7 x 7 x 512 x *]
	  rn4_2.c3.c : [7 x 7 x 2048 x *] }
	{ rn4_2.c1.c.W : [512 x 2048] (gradient)
	  rn4_2.c2.c.c.c : [7 x 7 x 512 x *] (gradient)
	  rn4_2.c2.y : [7 x 7 x 512 x *] }
	{ rn4_2.c3.y.y : [7 x 7 x 2048 x *]
	  rn4_2.c3.y.y : [7 x 7 x 2048 x *] (gradient)
	  rn4_2.y : [7 x 7 x 2048 x *] }
	{ rn4_2.c3.W : [2048 x 512] (gradient)
	  rn4_2.p : [7 x 7 x 2048 x *]
	  rn4_3.c1.c.c : [7 x 7 x 512 x *] }
	{ rn4_2.c2.c.W : [512 x 4608] (gradient)
	  rn4_2.c3.c : [7 x 7 x 2048 x *] (gradient)
	  rn4_2.p : [7 x 7 x 2048 x *] (gradient) }
	{ rn4_2.c3.y.sc : [2048 x 1] (gradient)
	  rn4_3.c1.c.y.y : [7 x 7 x 512 x *]
	  rn4_3.c2.c.c.c : [7 x 7 x 512 x *] }
	{ rn4_1.c2.c.y.sc : [512 x 1] (gradient)
	  rn4_1.c2.y : [7 x 7 x 512 x *] (gradient)
	  rn4_1.y : [7 x 7 x 2048 x *] (gradient)
	  rn4_3.c1.c.c : [7 x 7 x 512 x *] (gradient)
	  rn4_3.c1.y : [7 x 7 x 512 x *] }
	{ rn4_3.c1.c.y.sc : [512 x 1] (gradient)
	  rn4_3.c1.y : [7 x 7 x 512 x *] (gradient)
	  rn4_3.c2.c.y.y : [7 x 7 x 512 x *]
	  rn4_3.c3.c : [7 x 7 x 2048 x *] }
	{ rn4_3.c1.c.W : [512 x 2048] (gradient)
	  rn4_3.c2.c.c.c : [7 x 7 x 512 x *] (gradient)
	  rn4_3.c2.y : [7 x 7 x 512 x *] }
	{ rn4_3.c3.y.y : [7 x 7 x 2048 x *]
	  rn4_3.c3.y.y : [7 x 7 x 2048 x *] (gradient)
	  rn4_3.y : [7 x 7 x 2048 x *] }
	{ pool2 : [1 x 1 x 2048 x *]
	  rn4_3.c2.c.W : [512 x 4608] (gradient)
	  rn4_3.c3.c : [7 x 7 x 2048 x *] (gradient)
	  rn4_3.p : [7 x 7 x 2048 x *]
	  rn4_3.p : [7 x 7 x 2048 x *] (gradient) }
	{ OutputNodes.W : [1000 x 1 x 1 x 2048] (gradient)
	  OutputNodes.z : [1000 x *] (gradient) }
	{ OutputNodes.t : [1000 x *] (gradient)
	  rn4_3.c2.c.y.sc : [512 x 1] (gradient)
	  rn4_3.c2.y : [7 x 7 x 512 x *] (gradient)
	  rn4_3.y : [7 x 7 x 2048 x *] (gradient) }
	{ pool2 : [1 x 1 x 2048 x *] (gradient)
	  rn4_3.c3.W : [2048 x 512] (gradient) }
	{ rn4_2.c2.c.y.sc : [512 x 1] (gradient)
	  rn4_2.c2.y : [7 x 7 x 512 x *] (gradient)
	  rn4_2.y : [7 x 7 x 2048 x *] (gradient) }


Training 25557032 parameters in 161 out of 161 parameter tensors and 337 nodes with gradient:

	Node 'OutputNodes.W' (LearnableParameter operation) : [1000 x 1 x 1 x 2048]
	Node 'OutputNodes.b' (LearnableParameter operation) : [1000]
	Node 'conv1.c.W' (LearnableParameter operation) : [64 x 147]
	Node 'conv1.c.y.b' (LearnableParameter operation) : [64 x 1]
	Node 'conv1.c.y.sc' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_1.c1.c.W' (LearnableParameter operation) : [64 x 64]
	Node 'rn1_1.c1.c.y.b' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_1.c1.c.y.sc' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_1.c2.c.W' (LearnableParameter operation) : [64 x 576]
	Node 'rn1_1.c2.c.y.b' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_1.c2.c.y.sc' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_1.c3.W' (LearnableParameter operation) : [256 x 64]
	Node 'rn1_1.c3.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn1_1.c3.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn1_1.c_proj.W' (LearnableParameter operation) : [256 x 64]
	Node 'rn1_1.c_proj.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn1_1.c_proj.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn1_2.c1.c.W' (LearnableParameter operation) : [64 x 256]
	Node 'rn1_2.c1.c.y.b' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_2.c1.c.y.sc' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_2.c2.c.W' (LearnableParameter operation) : [64 x 576]
	Node 'rn1_2.c2.c.y.b' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_2.c2.c.y.sc' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_2.c3.W' (LearnableParameter operation) : [256 x 64]
	Node 'rn1_2.c3.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn1_2.c3.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn1_3.c1.c.W' (LearnableParameter operation) : [64 x 256]
	Node 'rn1_3.c1.c.y.b' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_3.c1.c.y.sc' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_3.c2.c.W' (LearnableParameter operation) : [64 x 576]
	Node 'rn1_3.c2.c.y.b' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_3.c2.c.y.sc' (LearnableParameter operation) : [64 x 1]
	Node 'rn1_3.c3.W' (LearnableParameter operation) : [256 x 64]
	Node 'rn1_3.c3.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn1_3.c3.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn2_1.c1.c.W' (LearnableParameter operation) : [128 x 256]
	Node 'rn2_1.c1.c.y.b' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_1.c1.c.y.sc' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_1.c2.c.W' (LearnableParameter operation) : [128 x 1152]
	Node 'rn2_1.c2.c.y.b' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_1.c2.c.y.sc' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_1.c3.W' (LearnableParameter operation) : [512 x 128]
	Node 'rn2_1.c3.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_1.c3.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_1.c_proj.W' (LearnableParameter operation) : [512 x 256]
	Node 'rn2_1.c_proj.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_1.c_proj.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_2.c1.c.W' (LearnableParameter operation) : [128 x 512]
	Node 'rn2_2.c1.c.y.b' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_2.c1.c.y.sc' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_2.c2.c.W' (LearnableParameter operation) : [128 x 1152]
	Node 'rn2_2.c2.c.y.b' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_2.c2.c.y.sc' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_2.c3.W' (LearnableParameter operation) : [512 x 128]
	Node 'rn2_2.c3.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_2.c3.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_3.c1.c.W' (LearnableParameter operation) : [128 x 512]
	Node 'rn2_3.c1.c.y.b' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_3.c1.c.y.sc' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_3.c2.c.W' (LearnableParameter operation) : [128 x 1152]
	Node 'rn2_3.c2.c.y.b' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_3.c2.c.y.sc' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_3.c3.W' (LearnableParameter operation) : [512 x 128]
	Node 'rn2_3.c3.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_3.c3.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_4.c1.c.W' (LearnableParameter operation) : [128 x 512]
	Node 'rn2_4.c1.c.y.b' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_4.c1.c.y.sc' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_4.c2.c.W' (LearnableParameter operation) : [128 x 1152]
	Node 'rn2_4.c2.c.y.b' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_4.c2.c.y.sc' (LearnableParameter operation) : [128 x 1]
	Node 'rn2_4.c3.W' (LearnableParameter operation) : [512 x 128]
	Node 'rn2_4.c3.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn2_4.c3.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn3_1.c1.c.W' (LearnableParameter operation) : [256 x 512]
	Node 'rn3_1.c1.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_1.c1.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_1.c2.c.W' (LearnableParameter operation) : [256 x 2304]
	Node 'rn3_1.c2.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_1.c2.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_1.c3.W' (LearnableParameter operation) : [1024 x 256]
	Node 'rn3_1.c3.y.b' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_1.c3.y.sc' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_1.c_proj.W' (LearnableParameter operation) : [1024 x 512]
	Node 'rn3_1.c_proj.y.b' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_1.c_proj.y.sc' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_2.c1.c.W' (LearnableParameter operation) : [256 x 1024]
	Node 'rn3_2.c1.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_2.c1.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_2.c2.c.W' (LearnableParameter operation) : [256 x 2304]
	Node 'rn3_2.c2.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_2.c2.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_2.c3.W' (LearnableParameter operation) : [1024 x 256]
	Node 'rn3_2.c3.y.b' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_2.c3.y.sc' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_3.c1.c.W' (LearnableParameter operation) : [256 x 1024]
	Node 'rn3_3.c1.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_3.c1.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_3.c2.c.W' (LearnableParameter operation) : [256 x 2304]
	Node 'rn3_3.c2.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_3.c2.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_3.c3.W' (LearnableParameter operation) : [1024 x 256]
	Node 'rn3_3.c3.y.b' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_3.c3.y.sc' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_4.c1.c.W' (LearnableParameter operation) : [256 x 1024]
	Node 'rn3_4.c1.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_4.c1.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_4.c2.c.W' (LearnableParameter operation) : [256 x 2304]
	Node 'rn3_4.c2.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_4.c2.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_4.c3.W' (LearnableParameter operation) : [1024 x 256]
	Node 'rn3_4.c3.y.b' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_4.c3.y.sc' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_5.c1.c.W' (LearnableParameter operation) : [256 x 1024]
	Node 'rn3_5.c1.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_5.c1.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_5.c2.c.W' (LearnableParameter operation) : [256 x 2304]
	Node 'rn3_5.c2.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_5.c2.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_5.c3.W' (LearnableParameter operation) : [1024 x 256]
	Node 'rn3_5.c3.y.b' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_5.c3.y.sc' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_6.c1.c.W' (LearnableParameter operation) : [256 x 1024]
	Node 'rn3_6.c1.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_6.c1.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_6.c2.c.W' (LearnableParameter operation) : [256 x 2304]
	Node 'rn3_6.c2.c.y.b' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_6.c2.c.y.sc' (LearnableParameter operation) : [256 x 1]
	Node 'rn3_6.c3.W' (LearnableParameter operation) : [1024 x 256]
	Node 'rn3_6.c3.y.b' (LearnableParameter operation) : [1024 x 1]
	Node 'rn3_6.c3.y.sc' (LearnableParameter operation) : [1024 x 1]
	Node 'rn4_1.c1.c.W' (LearnableParameter operation) : [512 x 1024]
	Node 'rn4_1.c1.c.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_1.c1.c.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_1.c2.c.W' (LearnableParameter operation) : [512 x 4608]
	Node 'rn4_1.c2.c.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_1.c2.c.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_1.c3.W' (LearnableParameter operation) : [2048 x 512]
	Node 'rn4_1.c3.y.b' (LearnableParameter operation) : [2048 x 1]
	Node 'rn4_1.c3.y.sc' (LearnableParameter operation) : [2048 x 1]
	Node 'rn4_1.c_proj.W' (LearnableParameter operation) : [2048 x 1024]
	Node 'rn4_1.c_proj.y.b' (LearnableParameter operation) : [2048 x 1]
	Node 'rn4_1.c_proj.y.sc' (LearnableParameter operation) : [2048 x 1]
	Node 'rn4_2.c1.c.W' (LearnableParameter operation) : [512 x 2048]
	Node 'rn4_2.c1.c.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_2.c1.c.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_2.c2.c.W' (LearnableParameter operation) : [512 x 4608]
	Node 'rn4_2.c2.c.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_2.c2.c.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_2.c3.W' (LearnableParameter operation) : [2048 x 512]
	Node 'rn4_2.c3.y.b' (LearnableParameter operation) : [2048 x 1]
	Node 'rn4_2.c3.y.sc' (LearnableParameter operation) : [2048 x 1]
	Node 'rn4_3.c1.c.W' (LearnableParameter operation) : [512 x 2048]
	Node 'rn4_3.c1.c.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_3.c1.c.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_3.c2.c.W' (LearnableParameter operation) : [512 x 4608]
	Node 'rn4_3.c2.c.y.b' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_3.c2.c.y.sc' (LearnableParameter operation) : [512 x 1]
	Node 'rn4_3.c3.W' (LearnableParameter operation) : [2048 x 512]
	Node 'rn4_3.c3.y.b' (LearnableParameter operation) : [2048 x 1]
	Node 'rn4_3.c3.y.sc' (LearnableParameter operation) : [2048 x 1]

No PreCompute nodes found, or all already computed. Skipping pre-computation step.

Starting Epoch 1: learning rate per sample = 0.062500  effective momentum = 0.900000  momentum as time constant = 151.9 samples
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 1600 records found.
starting epoch 1 at record count 0, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 1 of 2]-Minibatch[   1-   1, 1.00%]: CE = 6.97928190 * 16; Err = 1.00000000 * 16; time = 3.7042s; samplesPerSecond = 4.3
 Epoch[ 1 of 2]-Minibatch[   2-   2, 2.00%]: CE = 16.69382524 * 16; Err = 1.00000000 * 16; time = 0.1850s; samplesPerSecond = 86.5
 Epoch[ 1 of 2]-Minibatch[   3-   3, 3.00%]: CE = 19.93352509 * 16; Err = 1.00000000 * 16; time = 0.2269s; samplesPerSecond = 70.5
 Epoch[ 1 of 2]-Minibatch[   4-   4, 4.00%]: CE = 26.13403702 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[   5-   5, 5.00%]: CE = 40.97284698 * 16; Err = 1.00000000 * 16; time = 0.1860s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[   6-   6, 6.00%]: CE = 36.99644470 * 16; Err = 1.00000000 * 16; time = 0.1861s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[   7-   7, 7.00%]: CE = 32.62855530 * 16; Err = 1.00000000 * 16; time = 0.1862s; samplesPerSecond = 85.9
 Epoch[ 1 of 2]-Minibatch[   8-   8, 8.00%]: CE = 31.64830017 * 16; Err = 1.00000000 * 16; time = 0.1877s; samplesPerSecond = 85.3
 Epoch[ 1 of 2]-Minibatch[   9-   9, 9.00%]: CE = 26.65451050 * 16; Err = 1.00000000 * 16; time = 0.1861s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  10-  10, 10.00%]: CE = 30.24731445 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  11-  11, 11.00%]: CE = 20.29187012 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  12-  12, 12.00%]: CE = 18.54531860 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  13-  13, 13.00%]: CE = 17.76144409 * 16; Err = 1.00000000 * 16; time = 0.1884s; samplesPerSecond = 84.9
 Epoch[ 1 of 2]-Minibatch[  14-  14, 14.00%]: CE = 15.14697266 * 16; Err = 1.00000000 * 16; time = 0.1851s; samplesPerSecond = 86.4
 Epoch[ 1 of 2]-Minibatch[  15-  15, 15.00%]: CE = 13.11834717 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  16-  16, 16.00%]: CE = 11.23379517 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  17-  17, 17.00%]: CE = 7.94598389 * 16; Err = 1.00000000 * 16; time = 0.1859s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  18-  18, 18.00%]: CE = 11.55972290 * 16; Err = 1.00000000 * 16; time = 0.1853s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  19-  19, 19.00%]: CE = 9.42184448 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  20-  20, 20.00%]: CE = 9.11801147 * 16; Err = 1.00000000 * 16; time = 0.1853s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  21-  21, 21.00%]: CE = 10.40170288 * 16; Err = 1.00000000 * 16; time = 0.1863s; samplesPerSecond = 85.9
 Epoch[ 1 of 2]-Minibatch[  22-  22, 22.00%]: CE = 10.80261230 * 16; Err = 1.00000000 * 16; time = 0.1846s; samplesPerSecond = 86.7
 Epoch[ 1 of 2]-Minibatch[  23-  23, 23.00%]: CE = 9.01806641 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  24-  24, 24.00%]: CE = 9.91366577 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  25-  25, 25.00%]: CE = 8.41162109 * 16; Err = 1.00000000 * 16; time = 0.1852s; samplesPerSecond = 86.4
 Epoch[ 1 of 2]-Minibatch[  26-  26, 26.00%]: CE = 9.64526367 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  27-  27, 27.00%]: CE = 8.41723633 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  28-  28, 28.00%]: CE = 7.90084839 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  29-  29, 29.00%]: CE = 7.54248047 * 16; Err = 1.00000000 * 16; time = 0.1940s; samplesPerSecond = 82.5
 Epoch[ 1 of 2]-Minibatch[  30-  30, 30.00%]: CE = 7.79187012 * 16; Err = 1.00000000 * 16; time = 0.1854s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  31-  31, 31.00%]: CE = 7.68759155 * 16; Err = 1.00000000 * 16; time = 0.1861s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  32-  32, 32.00%]: CE = 7.42089844 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  33-  33, 33.00%]: CE = 7.55026245 * 16; Err = 1.00000000 * 16; time = 0.1853s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  34-  34, 34.00%]: CE = 7.34857178 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  35-  35, 35.00%]: CE = 7.28167725 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  36-  36, 36.00%]: CE = 7.07397461 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  37-  37, 37.00%]: CE = 6.91729736 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  38-  38, 38.00%]: CE = 6.98150635 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  39-  39, 39.00%]: CE = 7.17535400 * 16; Err = 1.00000000 * 16; time = 0.1859s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  40-  40, 40.00%]: CE = 6.99884033 * 16; Err = 1.00000000 * 16; time = 0.1851s; samplesPerSecond = 86.4
 Epoch[ 1 of 2]-Minibatch[  41-  41, 41.00%]: CE = 6.98809814 * 16; Err = 1.00000000 * 16; time = 0.1859s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  42-  42, 42.00%]: CE = 7.04321289 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  43-  43, 43.00%]: CE = 7.01367188 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  44-  44, 44.00%]: CE = 6.91717529 * 16; Err = 1.00000000 * 16; time = 0.1853s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  45-  45, 45.00%]: CE = 6.93670654 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  46-  46, 46.00%]: CE = 7.00970459 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  47-  47, 47.00%]: CE = 7.04083252 * 16; Err = 1.00000000 * 16; time = 0.1867s; samplesPerSecond = 85.7
 Epoch[ 1 of 2]-Minibatch[  48-  48, 48.00%]: CE = 7.00488281 * 16; Err = 1.00000000 * 16; time = 0.1848s; samplesPerSecond = 86.6
 Epoch[ 1 of 2]-Minibatch[  49-  49, 49.00%]: CE = 6.82421875 * 16; Err = 1.00000000 * 16; time = 0.1861s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  50-  50, 50.00%]: CE = 6.94665527 * 16; Err = 1.00000000 * 16; time = 0.1882s; samplesPerSecond = 85.0
 Epoch[ 1 of 2]-Minibatch[  51-  51, 51.00%]: CE = 6.96569824 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  52-  52, 52.00%]: CE = 6.92309570 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  53-  53, 53.00%]: CE = 6.96453857 * 16; Err = 1.00000000 * 16; time = 0.1854s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  54-  54, 54.00%]: CE = 6.94488525 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  55-  55, 55.00%]: CE = 6.94384766 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  56-  56, 56.00%]: CE = 6.94201660 * 16; Err = 1.00000000 * 16; time = 0.1860s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  57-  57, 57.00%]: CE = 6.94897461 * 16; Err = 1.00000000 * 16; time = 0.1852s; samplesPerSecond = 86.4
 Epoch[ 1 of 2]-Minibatch[  58-  58, 58.00%]: CE = 6.95196533 * 16; Err = 1.00000000 * 16; time = 0.1859s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  59-  59, 59.00%]: CE = 6.87829590 * 16; Err = 1.00000000 * 16; time = 0.1860s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  60-  60, 60.00%]: CE = 6.95520020 * 16; Err = 1.00000000 * 16; time = 0.1854s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  61-  61, 61.00%]: CE = 6.92382812 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  62-  62, 62.00%]: CE = 6.96002197 * 16; Err = 1.00000000 * 16; time = 0.1862s; samplesPerSecond = 85.9
 Epoch[ 1 of 2]-Minibatch[  63-  63, 63.00%]: CE = 6.87268066 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  64-  64, 64.00%]: CE = 6.89508057 * 16; Err = 1.00000000 * 16; time = 0.1860s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  65-  65, 65.00%]: CE = 6.91241455 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  66-  66, 66.00%]: CE = 6.95861816 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  67-  67, 67.00%]: CE = 6.98638916 * 16; Err = 1.00000000 * 16; time = 0.1860s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  68-  68, 68.00%]: CE = 6.84362793 * 16; Err = 1.00000000 * 16; time = 0.1853s; samplesPerSecond = 86.4
 Epoch[ 1 of 2]-Minibatch[  69-  69, 69.00%]: CE = 6.95477295 * 16; Err = 1.00000000 * 16; time = 0.1852s; samplesPerSecond = 86.4
 Epoch[ 1 of 2]-Minibatch[  70-  70, 70.00%]: CE = 6.90887451 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  71-  71, 71.00%]: CE = 6.87792969 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  72-  72, 72.00%]: CE = 6.82452393 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  73-  73, 73.00%]: CE = 6.88726807 * 16; Err = 1.00000000 * 16; time = 0.1860s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  74-  74, 74.00%]: CE = 6.93426514 * 16; Err = 1.00000000 * 16; time = 0.1926s; samplesPerSecond = 83.1
 Epoch[ 1 of 2]-Minibatch[  75-  75, 75.00%]: CE = 6.88378906 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  76-  76, 76.00%]: CE = 6.93194580 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  77-  77, 77.00%]: CE = 6.92694092 * 16; Err = 1.00000000 * 16; time = 0.1854s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  78-  78, 78.00%]: CE = 6.93371582 * 16; Err = 1.00000000 * 16; time = 0.1853s; samplesPerSecond = 86.4
 Epoch[ 1 of 2]-Minibatch[  79-  79, 79.00%]: CE = 6.94110107 * 16; Err = 1.00000000 * 16; time = 0.1852s; samplesPerSecond = 86.4
 Epoch[ 1 of 2]-Minibatch[  80-  80, 80.00%]: CE = 6.95239258 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  81-  81, 81.00%]: CE = 6.89788818 * 16; Err = 1.00000000 * 16; time = 0.1854s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  82-  82, 82.00%]: CE = 6.94793701 * 16; Err = 1.00000000 * 16; time = 0.1887s; samplesPerSecond = 84.8
 Epoch[ 1 of 2]-Minibatch[  83-  83, 83.00%]: CE = 6.98248291 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  84-  84, 84.00%]: CE = 6.90118408 * 16; Err = 1.00000000 * 16; time = 0.1861s; samplesPerSecond = 86.0
 Epoch[ 1 of 2]-Minibatch[  85-  85, 85.00%]: CE = 6.80438232 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  86-  86, 86.00%]: CE = 6.92022705 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  87-  87, 87.00%]: CE = 6.94500732 * 16; Err = 1.00000000 * 16; time = 0.1925s; samplesPerSecond = 83.1
 Epoch[ 1 of 2]-Minibatch[  88-  88, 88.00%]: CE = 6.87634277 * 16; Err = 0.93750000 * 16; time = 0.1859s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  89-  89, 89.00%]: CE = 6.93011475 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  90-  90, 90.00%]: CE = 6.85742188 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  91-  91, 91.00%]: CE = 6.88226318 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  92-  92, 92.00%]: CE = 6.84924316 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  93-  93, 93.00%]: CE = 6.93316650 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  94-  94, 94.00%]: CE = 6.91949463 * 16; Err = 1.00000000 * 16; time = 0.1859s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  95-  95, 95.00%]: CE = 6.94329834 * 16; Err = 1.00000000 * 16; time = 0.1857s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[  96-  96, 96.00%]: CE = 6.90777588 * 16; Err = 1.00000000 * 16; time = 0.1856s; samplesPerSecond = 86.2
 Epoch[ 1 of 2]-Minibatch[  97-  97, 97.00%]: CE = 6.91259766 * 16; Err = 1.00000000 * 16; time = 0.1854s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  98-  98, 98.00%]: CE = 6.92535400 * 16; Err = 1.00000000 * 16; time = 0.1855s; samplesPerSecond = 86.3
 Epoch[ 1 of 2]-Minibatch[  99-  99, 99.00%]: CE = 6.92059326 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 2]-Minibatch[ 100- 100, 100.00%]: CE = 6.94335938 * 16; Err = 1.00000000 * 16; time = 0.1853s; samplesPerSecond = 86.3
Finished Epoch[ 1 of 2]: [Training] CE = 9.80967285 * 1600; Err = 0.99937500 * 1600; totalSamplesSeen = 1600; learningRatePerSample = 0.0625; epochTime=31.951s
SGD: Saving checkpoint model './Output/resnet/ResNet_50.1'

Starting Epoch 2: learning rate per sample = 0.062500  effective momentum = 0.900000  momentum as time constant = 151.9 samples
starting epoch 2 at record count 1600, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 2 of 2]-Minibatch[   1-   1, 1.00%]: CE = 7.03999138 * 16; Err = 1.00000000 * 16; time = 0.1851s; samplesPerSecond = 86.4
 Epoch[ 2 of 2]-Minibatch[   2-   2, 2.00%]: CE = 6.87202358 * 16; Err = 1.00000000 * 16; time = 0.1845s; samplesPerSecond = 86.7
 Epoch[ 2 of 2]-Minibatch[   3-   3, 3.00%]: CE = 6.84373379 * 16; Err = 1.00000000 * 16; time = 0.1824s; samplesPerSecond = 87.7
 Epoch[ 2 of 2]-Minibatch[   4-   4, 4.00%]: CE = 8.51107788 * 16; Err = 1.00000000 * 16; time = 0.1823s; samplesPerSecond = 87.8
 Epoch[ 2 of 2]-Minibatch[   5-   5, 5.00%]: CE = 6.96596527 * 16; Err = 1.00000000 * 16; time = 0.1826s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[   6-   6, 6.00%]: CE = 6.98961639 * 16; Err = 1.00000000 * 16; time = 0.1829s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[   7-   7, 7.00%]: CE = 7.57900620 * 16; Err = 1.00000000 * 16; time = 0.1830s; samplesPerSecond = 87.4
 Epoch[ 2 of 2]-Minibatch[   8-   8, 8.00%]: CE = 6.79143143 * 16; Err = 1.00000000 * 16; time = 0.1827s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[   9-   9, 9.00%]: CE = 6.85155106 * 16; Err = 1.00000000 * 16; time = 0.1827s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[  10-  10, 10.00%]: CE = 6.89163971 * 16; Err = 1.00000000 * 16; time = 0.1823s; samplesPerSecond = 87.8
 Epoch[ 2 of 2]-Minibatch[  11-  11, 11.00%]: CE = 6.83958435 * 16; Err = 1.00000000 * 16; time = 0.1830s; samplesPerSecond = 87.4
 Epoch[ 2 of 2]-Minibatch[  12-  12, 12.00%]: CE = 6.85250854 * 16; Err = 1.00000000 * 16; time = 0.1828s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[  13-  13, 13.00%]: CE = 6.84613800 * 16; Err = 1.00000000 * 16; time = 0.1826s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[  14-  14, 14.00%]: CE = 6.86853027 * 16; Err = 1.00000000 * 16; time = 0.1825s; samplesPerSecond = 87.7
 Epoch[ 2 of 2]-Minibatch[  15-  15, 15.00%]: CE = 6.86850739 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 2 of 2]-Minibatch[  16-  16, 16.00%]: CE = 6.89654541 * 16; Err = 1.00000000 * 16; time = 0.1819s; samplesPerSecond = 88.0
 Epoch[ 2 of 2]-Minibatch[  17-  17, 17.00%]: CE = 6.87174988 * 16; Err = 1.00000000 * 16; time = 0.1826s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[  18-  18, 18.00%]: CE = 6.87804413 * 16; Err = 1.00000000 * 16; time = 0.1825s; samplesPerSecond = 87.7
 Epoch[ 2 of 2]-Minibatch[  19-  19, 19.00%]: CE = 6.84579468 * 16; Err = 1.00000000 * 16; time = 0.1827s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[  20-  20, 20.00%]: CE = 6.89349365 * 16; Err = 1.00000000 * 16; time = 0.1829s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[  21-  21, 21.00%]: CE = 6.93988037 * 16; Err = 0.93750000 * 16; time = 0.1829s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[  22-  22, 22.00%]: CE = 6.83172607 * 16; Err = 1.00000000 * 16; time = 0.1824s; samplesPerSecond = 87.7
 Epoch[ 2 of 2]-Minibatch[  23-  23, 23.00%]: CE = 6.85566711 * 16; Err = 1.00000000 * 16; time = 0.1828s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[  24-  24, 24.00%]: CE = 6.83097839 * 16; Err = 1.00000000 * 16; time = 0.1826s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[  25-  25, 25.00%]: CE = 6.85401917 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 2 of 2]-Minibatch[  26-  26, 26.00%]: CE = 6.83618164 * 16; Err = 1.00000000 * 16; time = 0.1827s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[  27-  27, 27.00%]: CE = 6.83265686 * 16; Err = 1.00000000 * 16; time = 0.1821s; samplesPerSecond = 87.9
 Epoch[ 2 of 2]-Minibatch[  28-  28, 28.00%]: CE = 6.81781006 * 16; Err = 1.00000000 * 16; time = 0.1826s; samplesPerSecond = 87.6
 Epoch[ 2 of 2]-Minibatch[  29-  29, 29.00%]: CE = 6.74182129 * 16; Err = 1.00000000 * 16; time = 0.1828s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[  30-  30, 30.00%]: CE = 6.85375977 * 16; Err = 1.00000000 * 16; time = 0.1828s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[  31-  31, 31.00%]: CE = 6.81358337 * 16; Err = 1.00000000 * 16; time = 0.1829s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[  32-  32, 32.00%]: CE = 6.78991699 * 16; Err = 0.93750000 * 16; time = 0.1830s; samplesPerSecond = 87.4
 Epoch[ 2 of 2]-Minibatch[  33-  33, 33.00%]: CE = 6.81898499 * 16; Err = 1.00000000 * 16; time = 0.1842s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  34-  34, 34.00%]: CE = 6.84947205 * 16; Err = 1.00000000 * 16; time = 0.1836s; samplesPerSecond = 87.2
 Epoch[ 2 of 2]-Minibatch[  35-  35, 35.00%]: CE = 6.83549500 * 16; Err = 1.00000000 * 16; time = 0.1836s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  36-  36, 36.00%]: CE = 6.82926941 * 16; Err = 1.00000000 * 16; time = 0.1842s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  37-  37, 37.00%]: CE = 6.79776001 * 16; Err = 1.00000000 * 16; time = 0.1833s; samplesPerSecond = 87.3
 Epoch[ 2 of 2]-Minibatch[  38-  38, 38.00%]: CE = 6.85156250 * 16; Err = 1.00000000 * 16; time = 0.1834s; samplesPerSecond = 87.3
 Epoch[ 2 of 2]-Minibatch[  39-  39, 39.00%]: CE = 6.84661865 * 16; Err = 1.00000000 * 16; time = 0.1838s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  40-  40, 40.00%]: CE = 6.81106567 * 16; Err = 1.00000000 * 16; time = 0.1831s; samplesPerSecond = 87.4
 Epoch[ 2 of 2]-Minibatch[  41-  41, 41.00%]: CE = 6.78695679 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  42-  42, 42.00%]: CE = 6.80090332 * 16; Err = 1.00000000 * 16; time = 0.1842s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  43-  43, 43.00%]: CE = 6.81082153 * 16; Err = 1.00000000 * 16; time = 0.1838s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  44-  44, 44.00%]: CE = 6.74938965 * 16; Err = 1.00000000 * 16; time = 0.1836s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  45-  45, 45.00%]: CE = 6.80184937 * 16; Err = 1.00000000 * 16; time = 0.1838s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  46-  46, 46.00%]: CE = 6.84356689 * 16; Err = 1.00000000 * 16; time = 0.1840s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  47-  47, 47.00%]: CE = 6.91296387 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  48-  48, 48.00%]: CE = 6.84408569 * 16; Err = 1.00000000 * 16; time = 0.1842s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  49-  49, 49.00%]: CE = 6.80108643 * 16; Err = 1.00000000 * 16; time = 0.1840s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  50-  50, 50.00%]: CE = 6.80636597 * 16; Err = 1.00000000 * 16; time = 0.1842s; samplesPerSecond = 86.8
 Epoch[ 2 of 2]-Minibatch[  51-  51, 51.00%]: CE = 6.78692627 * 16; Err = 1.00000000 * 16; time = 0.1839s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  52-  52, 52.00%]: CE = 6.81451416 * 16; Err = 1.00000000 * 16; time = 0.1839s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  53-  53, 53.00%]: CE = 6.80517578 * 16; Err = 1.00000000 * 16; time = 0.1844s; samplesPerSecond = 86.8
 Epoch[ 2 of 2]-Minibatch[  54-  54, 54.00%]: CE = 6.79782104 * 16; Err = 0.93750000 * 16; time = 0.1833s; samplesPerSecond = 87.3
 Epoch[ 2 of 2]-Minibatch[  55-  55, 55.00%]: CE = 6.80166626 * 16; Err = 1.00000000 * 16; time = 0.1835s; samplesPerSecond = 87.2
 Epoch[ 2 of 2]-Minibatch[  56-  56, 56.00%]: CE = 6.82189941 * 16; Err = 1.00000000 * 16; time = 0.1837s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  57-  57, 57.00%]: CE = 6.84393311 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  58-  58, 58.00%]: CE = 6.79754639 * 16; Err = 1.00000000 * 16; time = 0.1843s; samplesPerSecond = 86.8
 Epoch[ 2 of 2]-Minibatch[  59-  59, 59.00%]: CE = 6.77929688 * 16; Err = 1.00000000 * 16; time = 0.1839s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  60-  60, 60.00%]: CE = 6.86300659 * 16; Err = 1.00000000 * 16; time = 0.1829s; samplesPerSecond = 87.5
 Epoch[ 2 of 2]-Minibatch[  61-  61, 61.00%]: CE = 6.76556396 * 16; Err = 1.00000000 * 16; time = 0.1834s; samplesPerSecond = 87.2
 Epoch[ 2 of 2]-Minibatch[  62-  62, 62.00%]: CE = 6.85549927 * 16; Err = 1.00000000 * 16; time = 0.1843s; samplesPerSecond = 86.8
 Epoch[ 2 of 2]-Minibatch[  63-  63, 63.00%]: CE = 6.80001831 * 16; Err = 1.00000000 * 16; time = 0.1840s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  64-  64, 64.00%]: CE = 6.78189087 * 16; Err = 1.00000000 * 16; time = 0.1840s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  65-  65, 65.00%]: CE = 6.79537964 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  66-  66, 66.00%]: CE = 6.86642456 * 16; Err = 1.00000000 * 16; time = 0.1839s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  67-  67, 67.00%]: CE = 6.84509277 * 16; Err = 1.00000000 * 16; time = 0.1834s; samplesPerSecond = 87.2
 Epoch[ 2 of 2]-Minibatch[  68-  68, 68.00%]: CE = 6.78262329 * 16; Err = 1.00000000 * 16; time = 0.1837s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  69-  69, 69.00%]: CE = 6.84356689 * 16; Err = 1.00000000 * 16; time = 0.1833s; samplesPerSecond = 87.3
 Epoch[ 2 of 2]-Minibatch[  70-  70, 70.00%]: CE = 6.81372070 * 16; Err = 1.00000000 * 16; time = 0.1831s; samplesPerSecond = 87.4
 Epoch[ 2 of 2]-Minibatch[  71-  71, 71.00%]: CE = 6.75006104 * 16; Err = 1.00000000 * 16; time = 0.1833s; samplesPerSecond = 87.3
 Epoch[ 2 of 2]-Minibatch[  72-  72, 72.00%]: CE = 6.69360352 * 16; Err = 1.00000000 * 16; time = 0.1836s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  73-  73, 73.00%]: CE = 6.82366943 * 16; Err = 1.00000000 * 16; time = 0.1838s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  74-  74, 74.00%]: CE = 6.81967163 * 16; Err = 1.00000000 * 16; time = 0.1835s; samplesPerSecond = 87.2
 Epoch[ 2 of 2]-Minibatch[  75-  75, 75.00%]: CE = 6.77716064 * 16; Err = 1.00000000 * 16; time = 0.1844s; samplesPerSecond = 86.8
 Epoch[ 2 of 2]-Minibatch[  76-  76, 76.00%]: CE = 6.83380127 * 16; Err = 1.00000000 * 16; time = 0.1842s; samplesPerSecond = 86.8
 Epoch[ 2 of 2]-Minibatch[  77-  77, 77.00%]: CE = 6.83837891 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  78-  78, 78.00%]: CE = 6.84930420 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  79-  79, 79.00%]: CE = 6.86541748 * 16; Err = 1.00000000 * 16; time = 0.1837s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  80-  80, 80.00%]: CE = 6.87738037 * 16; Err = 1.00000000 * 16; time = 0.1845s; samplesPerSecond = 86.7
 Epoch[ 2 of 2]-Minibatch[  81-  81, 81.00%]: CE = 6.84124756 * 16; Err = 1.00000000 * 16; time = 0.1846s; samplesPerSecond = 86.7
 Epoch[ 2 of 2]-Minibatch[  82-  82, 82.00%]: CE = 6.85876465 * 16; Err = 1.00000000 * 16; time = 0.1831s; samplesPerSecond = 87.4
 Epoch[ 2 of 2]-Minibatch[  83-  83, 83.00%]: CE = 6.88598633 * 16; Err = 1.00000000 * 16; time = 0.1832s; samplesPerSecond = 87.3
 Epoch[ 2 of 2]-Minibatch[  84-  84, 84.00%]: CE = 6.76910400 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  85-  85, 85.00%]: CE = 6.66162109 * 16; Err = 0.93750000 * 16; time = 0.1846s; samplesPerSecond = 86.7
 Epoch[ 2 of 2]-Minibatch[  86-  86, 86.00%]: CE = 6.80181885 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  87-  87, 87.00%]: CE = 6.86395264 * 16; Err = 1.00000000 * 16; time = 0.1840s; samplesPerSecond = 86.9
 Epoch[ 2 of 2]-Minibatch[  88-  88, 88.00%]: CE = 6.79516602 * 16; Err = 0.93750000 * 16; time = 0.1835s; samplesPerSecond = 87.2
 Epoch[ 2 of 2]-Minibatch[  89-  89, 89.00%]: CE = 6.83654785 * 16; Err = 1.00000000 * 16; time = 0.1839s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  90-  90, 90.00%]: CE = 6.70605469 * 16; Err = 1.00000000 * 16; time = 0.1836s; samplesPerSecond = 87.2
 Epoch[ 2 of 2]-Minibatch[  91-  91, 91.00%]: CE = 6.79632568 * 16; Err = 1.00000000 * 16; time = 0.1839s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  92-  92, 92.00%]: CE = 6.72705078 * 16; Err = 1.00000000 * 16; time = 0.1837s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[  93-  93, 93.00%]: CE = 6.81805420 * 16; Err = 1.00000000 * 16; time = 0.1845s; samplesPerSecond = 86.7
 Epoch[ 2 of 2]-Minibatch[  94-  94, 94.00%]: CE = 6.78851318 * 16; Err = 1.00000000 * 16; time = 0.1844s; samplesPerSecond = 86.8
 Epoch[ 2 of 2]-Minibatch[  95-  95, 95.00%]: CE = 6.87237549 * 16; Err = 1.00000000 * 16; time = 0.1839s; samplesPerSecond = 87.0
 Epoch[ 2 of 2]-Minibatch[  96-  96, 96.00%]: CE = 6.76708984 * 16; Err = 1.00000000 * 16; time = 0.1834s; samplesPerSecond = 87.2
 Epoch[ 2 of 2]-Minibatch[  97-  97, 97.00%]: CE = 6.84356689 * 16; Err = 1.00000000 * 16; time = 0.1843s; samplesPerSecond = 86.8
 Epoch[ 2 of 2]-Minibatch[  98-  98, 98.00%]: CE = 6.82098389 * 16; Err = 1.00000000 * 16; time = 0.1833s; samplesPerSecond = 87.3
 Epoch[ 2 of 2]-Minibatch[  99-  99, 99.00%]: CE = 6.83111572 * 16; Err = 1.00000000 * 16; time = 0.1838s; samplesPerSecond = 87.1
 Epoch[ 2 of 2]-Minibatch[ 100- 100, 100.00%]: CE = 6.82769775 * 16; Err = 1.00000000 * 16; time = 0.1862s; samplesPerSecond = 85.9
Finished Epoch[ 2 of 2]: [Training] CE = 6.85296204 * 1600; Err = 0.99687500 * 1600; totalSamplesSeen = 3200; learningRatePerSample = 0.0625; epochTime=18.3575s
SGD: Saving checkpoint model './Output/resnet/ResNet_50'

Action "train" complete.

COMPLETED.
