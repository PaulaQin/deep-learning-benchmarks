-------------------------------------------------------------------
Build info: 

		Built time: Sep 27 2016 14:05:01
		Last modified date: Tue Sep 27 07:19:56 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.1
		Build Branch: HEAD
		Build SHA1: 2e4a773398b5ee84e1695abe73eb831c3cca1e36
		Built by philly on 9ab719fcc26d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12205 MB
		Device[1]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[2]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
		Device[3]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
-------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: fcn8.cntk:command=Train
configparameters: fcn8.cntk:configName=fcn8_4gpu
configparameters: fcn8.cntk:DataDir=fcn
configparameters: fcn8.cntk:deviceId=Auto
configparameters: fcn8.cntk:epochSize=327680
configparameters: fcn8.cntk:featureDim=512
configparameters: fcn8.cntk:hiddenDim=2048
configparameters: fcn8.cntk:initOnCPUOnly=true
configparameters: fcn8.cntk:labelDim=1000
configparameters: fcn8.cntk:makeMode=false
configparameters: fcn8.cntk:maxEpochs=2
configparameters: fcn8.cntk:minibatchSize=8192
configparameters: fcn8.cntk:ModelDir=./Output/fcn8_4gpu
configparameters: fcn8.cntk:parallelTrain=true
configparameters: fcn8.cntk:precision=float
configparameters: fcn8.cntk:prefetch=true
configparameters: fcn8.cntk:reader=[
    readerType=UCIFastReader
    file=fcn/data26752.txt
    features=[
        dim=512
        start=1
    ]
    labels=[
        dim=1
        start=0
        labelDim=1000
        labelMappingFile=fcn/labelmap26752.txt
    ]
]

configparameters: fcn8.cntk:stderr=./output_fcn8_4gpu_Train.log
configparameters: fcn8.cntk:traceLevel=1
configparameters: fcn8.cntk:Train=[
    action=train
    modelPath=./Output/fcn8_4gpu/fc26752l6
    deviceId=Auto
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=512:2048:2048:2048:2048:2048:2048:1000
        initOnCPUOnly=true
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=false
        initValueScale=1.0
        uniformInit=true
        needPrior=false
    ]
    SGD=[
        epochSize=327680
        minibatchSize=8192
        maxEpochs=2
        learningRatesPerMB=0.01
        numMBsToShowResult=1
        momentumPerSample=0
        dropoutRate=0.0
        ParallelTrain=[
            parallelizationMethod=DataParallelSGD
            distributedMBReading=true
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=1
            ]
        ]
        gradUpdateType=None
        normWithAveMultiplier=true
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: fcn8.cntk:WorkDir=.
Commands: Train
precision = "float"

##############################################################################
#                                                                            #
# Train command (train action)                                               #
#                                                                            #
##############################################################################


Creating virgin network.
SimpleNetworkBuilder Using GPU 3
SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4
********** DEPRECATED **********
UCIFastReader is no longer actively maintained.
It is known to have defects, proceed with caution (better yet, switch to CNTKTextFormatReader)!
For more details please see https://github.com/Microsoft/CNTK/wiki 
Reading UCI file fcn/data26752.txt

Model has 39 nodes. Using GPU 3.

Training criterion:   CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
Evaluation criterion: EvalClassificationError = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 74 matrices, 50 are shared as 20, and 24 are not shared.

	{ H1 : [2048 x 1 x *]
	  W0*features : [2048 x *] (gradient) }
	{ W0*features+B0 : [2048 x 1 x *] (gradient)
	  W1*H1 : [2048 x 1 x *] }
	{ W0 : [2048 x 512] (gradient)
	  W0*features+B0 : [2048 x 1 x *] }
	{ W1 : [2048 x 2048] (gradient)
	  W1*H1+B1 : [2048 x 1 x *] }
	{ H2 : [2048 x 1 x *]
	  W1*H1 : [2048 x 1 x *] (gradient) }
	{ B0 : [2048 x 1] (gradient)
	  H1 : [2048 x 1 x *] (gradient)
	  W1*H1+B1 : [2048 x 1 x *] (gradient)
	  W2*H2 : [2048 x 1 x *] }
	{ W2 : [2048 x 2048] (gradient)
	  W2*H2+B2 : [2048 x 1 x *] }
	{ H3 : [2048 x 1 x *]
	  W2*H2 : [2048 x 1 x *] (gradient) }
	{ B1 : [2048 x 1] (gradient)
	  H2 : [2048 x 1 x *] (gradient)
	  W2*H2+B2 : [2048 x 1 x *] (gradient)
	  W3*H3 : [2048 x 1 x *] }
	{ W3 : [2048 x 2048] (gradient)
	  W3*H3+B3 : [2048 x 1 x *] }
	{ H4 : [2048 x 1 x *]
	  W3*H3 : [2048 x 1 x *] (gradient) }
	{ B2 : [2048 x 1] (gradient)
	  H3 : [2048 x 1 x *] (gradient)
	  W3*H3+B3 : [2048 x 1 x *] (gradient)
	  W4*H4 : [2048 x 1 x *] }
	{ W4 : [2048 x 2048] (gradient)
	  W4*H4+B4 : [2048 x 1 x *] }
	{ H5 : [2048 x 1 x *]
	  W4*H4 : [2048 x 1 x *] (gradient) }
	{ B3 : [2048 x 1] (gradient)
	  H4 : [2048 x 1 x *] (gradient)
	  W4*H4+B4 : [2048 x 1 x *] (gradient)
	  W5*H5 : [2048 x 1 x *] }
	{ W5 : [2048 x 2048] (gradient)
	  W5*H5+B5 : [2048 x 1 x *] }
	{ H6 : [2048 x 1 x *]
	  W5*H5 : [2048 x 1 x *] (gradient) }
	{ B4 : [2048 x 1] (gradient)
	  H5 : [2048 x 1 x *] (gradient)
	  W5*H5+B5 : [2048 x 1 x *] (gradient)
	  W6*H5 : [1000 x 1 x *] }
	{ HLast : [1000 x 1 x *] (gradient)
	  W6 : [1000 x 2048] (gradient) }
	{ B5 : [2048 x 1] (gradient)
	  H6 : [2048 x 1 x *] (gradient) }


Training 24081384 parameters in 14 out of 14 parameter tensors and 35 nodes with gradient:

	Node 'B0' (LearnableParameter operation) : [2048 x 1]
	Node 'B1' (LearnableParameter operation) : [2048 x 1]
	Node 'B2' (LearnableParameter operation) : [2048 x 1]
	Node 'B3' (LearnableParameter operation) : [2048 x 1]
	Node 'B4' (LearnableParameter operation) : [2048 x 1]
	Node 'B5' (LearnableParameter operation) : [2048 x 1]
	Node 'B6' (LearnableParameter operation) : [1000 x 1]
	Node 'W0' (LearnableParameter operation) : [2048 x 512]
	Node 'W1' (LearnableParameter operation) : [2048 x 2048]
	Node 'W2' (LearnableParameter operation) : [2048 x 2048]
	Node 'W3' (LearnableParameter operation) : [2048 x 2048]
	Node 'W4' (LearnableParameter operation) : [2048 x 2048]
	Node 'W5' (LearnableParameter operation) : [2048 x 2048]
	Node 'W6' (LearnableParameter operation) : [1000 x 2048]

Initializing dataParallelSGD for 1-bit quantization.
No PreCompute nodes found, or all already computed. Skipping pre-computation step.

Starting Epoch 1: learning rate per sample = 0.000001  effective momentum = 0.000000  momentum as time constant = 0.0 samples
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 327680 records found.
starting epoch 1 at record count 0, and file position 0
already there from last epoch

Starting minibatch loop, DataParallelSGD training (myRank = 0, numNodes = 4, numGradientBits = 1), distributed reading is ENABLED.
RandomOrdering: 64298 retries for 327680 elements (19.6%) to ensure window condition
RandomOrdering: recached sequence for seed 0: 155231, 44603, ...
 Epoch[ 1 of 2]-Minibatch[   1-   1, 2.50%]: CrossEntropyWithSoftmax = 7.13544822 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 10.1381s; samplesPerSecond = 808.0
 Epoch[ 1 of 2]-Minibatch[   2-   2, 5.00%]: CrossEntropyWithSoftmax = 7.13950109 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0834s; samplesPerSecond = 98238.4
 Epoch[ 1 of 2]-Minibatch[   3-   3, 7.50%]: CrossEntropyWithSoftmax = 7.15444517 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0773s; samplesPerSecond = 105947.9
 Epoch[ 1 of 2]-Minibatch[   4-   4, 10.00%]: CrossEntropyWithSoftmax = 7.13200665 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0771s; samplesPerSecond = 106189.6
 Epoch[ 1 of 2]-Minibatch[   5-   5, 12.50%]: CrossEntropyWithSoftmax = 7.12575328 * 8192; EvalClassificationError = 0.99829102 * 8192; time = 0.0749s; samplesPerSecond = 109423.6
 Epoch[ 1 of 2]-Minibatch[   6-   6, 15.00%]: CrossEntropyWithSoftmax = 7.12229729 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.0738s; samplesPerSecond = 111016.2
 Epoch[ 1 of 2]-Minibatch[   7-   7, 17.50%]: CrossEntropyWithSoftmax = 7.12424338 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.0738s; samplesPerSecond = 111025.3
 Epoch[ 1 of 2]-Minibatch[   8-   8, 20.00%]: CrossEntropyWithSoftmax = 7.12589753 * 8192; EvalClassificationError = 0.99865723 * 8192; time = 0.0747s; samplesPerSecond = 109677.1
 Epoch[ 1 of 2]-Minibatch[   9-   9, 22.50%]: CrossEntropyWithSoftmax = 7.11433995 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0734s; samplesPerSecond = 111593.9
 Epoch[ 1 of 2]-Minibatch[  10-  10, 25.00%]: CrossEntropyWithSoftmax = 7.10640883 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0748s; samplesPerSecond = 109509.9
 Epoch[ 1 of 2]-Minibatch[  11-  11, 27.50%]: CrossEntropyWithSoftmax = 7.10940671 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0744s; samplesPerSecond = 110082.4
 Epoch[ 1 of 2]-Minibatch[  12-  12, 30.00%]: CrossEntropyWithSoftmax = 7.11442435 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.0744s; samplesPerSecond = 110107.5
 Epoch[ 1 of 2]-Minibatch[  13-  13, 32.50%]: CrossEntropyWithSoftmax = 7.10588503 * 8192; EvalClassificationError = 0.99829102 * 8192; time = 0.0748s; samplesPerSecond = 109469.0
 Epoch[ 1 of 2]-Minibatch[  14-  14, 35.00%]: CrossEntropyWithSoftmax = 7.11893630 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.0735s; samplesPerSecond = 111425.5
 Epoch[ 1 of 2]-Minibatch[  15-  15, 37.50%]: CrossEntropyWithSoftmax = 7.11705458 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0734s; samplesPerSecond = 111590.9
 Epoch[ 1 of 2]-Minibatch[  16-  16, 40.00%]: CrossEntropyWithSoftmax = 7.10064971 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0746s; samplesPerSecond = 109858.0
 Epoch[ 1 of 2]-Minibatch[  17-  17, 42.50%]: CrossEntropyWithSoftmax = 7.10609710 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0732s; samplesPerSecond = 111943.2
 Epoch[ 1 of 2]-Minibatch[  18-  18, 45.00%]: CrossEntropyWithSoftmax = 7.09849823 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.0751s; samplesPerSecond = 109091.4
 Epoch[ 1 of 2]-Minibatch[  19-  19, 47.50%]: CrossEntropyWithSoftmax = 7.09248376 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0733s; samplesPerSecond = 111703.5
 Epoch[ 1 of 2]-Minibatch[  20-  20, 50.00%]: CrossEntropyWithSoftmax = 7.08620584 * 8192; EvalClassificationError = 0.99963379 * 8192; time = 0.0741s; samplesPerSecond = 110598.1
 Epoch[ 1 of 2]-Minibatch[  21-  21, 52.50%]: CrossEntropyWithSoftmax = 7.08725941 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.0745s; samplesPerSecond = 109931.7
 Epoch[ 1 of 2]-Minibatch[  22-  22, 55.00%]: CrossEntropyWithSoftmax = 7.08134830 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.0736s; samplesPerSecond = 111342.2
 Epoch[ 1 of 2]-Minibatch[  23-  23, 57.50%]: CrossEntropyWithSoftmax = 7.08742702 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.0742s; samplesPerSecond = 110359.7
 Epoch[ 1 of 2]-Minibatch[  24-  24, 60.00%]: CrossEntropyWithSoftmax = 7.08334565 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.0737s; samplesPerSecond = 111219.7
 Epoch[ 1 of 2]-Minibatch[  25-  25, 62.50%]: CrossEntropyWithSoftmax = 7.08157706 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0743s; samplesPerSecond = 110328.5
 Epoch[ 1 of 2]-Minibatch[  26-  26, 65.00%]: CrossEntropyWithSoftmax = 7.06499600 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0743s; samplesPerSecond = 110270.6
 Epoch[ 1 of 2]-Minibatch[  27-  27, 67.50%]: CrossEntropyWithSoftmax = 7.06504667 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0732s; samplesPerSecond = 111963.0
 Epoch[ 1 of 2]-Minibatch[  28-  28, 70.00%]: CrossEntropyWithSoftmax = 7.07021642 * 8192; EvalClassificationError = 0.99865723 * 8192; time = 0.0740s; samplesPerSecond = 110716.2
 Epoch[ 1 of 2]-Minibatch[  29-  29, 72.50%]: CrossEntropyWithSoftmax = 7.06244481 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0749s; samplesPerSecond = 109363.7
 Epoch[ 1 of 2]-Minibatch[  30-  30, 75.00%]: CrossEntropyWithSoftmax = 7.07445002 * 8192; EvalClassificationError = 0.99755859 * 8192; time = 0.0734s; samplesPerSecond = 111610.7
 Epoch[ 1 of 2]-Minibatch[  31-  31, 77.50%]: CrossEntropyWithSoftmax = 7.06468761 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.0746s; samplesPerSecond = 109749.1
 Epoch[ 1 of 2]-Minibatch[  32-  32, 80.00%]: CrossEntropyWithSoftmax = 7.06360304 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.0751s; samplesPerSecond = 109024.6
 Epoch[ 1 of 2]-Minibatch[  33-  33, 82.50%]: CrossEntropyWithSoftmax = 7.06513011 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0743s; samplesPerSecond = 110283.9
 Epoch[ 1 of 2]-Minibatch[  34-  34, 85.00%]: CrossEntropyWithSoftmax = 7.06166565 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0749s; samplesPerSecond = 109435.3
 Epoch[ 1 of 2]-Minibatch[  35-  35, 87.50%]: CrossEntropyWithSoftmax = 7.05826974 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0740s; samplesPerSecond = 110702.7
 Epoch[ 1 of 2]-Minibatch[  36-  36, 90.00%]: CrossEntropyWithSoftmax = 7.06127155 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.0739s; samplesPerSecond = 110809.0
 Epoch[ 1 of 2]-Minibatch[  37-  37, 92.50%]: CrossEntropyWithSoftmax = 7.05642581 * 8192; EvalClassificationError = 0.99951172 * 8192; time = 0.0749s; samplesPerSecond = 109341.8
 Epoch[ 1 of 2]-Minibatch[  38-  38, 95.00%]: CrossEntropyWithSoftmax = 7.05678296 * 8192; EvalClassificationError = 0.99853516 * 8192; time = 0.0745s; samplesPerSecond = 109978.9
 Epoch[ 1 of 2]-Minibatch[  39-  39, 97.50%]: CrossEntropyWithSoftmax = 7.06588137 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.0744s; samplesPerSecond = 110085.3
 Epoch[ 1 of 2]-Minibatch[  40-  40, 100.00%]: CrossEntropyWithSoftmax = 7.04877055 * 8192; EvalClassificationError = 0.99951172 * 8192; time = 0.0725s; samplesPerSecond = 112947.9
 Epoch[ 1 of 2]-Minibatch[  41-  41, 102.50%]: CrossEntropyWithSoftmax = 0.00000000 * 0; EvalClassificationError = 0.00000000 * 0; time = 0.0094s; samplesPerSecond = 0.0
Finished Epoch[ 1 of 2]: [Training] CrossEntropyWithSoftmax = 7.09226457 * 327680; EvalClassificationError = 0.99896240 * 327680; totalSamplesSeen = 327680; learningRatePerSample = 1.2207031e-06; epochTime=20.299s
SGD: Saving checkpoint model './Output/fcn8_4gpu/fc26752l6.1'

Starting Epoch 2: learning rate per sample = 0.000001  effective momentum = 0.000000  momentum as time constant = 0.0 samples
starting epoch 2 at record count 327680, and file position 0
already there from last epoch

Starting minibatch loop, DataParallelSGD training (myRank = 0, numNodes = 4, numGradientBits = 1), distributed reading is ENABLED.
RandomOrdering: 64298 retries for 327680 elements (19.6%) to ensure window condition
RandomOrdering: recached sequence for seed 1: 155231, 44603, ...
 Epoch[ 2 of 2]-Minibatch[   1-   1, 2.50%]: CrossEntropyWithSoftmax = 7.04591894 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.1004s; samplesPerSecond = 81616.4
 Epoch[ 2 of 2]-Minibatch[   2-   2, 5.00%]: CrossEntropyWithSoftmax = 7.04844964 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0755s; samplesPerSecond = 108463.1
 Epoch[ 2 of 2]-Minibatch[   3-   3, 7.50%]: CrossEntropyWithSoftmax = 7.06150997 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0742s; samplesPerSecond = 110331.5
 Epoch[ 2 of 2]-Minibatch[   4-   4, 10.00%]: CrossEntropyWithSoftmax = 7.04408002 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0746s; samplesPerSecond = 109806.4
 Epoch[ 2 of 2]-Minibatch[   5-   5, 12.50%]: CrossEntropyWithSoftmax = 7.03967631 * 8192; EvalClassificationError = 0.99829102 * 8192; time = 0.0747s; samplesPerSecond = 109734.4
 Epoch[ 2 of 2]-Minibatch[   6-   6, 15.00%]: CrossEntropyWithSoftmax = 7.03645277 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.0737s; samplesPerSecond = 111174.4
 Epoch[ 2 of 2]-Minibatch[   7-   7, 17.50%]: CrossEntropyWithSoftmax = 7.03899026 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.0744s; samplesPerSecond = 110085.3
 Epoch[ 2 of 2]-Minibatch[   8-   8, 20.00%]: CrossEntropyWithSoftmax = 7.04163551 * 8192; EvalClassificationError = 0.99865723 * 8192; time = 0.0736s; samplesPerSecond = 111339.1
 Epoch[ 2 of 2]-Minibatch[   9-   9, 22.50%]: CrossEntropyWithSoftmax = 7.03363955 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0750s; samplesPerSecond = 109292.2
 Epoch[ 2 of 2]-Minibatch[  10-  10, 25.00%]: CrossEntropyWithSoftmax = 7.02697647 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0730s; samplesPerSecond = 112220.7
 Epoch[ 2 of 2]-Minibatch[  11-  11, 27.50%]: CrossEntropyWithSoftmax = 7.02941251 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0747s; samplesPerSecond = 109700.6
 Epoch[ 2 of 2]-Minibatch[  12-  12, 30.00%]: CrossEntropyWithSoftmax = 7.03449738 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.0727s; samplesPerSecond = 112617.2
 Epoch[ 2 of 2]-Minibatch[  13-  13, 32.50%]: CrossEntropyWithSoftmax = 7.02892113 * 8192; EvalClassificationError = 0.99829102 * 8192; time = 0.0749s; samplesPerSecond = 109334.5
 Epoch[ 2 of 2]-Minibatch[  14-  14, 35.00%]: CrossEntropyWithSoftmax = 7.03999984 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.0726s; samplesPerSecond = 112781.5
 Epoch[ 2 of 2]-Minibatch[  15-  15, 37.50%]: CrossEntropyWithSoftmax = 7.03939092 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0739s; samplesPerSecond = 110882.5
 Epoch[ 2 of 2]-Minibatch[  16-  16, 40.00%]: CrossEntropyWithSoftmax = 7.02648449 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0748s; samplesPerSecond = 109464.6
 Epoch[ 2 of 2]-Minibatch[  17-  17, 42.50%]: CrossEntropyWithSoftmax = 7.03169858 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0734s; samplesPerSecond = 111665.4
 Epoch[ 2 of 2]-Minibatch[  18-  18, 45.00%]: CrossEntropyWithSoftmax = 7.02565634 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.0733s; samplesPerSecond = 111824.0
 Epoch[ 2 of 2]-Minibatch[  19-  19, 47.50%]: CrossEntropyWithSoftmax = 7.02169800 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0748s; samplesPerSecond = 109586.1
 Epoch[ 2 of 2]-Minibatch[  20-  20, 50.00%]: CrossEntropyWithSoftmax = 7.01783717 * 8192; EvalClassificationError = 0.99963379 * 8192; time = 0.0735s; samplesPerSecond = 111458.8
 Epoch[ 2 of 2]-Minibatch[  21-  21, 52.50%]: CrossEntropyWithSoftmax = 7.01880276 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.0737s; samplesPerSecond = 111166.9
 Epoch[ 2 of 2]-Minibatch[  22-  22, 55.00%]: CrossEntropyWithSoftmax = 7.01468372 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.0737s; samplesPerSecond = 111166.9
 Epoch[ 2 of 2]-Minibatch[  23-  23, 57.50%]: CrossEntropyWithSoftmax = 7.02045965 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.0751s; samplesPerSecond = 109085.6
 Epoch[ 2 of 2]-Minibatch[  24-  24, 60.00%]: CrossEntropyWithSoftmax = 7.01771915 * 8192; EvalClassificationError = 0.99841309 * 8192; time = 0.0750s; samplesPerSecond = 109219.4
 Epoch[ 2 of 2]-Minibatch[  25-  25, 62.50%]: CrossEntropyWithSoftmax = 7.01697612 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0736s; samplesPerSecond = 111321.0
 Epoch[ 2 of 2]-Minibatch[  26-  26, 65.00%]: CrossEntropyWithSoftmax = 7.00425422 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0749s; samplesPerSecond = 109363.7
 Epoch[ 2 of 2]-Minibatch[  27-  27, 67.50%]: CrossEntropyWithSoftmax = 7.00545204 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.0748s; samplesPerSecond = 109534.8
 Epoch[ 2 of 2]-Minibatch[  28-  28, 70.00%]: CrossEntropyWithSoftmax = 7.00930619 * 8192; EvalClassificationError = 0.99865723 * 8192; time = 0.0741s; samplesPerSecond = 110589.1
 Epoch[ 2 of 2]-Minibatch[  29-  29, 72.50%]: CrossEntropyWithSoftmax = 7.00376546 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0735s; samplesPerSecond = 111443.7
 Epoch[ 2 of 2]-Minibatch[  30-  30, 75.00%]: CrossEntropyWithSoftmax = 7.01328540 * 8192; EvalClassificationError = 0.99755859 * 8192; time = 0.0739s; samplesPerSecond = 110827.0
 Epoch[ 2 of 2]-Minibatch[  31-  31, 77.50%]: CrossEntropyWithSoftmax = 7.00647557 * 8192; EvalClassificationError = 0.99914551 * 8192; time = 0.0745s; samplesPerSecond = 109955.3
 Epoch[ 2 of 2]-Minibatch[  32-  32, 80.00%]: CrossEntropyWithSoftmax = 7.00639331 * 8192; EvalClassificationError = 0.99938965 * 8192; time = 0.0863s; samplesPerSecond = 94968.7
 Epoch[ 2 of 2]-Minibatch[  33-  33, 82.50%]: CrossEntropyWithSoftmax = 7.00797522 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0732s; samplesPerSecond = 111891.2
 Epoch[ 2 of 2]-Minibatch[  34-  34, 85.00%]: CrossEntropyWithSoftmax = 7.00562382 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0744s; samplesPerSecond = 110097.2
 Epoch[ 2 of 2]-Minibatch[  35-  35, 87.50%]: CrossEntropyWithSoftmax = 7.00380814 * 8192; EvalClassificationError = 0.99926758 * 8192; time = 0.0748s; samplesPerSecond = 109490.9
 Epoch[ 2 of 2]-Minibatch[  36-  36, 90.00%]: CrossEntropyWithSoftmax = 7.00596499 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.0752s; samplesPerSecond = 108955.0
 Epoch[ 2 of 2]-Minibatch[  37-  37, 92.50%]: CrossEntropyWithSoftmax = 7.00288677 * 8192; EvalClassificationError = 0.99951172 * 8192; time = 0.0737s; samplesPerSecond = 111212.2
 Epoch[ 2 of 2]-Minibatch[  38-  38, 95.00%]: CrossEntropyWithSoftmax = 7.00384688 * 8192; EvalClassificationError = 0.99890137 * 8192; time = 0.0749s; samplesPerSecond = 109442.6
 Epoch[ 2 of 2]-Minibatch[  39-  39, 97.50%]: CrossEntropyWithSoftmax = 7.01231778 * 8192; EvalClassificationError = 0.99877930 * 8192; time = 0.0742s; samplesPerSecond = 110446.0
 Epoch[ 2 of 2]-Minibatch[  40-  40, 100.00%]: CrossEntropyWithSoftmax = 6.99798858 * 8192; EvalClassificationError = 0.99902344 * 8192; time = 0.0736s; samplesPerSecond = 111283.2
 Epoch[ 2 of 2]-Minibatch[  41-  41, 102.50%]: CrossEntropyWithSoftmax = 0.00000000 * 0; EvalClassificationError = 0.00000000 * 0; time = 0.0094s; samplesPerSecond = 0.0
Finished Epoch[ 2 of 2]: [Training] CrossEntropyWithSoftmax = 7.02227279 * 327680; EvalClassificationError = 0.99895020 * 327680; totalSamplesSeen = 655360; learningRatePerSample = 1.2207031e-06; epochTime=3.01589s
SGD: Saving checkpoint model './Output/fcn8_4gpu/fc26752l6'

Action "train" complete.

COMPLETED.
~MPIWrapper
