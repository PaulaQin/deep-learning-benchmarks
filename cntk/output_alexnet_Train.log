-------------------------------------------------------------------
Build info: 

		Built time: Sep 13 2016 19:37:10
		Last modified date: Tue Sep 13 19:36:50 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local
		Build Branch: master
		Build SHA1: cac191c8c3c08e546c9af25236d368c0ed2812c2
		Built by guolin on MSRAML-GPU04
		Build Path: /home/guolin/deep-learning-benchmarks/cntk/cntk
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12204 MB
		Device[1]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
-------------------------------------------------------------------

Running on localhost at 2016/09/13 19:56:09
Command line: 
cntk/build/bin/cntk  configFile=cnn/alexnet/alexnet.cntk  configName=alexnet  deviceId=0  minibatchSize=16  epochSize=1600  DataDir=cnn  ConfigDir=cnn/alexnet


Configuration After Processing and Variable Resolution:

configparameters: alexnet.cntk:command=Train
configparameters: alexnet.cntk:ConfigDir=cnn/alexnet
configparameters: alexnet.cntk:configName=alexnet
configparameters: alexnet.cntk:DataDir=cnn
configparameters: alexnet.cntk:deviceId=0
configparameters: alexnet.cntk:epochSize=1600
configparameters: alexnet.cntk:imageLayout=cudnn
configparameters: alexnet.cntk:initOnCPUOnly=true
configparameters: alexnet.cntk:makeMode=false
configparameters: alexnet.cntk:maxEpochs=3
configparameters: alexnet.cntk:minibatchSize=16
configparameters: alexnet.cntk:ModelDir=./Output/alexnet
configparameters: alexnet.cntk:ndlMacros=cnn/alexnet/Macros.ndl
configparameters: alexnet.cntk:precision=float
configparameters: alexnet.cntk:stderr=./output_alexnet
configparameters: alexnet.cntk:traceLevel=1
configparameters: alexnet.cntk:Train=[
    action=train
    modelPath=./Output/alexnet/AlexNet
    NDLNetworkBuilder=[
        networkDescription=cnn/alexnet/AlexNet.ndl
    ]
    SGD=[
        epochSize=1600
        minibatchSize=16
        maxEpochs=3
        learningRatesPerMB=0.01
        momentumPerMB=0
        dropoutRate=0
	    numMBsToShowResult=1
    ]
    reader=[
        readerType=UCIFastReader
        file=cnn/imagenet_data.txt
        randomize=None
        features=[
            dim=150528
            start=1
        ]
        labels=[
            dim=1
            start=0
            labelDim=1000
            labelMappingFile=cnn/labelmap.1K.txt
        ]
    ]
]

configparameters: alexnet.cntk:WorkDir=.
Commands: Train
Precision = "float"
CNTKModelPath: ./Output/alexnet/AlexNet
CNTKCommandTrainInfo: Train : 3
CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

##############################################################################
#                                                                            #
# Action "train"                                                             #
#                                                                            #
##############################################################################

CNTKCommandTrainBegin: Train

Creating virgin network.
NDLBuilder Using GPU 0
Node 'conv1_act.convW' (LearnableParameter operation): Initializing Parameter[96 x 363] <- 0.000000.
Node 'conv1_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 96] <- 0.000000.
Node 'conv2_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 2400] <- 0.000000.
Node 'conv2_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 0.000000.
Node 'conv3_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 2304] <- 0.000000.
Node 'conv3_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv4_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 3456] <- 0.000000.
Node 'conv4_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv5_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 3456] <- 0.000000.
Node 'conv5_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 0.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[4096 x 9216] <- 0.000000.
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[4096] <- 0.000000.
Node 'h2.W' (LearnableParameter operation): Initializing Parameter[4096 x 4096] <- 0.000000.
Node 'h2.b' (LearnableParameter operation): Initializing Parameter[4096] <- 0.000000.
Node 'OutputNodes.W' (LearnableParameter operation): Initializing Parameter[1000 x 4096] <- 0.000000.
Node 'OutputNodes.b' (LearnableParameter operation): Initializing Parameter[1000] <- 0.000000.
Node 'conv1_act.convW' (LearnableParameter operation): Initializing Parameter[96 x 363] <- gaussian(seed=1, init dims=[96 x 363], range=0.010497*0.950000, onCPU=true).
Node 'conv1_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 96] <- 0.000000.
Node 'conv2_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 2400] <- gaussian(seed=2, init dims=[256 x 2400], range=0.004082*2.000000, onCPU=true).
Node 'conv2_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 1.000000.
Node 'conv3_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 2304] <- gaussian(seed=3, init dims=[384 x 2304], range=0.004167*2.070000, onCPU=true).
Node 'conv3_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv4_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 3456] <- gaussian(seed=4, init dims=[384 x 3456], range=0.003402*2.900000, onCPU=true).
Node 'conv4_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 1.000000.
Node 'conv5_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 3456] <- gaussian(seed=5, init dims=[256 x 3456], range=0.003402*2.400000, onCPU=true).
Node 'conv5_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 1.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[4096 x 9216] <- gaussian(seed=6, init dims=[4096 x 9216], range=0.002083*6.400000, onCPU=true).
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[4096] <- 1.000000.
Node 'h2.W' (LearnableParameter operation): Initializing Parameter[4096 x 4096] <- gaussian(seed=7, init dims=[4096 x 4096], range=0.003125*3.200000, onCPU=true).
Node 'h2.b' (LearnableParameter operation): Initializing Parameter[4096] <- 1.000000.
Node 'OutputNodes.W' (LearnableParameter operation): Initializing Parameter[1000 x 4096] <- gaussian(seed=8, init dims=[1000 x 4096], range=0.003125*3.200000, onCPU=true).
Node 'OutputNodes.b' (LearnableParameter operation): Initializing Parameter[1000] <- 1.000000.

Post-processing network...

3 roots:
	CE = CrossEntropyWithSoftmax()
	Err = ClassificationError()
	OutputNodes.z = Plus()

Validating network. 46 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [1000 x *]
Validating --> OutputNodes.W = LearnableParameter() :  -> [1000 x 4096]
Validating --> h2.W = LearnableParameter() :  -> [4096 x 4096]
Validating --> h1.W = LearnableParameter() :  -> [4096 x 9216]
Validating --> conv5_act.convW = LearnableParameter() :  -> [256 x 3456]
Validating --> conv4_act.convW = LearnableParameter() :  -> [384 x 3456]
Validating --> conv3_act.convW = LearnableParameter() :  -> [384 x 2304]
Validating --> conv2_act.convW = LearnableParameter() :  -> [256 x 2400]
Validating --> conv1_act.convW = LearnableParameter() :  -> [96 x 363]
Validating --> features = InputValue() :  -> [224 x 224 x 3 x *]
Validating --> conv1_act.conv = Convolution (conv1_act.convW, features) : [96 x 363], [224 x 224 x 3 x *] -> [56 x 56 x 96 x *]
Validating --> conv1_act.convB = LearnableParameter() :  -> [1 x 1 x 96]
Validating --> conv1_act.convPlusB = Plus (conv1_act.conv, conv1_act.convB) : [56 x 56 x 96 x *], [1 x 1 x 96] -> [56 x 56 x 96 x *]
Validating --> conv1_act.act = RectifiedLinear (conv1_act.convPlusB) : [56 x 56 x 96 x *] -> [56 x 56 x 96 x *]
Validating --> pool1 = MaxPooling (conv1_act.act) : [56 x 56 x 96 x *] -> [27 x 27 x 96 x *]
Validating --> conv2_act.conv = Convolution (conv2_act.convW, pool1) : [256 x 2400], [27 x 27 x 96 x *] -> [27 x 27 x 256 x *]
Validating --> conv2_act.convB = LearnableParameter() :  -> [1 x 1 x 256]
Validating --> conv2_act.convPlusB = Plus (conv2_act.conv, conv2_act.convB) : [27 x 27 x 256 x *], [1 x 1 x 256] -> [27 x 27 x 256 x *]
Validating --> conv2_act.act = RectifiedLinear (conv2_act.convPlusB) : [27 x 27 x 256 x *] -> [27 x 27 x 256 x *]
Validating --> pool2 = MaxPooling (conv2_act.act) : [27 x 27 x 256 x *] -> [13 x 13 x 256 x *]
Validating --> conv3_act.conv = Convolution (conv3_act.convW, pool2) : [384 x 2304], [13 x 13 x 256 x *] -> [13 x 13 x 384 x *]
Validating --> conv3_act.convB = LearnableParameter() :  -> [1 x 1 x 384]
Validating --> conv3_act.convPlusB = Plus (conv3_act.conv, conv3_act.convB) : [13 x 13 x 384 x *], [1 x 1 x 384] -> [13 x 13 x 384 x *]
Validating --> conv3_act.act = RectifiedLinear (conv3_act.convPlusB) : [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv4_act.conv = Convolution (conv4_act.convW, conv3_act.act) : [384 x 3456], [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv4_act.convB = LearnableParameter() :  -> [1 x 1 x 384]
Validating --> conv4_act.convPlusB = Plus (conv4_act.conv, conv4_act.convB) : [13 x 13 x 384 x *], [1 x 1 x 384] -> [13 x 13 x 384 x *]
Validating --> conv4_act.act = RectifiedLinear (conv4_act.convPlusB) : [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv5_act.conv = Convolution (conv5_act.convW, conv4_act.act) : [256 x 3456], [13 x 13 x 384 x *] -> [13 x 13 x 256 x *]
Validating --> conv5_act.convB = LearnableParameter() :  -> [1 x 1 x 256]
Validating --> conv5_act.convPlusB = Plus (conv5_act.conv, conv5_act.convB) : [13 x 13 x 256 x *], [1 x 1 x 256] -> [13 x 13 x 256 x *]
Validating --> conv5_act.act = RectifiedLinear (conv5_act.convPlusB) : [13 x 13 x 256 x *] -> [13 x 13 x 256 x *]
Validating --> pool3 = MaxPooling (conv5_act.act) : [13 x 13 x 256 x *] -> [6 x 6 x 256 x *]

h1.t Times operation: For legacy compatibility, the sample layout of left input (h1.W LearnableParameter operation) was patched to [4096 x 6 x 6 x 256] (from [4096 x 9216])
Validating --> h1.t = Times (h1.W, pool3) : [4096 x 6 x 6 x 256], [6 x 6 x 256 x *] -> [4096 x *]
Validating --> h1.b = LearnableParameter() :  -> [4096]
Validating --> h1.z = Plus (h1.t, h1.b) : [4096 x *], [4096] -> [4096 x *]
Validating --> h1.y = RectifiedLinear (h1.z) : [4096 x *] -> [4096 x *]
Validating --> h2.t = Times (h2.W, h1.y) : [4096 x 4096], [4096 x *] -> [4096 x *]
Validating --> h2.b = LearnableParameter() :  -> [4096]
Validating --> h2.z = Plus (h2.t, h2.b) : [4096 x *], [4096] -> [4096 x *]
Validating --> h2.y = RectifiedLinear (h2.z) : [4096 x *] -> [4096 x *]
Validating --> OutputNodes.t = Times (OutputNodes.W, h2.y) : [1000 x 4096], [4096 x *] -> [1000 x *]
Validating --> OutputNodes.b = LearnableParameter() :  -> [1000]
Validating --> OutputNodes.z = Plus (OutputNodes.t, OutputNodes.b) : [1000 x *], [1000] -> [1000 x *]
Validating --> CE = CrossEntropyWithSoftmax (labels, OutputNodes.z) : [1000 x *], [1000 x *] -> [1]
Validating --> Err = ClassificationError (labels, OutputNodes.z) : [1000 x *], [1000 x *] -> [1]

Validating network. 28 nodes to process in pass 2.


Validating network, final pass.

conv1_act.conv: using cuDNN convolution engine for geometry: Input: 224 x 224 x 3, Output: 56 x 56 x 96, Kernel: 11 x 11 x 3, Map: 1 x 1 x 96, Stride: 4 x 4 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool1: using cuDNN convolution engine for geometry: Input: 56 x 56 x 96, Output: 27 x 27 x 96, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv2_act.conv: using cuDNN convolution engine for geometry: Input: 27 x 27 x 96, Output: 27 x 27 x 256, Kernel: 5 x 5 x 96, Map: 1 x 1 x 256, Stride: 1 x 1 x 96, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool2: using cuDNN convolution engine for geometry: Input: 27 x 27 x 256, Output: 13 x 13 x 256, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv3_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 256, Output: 13 x 13 x 384, Kernel: 3 x 3 x 256, Map: 1 x 1 x 384, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
conv4_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 384, Output: 13 x 13 x 384, Kernel: 3 x 3 x 384, Map: 1 x 1 x 384, Stride: 1 x 1 x 384, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
conv5_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 384, Output: 13 x 13 x 256, Kernel: 3 x 3 x 384, Map: 1 x 1 x 256, Stride: 1 x 1 x 384, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool3: using cuDNN convolution engine for geometry: Input: 13 x 13 x 256, Output: 6 x 6 x 256, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.


18 out of 46 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

********** DEPRECATED **********
UCIFastReader is no longer actively maintained.
It is known to have defects, proceed with caution (better yet, switch to CNTKTextFormatReader)!
For more details please see https://github.com/Microsoft/CNTK/wiki 
Reading UCI file cnn/imagenet_data.txt
Created model with 46 nodes on GPU 0.

Training criterion node(s):
	CE = CrossEntropyWithSoftmax

Evaluation criterion node(s):
	Err = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 89 matrices, 60 are shared as 26, and 29 are not shared.

	{ conv1_act.act : [56 x 56 x 96 x *]
	  conv1_act.conv : [56 x 56 x 96 x *] (gradient) }
	{ conv1_act.convPlusB : [56 x 56 x 96 x *]
	  conv1_act.convW : [96 x 363] (gradient) }
	{ conv1_act.convPlusB : [56 x 56 x 96 x *] (gradient)
	  pool1 : [27 x 27 x 96 x *] }
	{ conv1_act.act : [56 x 56 x 96 x *] (gradient)
	  conv1_act.convB : [1 x 1 x 96] (gradient) }
	{ conv2_act.convPlusB : [27 x 27 x 256 x *]
	  conv2_act.convW : [256 x 2400] (gradient) }
	{ conv2_act.act : [27 x 27 x 256 x *]
	  conv2_act.conv : [27 x 27 x 256 x *] (gradient) }
	{ conv2_act.convPlusB : [27 x 27 x 256 x *] (gradient)
	  pool1 : [27 x 27 x 96 x *] (gradient)
	  pool2 : [13 x 13 x 256 x *] }
	{ conv2_act.act : [27 x 27 x 256 x *] (gradient)
	  conv2_act.convB : [1 x 1 x 256] (gradient) }
	{ conv3_act.convPlusB : [13 x 13 x 384 x *]
	  conv3_act.convW : [384 x 2304] (gradient) }
	{ conv3_act.act : [13 x 13 x 384 x *]
	  conv3_act.conv : [13 x 13 x 384 x *] (gradient) }
	{ conv3_act.convPlusB : [13 x 13 x 384 x *] (gradient)
	  pool2 : [13 x 13 x 256 x *] (gradient) }
	{ conv4_act.convPlusB : [13 x 13 x 384 x *]
	  conv4_act.convW : [384 x 3456] (gradient) }
	{ conv4_act.act : [13 x 13 x 384 x *]
	  conv4_act.conv : [13 x 13 x 384 x *] (gradient) }
	{ conv3_act.act : [13 x 13 x 384 x *] (gradient)
	  conv3_act.convB : [1 x 1 x 384] (gradient)
	  conv4_act.convPlusB : [13 x 13 x 384 x *] (gradient) }
	{ conv5_act.convPlusB : [13 x 13 x 256 x *]
	  conv5_act.convW : [256 x 3456] (gradient) }
	{ conv5_act.act : [13 x 13 x 256 x *]
	  conv5_act.conv : [13 x 13 x 256 x *] (gradient) }
	{ conv4_act.act : [13 x 13 x 384 x *] (gradient)
	  conv4_act.convB : [1 x 1 x 384] (gradient)
	  conv5_act.convPlusB : [13 x 13 x 256 x *] (gradient)
	  pool3 : [6 x 6 x 256 x *] }
	{ conv5_act.act : [13 x 13 x 256 x *] (gradient)
	  conv5_act.convB : [1 x 1 x 256] (gradient)
	  h1.t : [4096 x *] }
	{ h1.W : [4096 x 6 x 6 x 256] (gradient)
	  h1.z : [4096 x *] }
	{ h1.t : [4096 x *] (gradient)
	  h1.y : [4096 x *] }
	{ h1.z : [4096 x *] (gradient)
	  h2.t : [4096 x *]
	  pool3 : [6 x 6 x 256 x *] (gradient) }
	{ h2.W : [4096 x 4096] (gradient)
	  h2.z : [4096 x *] }
	{ h2.t : [4096 x *] (gradient)
	  h2.y : [4096 x *] }
	{ OutputNodes.t : [1000 x *]
	  h1.b : [4096] (gradient)
	  h1.y : [4096 x *] (gradient)
	  h2.z : [4096 x *] (gradient) }
	{ OutputNodes.W : [1000 x 4096] (gradient)
	  OutputNodes.z : [1000 x *] (gradient) }
	{ h2.b : [4096] (gradient)
	  h2.y : [4096 x *] (gradient) }


Training 62378344 parameters in 16 out of 16 parameter tensors and 43 nodes with gradient:

	Node 'OutputNodes.W' (LearnableParameter operation) : [1000 x 4096]
	Node 'OutputNodes.b' (LearnableParameter operation) : [1000]
	Node 'conv1_act.convB' (LearnableParameter operation) : [1 x 1 x 96]
	Node 'conv1_act.convW' (LearnableParameter operation) : [96 x 363]
	Node 'conv2_act.convB' (LearnableParameter operation) : [1 x 1 x 256]
	Node 'conv2_act.convW' (LearnableParameter operation) : [256 x 2400]
	Node 'conv3_act.convB' (LearnableParameter operation) : [1 x 1 x 384]
	Node 'conv3_act.convW' (LearnableParameter operation) : [384 x 2304]
	Node 'conv4_act.convB' (LearnableParameter operation) : [1 x 1 x 384]
	Node 'conv4_act.convW' (LearnableParameter operation) : [384 x 3456]
	Node 'conv5_act.convB' (LearnableParameter operation) : [1 x 1 x 256]
	Node 'conv5_act.convW' (LearnableParameter operation) : [256 x 3456]
	Node 'h1.W' (LearnableParameter operation) : [4096 x 6 x 6 x 256]
	Node 'h1.b' (LearnableParameter operation) : [4096]
	Node 'h2.W' (LearnableParameter operation) : [4096 x 4096]
	Node 'h2.b' (LearnableParameter operation) : [4096]

No PreCompute nodes found, or all already computed. Skipping pre-computation step.

Starting Epoch 1: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 1600 records found.
starting epoch 1 at record count 0, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 1 of 3]-Minibatch[   1-   1, 1.00%]: CE = 7.14001274 * 16; Err = 1.00000000 * 16; time = 1.1531s; samplesPerSecond = 13.9
 Epoch[ 1 of 3]-Minibatch[   2-   2, 2.00%]: CE = 17.15901375 * 16; Err = 1.00000000 * 16; time = 0.2607s; samplesPerSecond = 61.4
 Epoch[ 1 of 3]-Minibatch[   3-   3, 3.00%]: CE = 10.77585220 * 16; Err = 1.00000000 * 16; time = 0.2008s; samplesPerSecond = 79.7
 Epoch[ 1 of 3]-Minibatch[   4-   4, 4.00%]: CE = 9.45766449 * 16; Err = 1.00000000 * 16; time = 0.2008s; samplesPerSecond = 79.7
 Epoch[ 1 of 3]-Minibatch[   5-   5, 5.00%]: CE = 10.10039139 * 16; Err = 1.00000000 * 16; time = 0.2007s; samplesPerSecond = 79.7
 Epoch[ 1 of 3]-Minibatch[   6-   6, 6.00%]: CE = 8.38079453 * 16; Err = 1.00000000 * 16; time = 0.1933s; samplesPerSecond = 82.8
 Epoch[ 1 of 3]-Minibatch[   7-   7, 7.00%]: CE = 7.49667740 * 16; Err = 1.00000000 * 16; time = 0.1790s; samplesPerSecond = 89.4
 Epoch[ 1 of 3]-Minibatch[   8-   8, 8.00%]: CE = 8.12047577 * 16; Err = 1.00000000 * 16; time = 0.1783s; samplesPerSecond = 89.7
 Epoch[ 1 of 3]-Minibatch[   9-   9, 9.00%]: CE = 7.40810394 * 16; Err = 1.00000000 * 16; time = 0.1780s; samplesPerSecond = 89.9
 Epoch[ 1 of 3]-Minibatch[  10-  10, 10.00%]: CE = 7.53487396 * 16; Err = 1.00000000 * 16; time = 0.1814s; samplesPerSecond = 88.2
 Epoch[ 1 of 3]-Minibatch[  11-  11, 11.00%]: CE = 8.73081970 * 16; Err = 1.00000000 * 16; time = 0.1811s; samplesPerSecond = 88.3
 Epoch[ 1 of 3]-Minibatch[  12-  12, 12.00%]: CE = 9.17749786 * 16; Err = 1.00000000 * 16; time = 0.1811s; samplesPerSecond = 88.4
 Epoch[ 1 of 3]-Minibatch[  13-  13, 13.00%]: CE = 9.17005920 * 16; Err = 1.00000000 * 16; time = 0.1797s; samplesPerSecond = 89.1
 Epoch[ 1 of 3]-Minibatch[  14-  14, 14.00%]: CE = 7.41567993 * 16; Err = 1.00000000 * 16; time = 0.1785s; samplesPerSecond = 89.6
 Epoch[ 1 of 3]-Minibatch[  15-  15, 15.00%]: CE = 7.26428223 * 16; Err = 1.00000000 * 16; time = 0.1793s; samplesPerSecond = 89.2
 Epoch[ 1 of 3]-Minibatch[  16-  16, 16.00%]: CE = 7.55783081 * 16; Err = 1.00000000 * 16; time = 0.1851s; samplesPerSecond = 86.4
 Epoch[ 1 of 3]-Minibatch[  17-  17, 17.00%]: CE = 7.77537537 * 16; Err = 1.00000000 * 16; time = 0.1845s; samplesPerSecond = 86.7
 Epoch[ 1 of 3]-Minibatch[  18-  18, 18.00%]: CE = 7.56231689 * 16; Err = 1.00000000 * 16; time = 0.1851s; samplesPerSecond = 86.4
 Epoch[ 1 of 3]-Minibatch[  19-  19, 19.00%]: CE = 7.51147461 * 16; Err = 1.00000000 * 16; time = 0.1817s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  20-  20, 20.00%]: CE = 7.37782288 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  21-  21, 21.00%]: CE = 7.42662048 * 16; Err = 1.00000000 * 16; time = 0.1846s; samplesPerSecond = 86.7
 Epoch[ 1 of 3]-Minibatch[  22-  22, 22.00%]: CE = 8.19718933 * 16; Err = 1.00000000 * 16; time = 0.1843s; samplesPerSecond = 86.8
 Epoch[ 1 of 3]-Minibatch[  23-  23, 23.00%]: CE = 7.70152283 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  24-  24, 24.00%]: CE = 6.79965210 * 16; Err = 1.00000000 * 16; time = 0.1823s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  25-  25, 25.00%]: CE = 7.06622314 * 16; Err = 1.00000000 * 16; time = 0.1818s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  26-  26, 26.00%]: CE = 7.53016663 * 16; Err = 1.00000000 * 16; time = 0.1823s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  27-  27, 27.00%]: CE = 7.50770569 * 16; Err = 1.00000000 * 16; time = 0.1816s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  28-  28, 28.00%]: CE = 7.28279114 * 16; Err = 1.00000000 * 16; time = 0.1821s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  29-  29, 29.00%]: CE = 7.61163330 * 16; Err = 1.00000000 * 16; time = 0.1818s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  30-  30, 30.00%]: CE = 7.44561768 * 16; Err = 1.00000000 * 16; time = 0.1822s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  31-  31, 31.00%]: CE = 7.16970825 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  32-  32, 32.00%]: CE = 7.88465881 * 16; Err = 1.00000000 * 16; time = 0.1821s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  33-  33, 33.00%]: CE = 7.38912964 * 16; Err = 1.00000000 * 16; time = 0.1821s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  34-  34, 34.00%]: CE = 7.12982178 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  35-  35, 35.00%]: CE = 7.20629883 * 16; Err = 1.00000000 * 16; time = 0.1819s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  36-  36, 36.00%]: CE = 6.85620117 * 16; Err = 0.93750000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  37-  37, 37.00%]: CE = 7.28436279 * 16; Err = 1.00000000 * 16; time = 0.1818s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  38-  38, 38.00%]: CE = 7.21896362 * 16; Err = 1.00000000 * 16; time = 0.1822s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  39-  39, 39.00%]: CE = 6.85034180 * 16; Err = 1.00000000 * 16; time = 0.1816s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  40-  40, 40.00%]: CE = 7.62844849 * 16; Err = 1.00000000 * 16; time = 0.1827s; samplesPerSecond = 87.6
 Epoch[ 1 of 3]-Minibatch[  41-  41, 41.00%]: CE = 7.16921997 * 16; Err = 1.00000000 * 16; time = 0.1817s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  42-  42, 42.00%]: CE = 7.37112427 * 16; Err = 1.00000000 * 16; time = 0.1823s; samplesPerSecond = 87.7
 Epoch[ 1 of 3]-Minibatch[  43-  43, 43.00%]: CE = 7.33383179 * 16; Err = 1.00000000 * 16; time = 0.1874s; samplesPerSecond = 85.4
 Epoch[ 1 of 3]-Minibatch[  44-  44, 44.00%]: CE = 7.15295410 * 16; Err = 1.00000000 * 16; time = 0.1867s; samplesPerSecond = 85.7
 Epoch[ 1 of 3]-Minibatch[  45-  45, 45.00%]: CE = 7.09222412 * 16; Err = 1.00000000 * 16; time = 0.1860s; samplesPerSecond = 86.0
 Epoch[ 1 of 3]-Minibatch[  46-  46, 46.00%]: CE = 7.22366333 * 16; Err = 1.00000000 * 16; time = 0.1866s; samplesPerSecond = 85.7
 Epoch[ 1 of 3]-Minibatch[  47-  47, 47.00%]: CE = 7.21408081 * 16; Err = 1.00000000 * 16; time = 0.1824s; samplesPerSecond = 87.7
 Epoch[ 1 of 3]-Minibatch[  48-  48, 48.00%]: CE = 7.38470459 * 16; Err = 1.00000000 * 16; time = 0.1833s; samplesPerSecond = 87.3
 Epoch[ 1 of 3]-Minibatch[  49-  49, 49.00%]: CE = 7.19201660 * 16; Err = 1.00000000 * 16; time = 0.1826s; samplesPerSecond = 87.6
 Epoch[ 1 of 3]-Minibatch[  50-  50, 50.00%]: CE = 7.31256104 * 16; Err = 1.00000000 * 16; time = 0.1827s; samplesPerSecond = 87.6
 Epoch[ 1 of 3]-Minibatch[  51-  51, 51.00%]: CE = 6.93862915 * 16; Err = 1.00000000 * 16; time = 0.1822s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  52-  52, 52.00%]: CE = 7.33563232 * 16; Err = 1.00000000 * 16; time = 0.1825s; samplesPerSecond = 87.7
 Epoch[ 1 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.92004395 * 16; Err = 1.00000000 * 16; time = 0.1824s; samplesPerSecond = 87.7
 Epoch[ 1 of 3]-Minibatch[  54-  54, 54.00%]: CE = 7.14999390 * 16; Err = 1.00000000 * 16; time = 0.1822s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  55-  55, 55.00%]: CE = 7.25518799 * 16; Err = 1.00000000 * 16; time = 0.1821s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  56-  56, 56.00%]: CE = 7.30743408 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  57-  57, 57.00%]: CE = 7.31854248 * 16; Err = 1.00000000 * 16; time = 0.1819s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  58-  58, 58.00%]: CE = 7.35003662 * 16; Err = 1.00000000 * 16; time = 0.1822s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  59-  59, 59.00%]: CE = 6.92596436 * 16; Err = 1.00000000 * 16; time = 0.1838s; samplesPerSecond = 87.1
 Epoch[ 1 of 3]-Minibatch[  60-  60, 60.00%]: CE = 7.26989746 * 16; Err = 1.00000000 * 16; time = 0.1848s; samplesPerSecond = 86.6
 Epoch[ 1 of 3]-Minibatch[  61-  61, 61.00%]: CE = 7.39523315 * 16; Err = 1.00000000 * 16; time = 0.1842s; samplesPerSecond = 86.9
 Epoch[ 1 of 3]-Minibatch[  62-  62, 62.00%]: CE = 7.25677490 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 1 of 3]-Minibatch[  63-  63, 63.00%]: CE = 7.15695190 * 16; Err = 1.00000000 * 16; time = 0.1815s; samplesPerSecond = 88.2
 Epoch[ 1 of 3]-Minibatch[  64-  64, 64.00%]: CE = 6.99548340 * 16; Err = 1.00000000 * 16; time = 0.1824s; samplesPerSecond = 87.7
 Epoch[ 1 of 3]-Minibatch[  65-  65, 65.00%]: CE = 7.69918823 * 16; Err = 1.00000000 * 16; time = 0.1842s; samplesPerSecond = 86.9
 Epoch[ 1 of 3]-Minibatch[  66-  66, 66.00%]: CE = 7.05905151 * 16; Err = 1.00000000 * 16; time = 0.1846s; samplesPerSecond = 86.7
 Epoch[ 1 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.88565063 * 16; Err = 1.00000000 * 16; time = 0.1843s; samplesPerSecond = 86.8
 Epoch[ 1 of 3]-Minibatch[  68-  68, 68.00%]: CE = 7.76629639 * 16; Err = 1.00000000 * 16; time = 0.1824s; samplesPerSecond = 87.7
 Epoch[ 1 of 3]-Minibatch[  69-  69, 69.00%]: CE = 7.40405273 * 16; Err = 1.00000000 * 16; time = 0.1816s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  70-  70, 70.00%]: CE = 7.06915283 * 16; Err = 1.00000000 * 16; time = 0.1822s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  71-  71, 71.00%]: CE = 7.20294189 * 16; Err = 1.00000000 * 16; time = 0.1814s; samplesPerSecond = 88.2
 Epoch[ 1 of 3]-Minibatch[  72-  72, 72.00%]: CE = 6.80841064 * 16; Err = 1.00000000 * 16; time = 0.1819s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  73-  73, 73.00%]: CE = 7.21026611 * 16; Err = 1.00000000 * 16; time = 0.1817s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  74-  74, 74.00%]: CE = 7.30383301 * 16; Err = 1.00000000 * 16; time = 0.1818s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  75-  75, 75.00%]: CE = 7.20074463 * 16; Err = 1.00000000 * 16; time = 0.1822s; samplesPerSecond = 87.8
 Epoch[ 1 of 3]-Minibatch[  76-  76, 76.00%]: CE = 6.81793213 * 16; Err = 1.00000000 * 16; time = 0.1843s; samplesPerSecond = 86.8
 Epoch[ 1 of 3]-Minibatch[  77-  77, 77.00%]: CE = 7.22924805 * 16; Err = 1.00000000 * 16; time = 0.1865s; samplesPerSecond = 85.8
 Epoch[ 1 of 3]-Minibatch[  78-  78, 78.00%]: CE = 7.04876709 * 16; Err = 1.00000000 * 16; time = 0.1866s; samplesPerSecond = 85.7
 Epoch[ 1 of 3]-Minibatch[  79-  79, 79.00%]: CE = 6.99591064 * 16; Err = 1.00000000 * 16; time = 0.1858s; samplesPerSecond = 86.1
 Epoch[ 1 of 3]-Minibatch[  80-  80, 80.00%]: CE = 7.10083008 * 16; Err = 1.00000000 * 16; time = 0.1833s; samplesPerSecond = 87.3
 Epoch[ 1 of 3]-Minibatch[  81-  81, 81.00%]: CE = 6.73187256 * 16; Err = 0.93750000 * 16; time = 0.1844s; samplesPerSecond = 86.8
 Epoch[ 1 of 3]-Minibatch[  82-  82, 82.00%]: CE = 6.91931152 * 16; Err = 1.00000000 * 16; time = 0.1849s; samplesPerSecond = 86.5
 Epoch[ 1 of 3]-Minibatch[  83-  83, 83.00%]: CE = 7.47698975 * 16; Err = 1.00000000 * 16; time = 0.1841s; samplesPerSecond = 86.9
 Epoch[ 1 of 3]-Minibatch[  84-  84, 84.00%]: CE = 7.07897949 * 16; Err = 1.00000000 * 16; time = 0.1825s; samplesPerSecond = 87.7
 Epoch[ 1 of 3]-Minibatch[  85-  85, 85.00%]: CE = 7.06481934 * 16; Err = 1.00000000 * 16; time = 0.1817s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  86-  86, 86.00%]: CE = 7.18121338 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  87-  87, 87.00%]: CE = 7.08544922 * 16; Err = 1.00000000 * 16; time = 0.1818s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  88-  88, 88.00%]: CE = 7.01647949 * 16; Err = 1.00000000 * 16; time = 0.1819s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  89-  89, 89.00%]: CE = 7.13873291 * 16; Err = 1.00000000 * 16; time = 0.1816s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  90-  90, 90.00%]: CE = 7.05432129 * 16; Err = 1.00000000 * 16; time = 0.1821s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  91-  91, 91.00%]: CE = 6.85577393 * 16; Err = 1.00000000 * 16; time = 0.1812s; samplesPerSecond = 88.3
 Epoch[ 1 of 3]-Minibatch[  92-  92, 92.00%]: CE = 7.08544922 * 16; Err = 1.00000000 * 16; time = 0.1818s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  93-  93, 93.00%]: CE = 6.88397217 * 16; Err = 1.00000000 * 16; time = 0.1816s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.93176270 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  95-  95, 95.00%]: CE = 7.16638184 * 16; Err = 1.00000000 * 16; time = 0.1820s; samplesPerSecond = 87.9
 Epoch[ 1 of 3]-Minibatch[  96-  96, 96.00%]: CE = 7.41174316 * 16; Err = 1.00000000 * 16; time = 0.1817s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  97-  97, 97.00%]: CE = 7.08154297 * 16; Err = 1.00000000 * 16; time = 0.1816s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[  98-  98, 98.00%]: CE = 6.97546387 * 16; Err = 1.00000000 * 16; time = 0.1819s; samplesPerSecond = 88.0
 Epoch[ 1 of 3]-Minibatch[  99-  99, 99.00%]: CE = 7.17712402 * 16; Err = 1.00000000 * 16; time = 0.1817s; samplesPerSecond = 88.1
 Epoch[ 1 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 7.18420410 * 16; Err = 1.00000000 * 16; time = 0.1814s; samplesPerSecond = 88.2
Finished Epoch[ 1 of 3]: [Training] CE = 7.49630127 * 1600; Err = 0.99875000 * 1600; totalSamplesSeen = 1600; learningRatePerSample = 0.00062499999; epochTime=29.4259s
SGD: Saving checkpoint model './Output/alexnet/AlexNet.1'

Starting Epoch 2: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
starting epoch 2 at record count 1600, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 2 of 3]-Minibatch[   1-   1, 1.00%]: CE = 7.62313652 * 16; Err = 1.00000000 * 16; time = 0.0399s; samplesPerSecond = 401.2
 Epoch[ 2 of 3]-Minibatch[   2-   2, 2.00%]: CE = 7.48582077 * 16; Err = 1.00000000 * 16; time = 0.0399s; samplesPerSecond = 400.7
 Epoch[ 2 of 3]-Minibatch[   3-   3, 3.00%]: CE = 7.11200714 * 16; Err = 1.00000000 * 16; time = 0.0383s; samplesPerSecond = 417.3
 Epoch[ 2 of 3]-Minibatch[   4-   4, 4.00%]: CE = 6.96664238 * 16; Err = 1.00000000 * 16; time = 0.0373s; samplesPerSecond = 429.1
 Epoch[ 2 of 3]-Minibatch[   5-   5, 5.00%]: CE = 6.94480515 * 16; Err = 1.00000000 * 16; time = 0.0374s; samplesPerSecond = 428.3
 Epoch[ 2 of 3]-Minibatch[   6-   6, 6.00%]: CE = 6.89710617 * 16; Err = 1.00000000 * 16; time = 0.0373s; samplesPerSecond = 428.7
 Epoch[ 2 of 3]-Minibatch[   7-   7, 7.00%]: CE = 6.92857361 * 16; Err = 1.00000000 * 16; time = 0.0374s; samplesPerSecond = 427.8
 Epoch[ 2 of 3]-Minibatch[   8-   8, 8.00%]: CE = 6.90334320 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.8
 Epoch[ 2 of 3]-Minibatch[   9-   9, 9.00%]: CE = 6.88527298 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  10-  10, 10.00%]: CE = 7.04341507 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.9
 Epoch[ 2 of 3]-Minibatch[  11-  11, 11.00%]: CE = 6.94728851 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 2 of 3]-Minibatch[  12-  12, 12.00%]: CE = 6.91360474 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.0
 Epoch[ 2 of 3]-Minibatch[  13-  13, 13.00%]: CE = 6.90435791 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.7
 Epoch[ 2 of 3]-Minibatch[  14-  14, 14.00%]: CE = 6.95212555 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.2
 Epoch[ 2 of 3]-Minibatch[  15-  15, 15.00%]: CE = 6.81980133 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 2 of 3]-Minibatch[  16-  16, 16.00%]: CE = 6.93812561 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.1
 Epoch[ 2 of 3]-Minibatch[  17-  17, 17.00%]: CE = 7.02590942 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.1
 Epoch[ 2 of 3]-Minibatch[  18-  18, 18.00%]: CE = 6.91635132 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.0
 Epoch[ 2 of 3]-Minibatch[  19-  19, 19.00%]: CE = 6.80395508 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  20-  20, 20.00%]: CE = 6.88249207 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.6
 Epoch[ 2 of 3]-Minibatch[  21-  21, 21.00%]: CE = 7.01785278 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.1
 Epoch[ 2 of 3]-Minibatch[  22-  22, 22.00%]: CE = 6.84832764 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.1
 Epoch[ 2 of 3]-Minibatch[  23-  23, 23.00%]: CE = 6.96908569 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.3
 Epoch[ 2 of 3]-Minibatch[  24-  24, 24.00%]: CE = 6.83328247 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.1
 Epoch[ 2 of 3]-Minibatch[  25-  25, 25.00%]: CE = 6.78781128 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.7
 Epoch[ 2 of 3]-Minibatch[  26-  26, 26.00%]: CE = 6.98315430 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 2 of 3]-Minibatch[  27-  27, 27.00%]: CE = 6.85055542 * 16; Err = 1.00000000 * 16; time = 0.0360s; samplesPerSecond = 444.0
 Epoch[ 2 of 3]-Minibatch[  28-  28, 28.00%]: CE = 6.89682007 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.0
 Epoch[ 2 of 3]-Minibatch[  29-  29, 29.00%]: CE = 7.05471802 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 2 of 3]-Minibatch[  30-  30, 30.00%]: CE = 6.86389160 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  31-  31, 31.00%]: CE = 6.81408691 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.1
 Epoch[ 2 of 3]-Minibatch[  32-  32, 32.00%]: CE = 6.97166443 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.1
 Epoch[ 2 of 3]-Minibatch[  33-  33, 33.00%]: CE = 6.92964172 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 2 of 3]-Minibatch[  34-  34, 34.00%]: CE = 6.95835876 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 2 of 3]-Minibatch[  35-  35, 35.00%]: CE = 6.78468323 * 16; Err = 0.93750000 * 16; time = 0.0364s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  36-  36, 36.00%]: CE = 6.68548584 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  37-  37, 37.00%]: CE = 6.81472778 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  38-  38, 38.00%]: CE = 6.92871094 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.9
 Epoch[ 2 of 3]-Minibatch[  39-  39, 39.00%]: CE = 6.65057373 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.1
 Epoch[ 2 of 3]-Minibatch[  40-  40, 40.00%]: CE = 6.82495117 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 2 of 3]-Minibatch[  41-  41, 41.00%]: CE = 6.73171997 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  42-  42, 42.00%]: CE = 6.89941406 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.3
 Epoch[ 2 of 3]-Minibatch[  43-  43, 43.00%]: CE = 6.91903687 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  44-  44, 44.00%]: CE = 6.78155518 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 2 of 3]-Minibatch[  45-  45, 45.00%]: CE = 6.83972168 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 2 of 3]-Minibatch[  46-  46, 46.00%]: CE = 6.88012695 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.4
 Epoch[ 2 of 3]-Minibatch[  47-  47, 47.00%]: CE = 6.82614136 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 2 of 3]-Minibatch[  48-  48, 48.00%]: CE = 6.92089844 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  49-  49, 49.00%]: CE = 6.78759766 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 2 of 3]-Minibatch[  50-  50, 50.00%]: CE = 6.93585205 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.8
 Epoch[ 2 of 3]-Minibatch[  51-  51, 51.00%]: CE = 6.71569824 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  52-  52, 52.00%]: CE = 6.96701050 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.9
 Epoch[ 2 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.82254028 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  54-  54, 54.00%]: CE = 6.88204956 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  55-  55, 55.00%]: CE = 6.88375854 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  56-  56, 56.00%]: CE = 6.93432617 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  57-  57, 57.00%]: CE = 7.01388550 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.9
 Epoch[ 2 of 3]-Minibatch[  58-  58, 58.00%]: CE = 6.99142456 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  59-  59, 59.00%]: CE = 6.76760864 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  60-  60, 60.00%]: CE = 6.76083374 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.5
 Epoch[ 2 of 3]-Minibatch[  61-  61, 61.00%]: CE = 6.97662354 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  62-  62, 62.00%]: CE = 6.93353271 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  63-  63, 63.00%]: CE = 6.89279175 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  64-  64, 64.00%]: CE = 6.82937622 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 2 of 3]-Minibatch[  65-  65, 65.00%]: CE = 6.99063110 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  66-  66, 66.00%]: CE = 6.76123047 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.67593384 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 2 of 3]-Minibatch[  68-  68, 68.00%]: CE = 7.04006958 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.3
 Epoch[ 2 of 3]-Minibatch[  69-  69, 69.00%]: CE = 7.06719971 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.0
 Epoch[ 2 of 3]-Minibatch[  70-  70, 70.00%]: CE = 6.73782349 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.3
 Epoch[ 2 of 3]-Minibatch[  71-  71, 71.00%]: CE = 6.92037964 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 2 of 3]-Minibatch[  72-  72, 72.00%]: CE = 6.61572266 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.8
 Epoch[ 2 of 3]-Minibatch[  73-  73, 73.00%]: CE = 6.85650635 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.4
 Epoch[ 2 of 3]-Minibatch[  74-  74, 74.00%]: CE = 7.09887695 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  75-  75, 75.00%]: CE = 6.96609497 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.0
 Epoch[ 2 of 3]-Minibatch[  76-  76, 76.00%]: CE = 6.70355225 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.9
 Epoch[ 2 of 3]-Minibatch[  77-  77, 77.00%]: CE = 6.91925049 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.9
 Epoch[ 2 of 3]-Minibatch[  78-  78, 78.00%]: CE = 6.87384033 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.8
 Epoch[ 2 of 3]-Minibatch[  79-  79, 79.00%]: CE = 6.75738525 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  80-  80, 80.00%]: CE = 6.86859131 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  81-  81, 81.00%]: CE = 6.65136719 * 16; Err = 0.93750000 * 16; time = 0.0363s; samplesPerSecond = 441.1
 Epoch[ 2 of 3]-Minibatch[  82-  82, 82.00%]: CE = 6.69683838 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.8
 Epoch[ 2 of 3]-Minibatch[  83-  83, 83.00%]: CE = 7.09851074 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.4
 Epoch[ 2 of 3]-Minibatch[  84-  84, 84.00%]: CE = 6.92120361 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 2 of 3]-Minibatch[  85-  85, 85.00%]: CE = 6.91784668 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.9
 Epoch[ 2 of 3]-Minibatch[  86-  86, 86.00%]: CE = 7.07196045 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.5
 Epoch[ 2 of 3]-Minibatch[  87-  87, 87.00%]: CE = 6.89141846 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.3
 Epoch[ 2 of 3]-Minibatch[  88-  88, 88.00%]: CE = 6.88751221 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 2 of 3]-Minibatch[  89-  89, 89.00%]: CE = 6.96575928 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.8
 Epoch[ 2 of 3]-Minibatch[  90-  90, 90.00%]: CE = 6.95458984 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  91-  91, 91.00%]: CE = 6.71997070 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  92-  92, 92.00%]: CE = 6.98107910 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.9
 Epoch[ 2 of 3]-Minibatch[  93-  93, 93.00%]: CE = 6.64916992 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.5
 Epoch[ 2 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.78417969 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  95-  95, 95.00%]: CE = 7.04895020 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.8
 Epoch[ 2 of 3]-Minibatch[  96-  96, 96.00%]: CE = 7.08001709 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 2 of 3]-Minibatch[  97-  97, 97.00%]: CE = 6.91119385 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.1
 Epoch[ 2 of 3]-Minibatch[  98-  98, 98.00%]: CE = 6.77691650 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 2 of 3]-Minibatch[  99-  99, 99.00%]: CE = 6.98840332 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.9
 Epoch[ 2 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 6.89013672 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.1
Finished Epoch[ 2 of 3]: [Training] CE = 6.89996155 * 1600; Err = 0.99875000 * 1600; totalSamplesSeen = 3200; learningRatePerSample = 0.00062499999; epochTime=3.64764s
SGD: Saving checkpoint model './Output/alexnet/AlexNet.2'

Starting Epoch 3: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
starting epoch 3 at record count 3200, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 3 of 3]-Minibatch[   1-   1, 1.00%]: CE = 7.22336864 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.1
 Epoch[ 3 of 3]-Minibatch[   2-   2, 2.00%]: CE = 7.16255951 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 3 of 3]-Minibatch[   3-   3, 3.00%]: CE = 6.89354992 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 3 of 3]-Minibatch[   4-   4, 4.00%]: CE = 6.77842522 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 3 of 3]-Minibatch[   5-   5, 5.00%]: CE = 6.84754944 * 16; Err = 1.00000000 * 16; time = 0.0370s; samplesPerSecond = 432.8
 Epoch[ 3 of 3]-Minibatch[   6-   6, 6.00%]: CE = 6.76813126 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 3 of 3]-Minibatch[   7-   7, 7.00%]: CE = 6.88245010 * 16; Err = 1.00000000 * 16; time = 0.0360s; samplesPerSecond = 443.9
 Epoch[ 3 of 3]-Minibatch[   8-   8, 8.00%]: CE = 6.74108124 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.8
 Epoch[ 3 of 3]-Minibatch[   9-   9, 9.00%]: CE = 6.75839615 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.2
 Epoch[ 3 of 3]-Minibatch[  10-  10, 10.00%]: CE = 6.83709717 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 3 of 3]-Minibatch[  11-  11, 11.00%]: CE = 6.88109589 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.6
 Epoch[ 3 of 3]-Minibatch[  12-  12, 12.00%]: CE = 6.74004364 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.2
 Epoch[ 3 of 3]-Minibatch[  13-  13, 13.00%]: CE = 6.73231506 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 3 of 3]-Minibatch[  14-  14, 14.00%]: CE = 6.86653900 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  15-  15, 15.00%]: CE = 6.68949127 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 3 of 3]-Minibatch[  16-  16, 16.00%]: CE = 6.87014008 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.9
 Epoch[ 3 of 3]-Minibatch[  17-  17, 17.00%]: CE = 7.02489471 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  18-  18, 18.00%]: CE = 6.92254639 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.5
 Epoch[ 3 of 3]-Minibatch[  19-  19, 19.00%]: CE = 6.68843079 * 16; Err = 1.00000000 * 16; time = 0.0360s; samplesPerSecond = 445.0
 Epoch[ 3 of 3]-Minibatch[  20-  20, 20.00%]: CE = 6.81309509 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.9
 Epoch[ 3 of 3]-Minibatch[  21-  21, 21.00%]: CE = 6.96775818 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 3 of 3]-Minibatch[  22-  22, 22.00%]: CE = 6.70550537 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.0
 Epoch[ 3 of 3]-Minibatch[  23-  23, 23.00%]: CE = 6.91055298 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  24-  24, 24.00%]: CE = 6.71043396 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.2
 Epoch[ 3 of 3]-Minibatch[  25-  25, 25.00%]: CE = 6.69610596 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  26-  26, 26.00%]: CE = 6.83485413 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.8
 Epoch[ 3 of 3]-Minibatch[  27-  27, 27.00%]: CE = 6.73324585 * 16; Err = 1.00000000 * 16; time = 0.0360s; samplesPerSecond = 444.1
 Epoch[ 3 of 3]-Minibatch[  28-  28, 28.00%]: CE = 6.80456543 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  29-  29, 29.00%]: CE = 7.06404114 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 3 of 3]-Minibatch[  30-  30, 30.00%]: CE = 6.80984497 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 3 of 3]-Minibatch[  31-  31, 31.00%]: CE = 6.70114136 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.9
 Epoch[ 3 of 3]-Minibatch[  32-  32, 32.00%]: CE = 6.89921570 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.8
 Epoch[ 3 of 3]-Minibatch[  33-  33, 33.00%]: CE = 6.89042664 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 3 of 3]-Minibatch[  34-  34, 34.00%]: CE = 6.84461975 * 16; Err = 1.00000000 * 16; time = 0.0360s; samplesPerSecond = 443.9
 Epoch[ 3 of 3]-Minibatch[  35-  35, 35.00%]: CE = 6.78302002 * 16; Err = 0.93750000 * 16; time = 0.0361s; samplesPerSecond = 443.3
 Epoch[ 3 of 3]-Minibatch[  36-  36, 36.00%]: CE = 6.56376648 * 16; Err = 0.93750000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  37-  37, 37.00%]: CE = 6.82852173 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.5
 Epoch[ 3 of 3]-Minibatch[  38-  38, 38.00%]: CE = 6.86607361 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  39-  39, 39.00%]: CE = 6.57339478 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.0
 Epoch[ 3 of 3]-Minibatch[  40-  40, 40.00%]: CE = 6.68716431 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  41-  41, 41.00%]: CE = 6.74221802 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 3 of 3]-Minibatch[  42-  42, 42.00%]: CE = 6.85580444 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.0
 Epoch[ 3 of 3]-Minibatch[  43-  43, 43.00%]: CE = 6.89620972 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.8
 Epoch[ 3 of 3]-Minibatch[  44-  44, 44.00%]: CE = 6.71371460 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  45-  45, 45.00%]: CE = 6.75140381 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.9
 Epoch[ 3 of 3]-Minibatch[  46-  46, 46.00%]: CE = 6.80258179 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 3 of 3]-Minibatch[  47-  47, 47.00%]: CE = 6.69241333 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  48-  48, 48.00%]: CE = 6.82095337 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.2
 Epoch[ 3 of 3]-Minibatch[  49-  49, 49.00%]: CE = 6.73385620 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.9
 Epoch[ 3 of 3]-Minibatch[  50-  50, 50.00%]: CE = 6.80929565 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.8
 Epoch[ 3 of 3]-Minibatch[  51-  51, 51.00%]: CE = 6.54064941 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 3 of 3]-Minibatch[  52-  52, 52.00%]: CE = 6.88485718 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.6
 Epoch[ 3 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.65512085 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 3 of 3]-Minibatch[  54-  54, 54.00%]: CE = 6.75311279 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.6
 Epoch[ 3 of 3]-Minibatch[  55-  55, 55.00%]: CE = 6.73336792 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.4
 Epoch[ 3 of 3]-Minibatch[  56-  56, 56.00%]: CE = 6.81329346 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.5
 Epoch[ 3 of 3]-Minibatch[  57-  57, 57.00%]: CE = 6.90835571 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 3 of 3]-Minibatch[  58-  58, 58.00%]: CE = 6.91085815 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 3 of 3]-Minibatch[  59-  59, 59.00%]: CE = 6.67892456 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 3 of 3]-Minibatch[  60-  60, 60.00%]: CE = 6.68905640 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.1
 Epoch[ 3 of 3]-Minibatch[  61-  61, 61.00%]: CE = 6.80142212 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.3
 Epoch[ 3 of 3]-Minibatch[  62-  62, 62.00%]: CE = 6.85742188 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 3 of 3]-Minibatch[  63-  63, 63.00%]: CE = 6.78952026 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.0
 Epoch[ 3 of 3]-Minibatch[  64-  64, 64.00%]: CE = 6.71804810 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  65-  65, 65.00%]: CE = 6.84448242 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.8
 Epoch[ 3 of 3]-Minibatch[  66-  66, 66.00%]: CE = 6.71279907 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 3 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.56228638 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 3 of 3]-Minibatch[  68-  68, 68.00%]: CE = 7.03216553 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 3 of 3]-Minibatch[  69-  69, 69.00%]: CE = 7.05291748 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.5
 Epoch[ 3 of 3]-Minibatch[  70-  70, 70.00%]: CE = 6.70031738 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.6
 Epoch[ 3 of 3]-Minibatch[  71-  71, 71.00%]: CE = 6.93460083 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  72-  72, 72.00%]: CE = 6.52166748 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.2
 Epoch[ 3 of 3]-Minibatch[  73-  73, 73.00%]: CE = 6.72198486 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.4
 Epoch[ 3 of 3]-Minibatch[  74-  74, 74.00%]: CE = 7.07186890 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.6
 Epoch[ 3 of 3]-Minibatch[  75-  75, 75.00%]: CE = 6.91378784 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.6
 Epoch[ 3 of 3]-Minibatch[  76-  76, 76.00%]: CE = 6.66848755 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.9
 Epoch[ 3 of 3]-Minibatch[  77-  77, 77.00%]: CE = 6.87829590 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  78-  78, 78.00%]: CE = 6.69622803 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.5
 Epoch[ 3 of 3]-Minibatch[  79-  79, 79.00%]: CE = 6.64630127 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.4
 Epoch[ 3 of 3]-Minibatch[  80-  80, 80.00%]: CE = 6.74560547 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.9
 Epoch[ 3 of 3]-Minibatch[  81-  81, 81.00%]: CE = 6.50091553 * 16; Err = 0.93750000 * 16; time = 0.0363s; samplesPerSecond = 441.3
 Epoch[ 3 of 3]-Minibatch[  82-  82, 82.00%]: CE = 6.61614990 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.2
 Epoch[ 3 of 3]-Minibatch[  83-  83, 83.00%]: CE = 7.10931396 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  84-  84, 84.00%]: CE = 6.83642578 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.3
 Epoch[ 3 of 3]-Minibatch[  85-  85, 85.00%]: CE = 6.76458740 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.1
 Epoch[ 3 of 3]-Minibatch[  86-  86, 86.00%]: CE = 6.99816895 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  87-  87, 87.00%]: CE = 6.80786133 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  88-  88, 88.00%]: CE = 6.82543945 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.1
 Epoch[ 3 of 3]-Minibatch[  89-  89, 89.00%]: CE = 6.90637207 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 3 of 3]-Minibatch[  90-  90, 90.00%]: CE = 6.86578369 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.2
 Epoch[ 3 of 3]-Minibatch[  91-  91, 91.00%]: CE = 6.65063477 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 3 of 3]-Minibatch[  92-  92, 92.00%]: CE = 6.95263672 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 3 of 3]-Minibatch[  93-  93, 93.00%]: CE = 6.61859131 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.4
 Epoch[ 3 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.68499756 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.5
 Epoch[ 3 of 3]-Minibatch[  95-  95, 95.00%]: CE = 6.99182129 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 3 of 3]-Minibatch[  96-  96, 96.00%]: CE = 7.02294922 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 3 of 3]-Minibatch[  97-  97, 97.00%]: CE = 6.83947754 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.1
 Epoch[ 3 of 3]-Minibatch[  98-  98, 98.00%]: CE = 6.60443115 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.6
 Epoch[ 3 of 3]-Minibatch[  99-  99, 99.00%]: CE = 6.97918701 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.8
 Epoch[ 3 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 6.73254395 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 442.7
Finished Epoch[ 3 of 3]: [Training] CE = 6.80559998 * 1600; Err = 0.99812500 * 1600; totalSamplesSeen = 4800; learningRatePerSample = 0.00062499999; epochTime=3.6229s
SGD: Saving checkpoint model './Output/alexnet/AlexNet'
CNTKCommandTrainEnd: Train

Action "train" complete.

__COMPLETED__
