-------------------------------------------------------------------
Build info: 

		Built time: Sep 14 2016 14:45:13
		Last modified date: Wed Sep 14 14:44:51 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local
		Build Branch: master
		Build SHA1: cac191c8c3c08e546c9af25236d368c0ed2812c2
		Built by guolin on MSRAML-GPU04
		Build Path: /home/guolin/deep-learning-benchmarks/cntk/cntk
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12204 MB
		Device[1]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
-------------------------------------------------------------------

Running on localhost at 2016/09/14 14:59:51
Command line: 
cntk/build/bin/cntk  configFile=cnn/alexnet/alexnet.cntk  configName=alexnet  deviceId=0  minibatchSize=16  epochSize=1600  DataDir=cnn  ConfigDir=cnn/alexnet


Configuration After Processing and Variable Resolution:

configparameters: alexnet.cntk:command=Train
configparameters: alexnet.cntk:ConfigDir=cnn/alexnet
configparameters: alexnet.cntk:configName=alexnet
configparameters: alexnet.cntk:DataDir=cnn
configparameters: alexnet.cntk:deviceId=0
configparameters: alexnet.cntk:epochSize=1600
configparameters: alexnet.cntk:imageLayout=cudnn
configparameters: alexnet.cntk:initOnCPUOnly=true
configparameters: alexnet.cntk:makeMode=false
configparameters: alexnet.cntk:maxEpochs=3
configparameters: alexnet.cntk:minibatchSize=16
configparameters: alexnet.cntk:ModelDir=./Output/alexnet
configparameters: alexnet.cntk:ndlMacros=cnn/alexnet/Macros.ndl
configparameters: alexnet.cntk:precision=float
configparameters: alexnet.cntk:stderr=./output_alexnet
configparameters: alexnet.cntk:traceLevel=1
configparameters: alexnet.cntk:Train=[
    action=train
    modelPath=./Output/alexnet/AlexNet
    NDLNetworkBuilder=[
        networkDescription=cnn/alexnet/AlexNet.ndl
    ]
    SGD=[
        epochSize=1600
        minibatchSize=16
        maxEpochs=3
        learningRatesPerMB=0.01
        momentumPerMB=0
        dropoutRate=0
	    numMBsToShowResult=1
    ]
    reader=[
        readerType=UCIFastReader
        file=cnn/imagenet_data.txt
        randomize=None
        features=[
            dim=150528
            start=1
        ]
        labels=[
            dim=1
            start=0
            labelDim=1000
            labelMappingFile=cnn/labelmap.1K.txt
        ]
    ]
]

configparameters: alexnet.cntk:WorkDir=.
Commands: Train
Precision = "float"
CNTKModelPath: ./Output/alexnet/AlexNet
CNTKCommandTrainInfo: Train : 3
CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

##############################################################################
#                                                                            #
# Action "train"                                                             #
#                                                                            #
##############################################################################

CNTKCommandTrainBegin: Train

Creating virgin network.
NDLBuilder Using GPU 0
Node 'conv1_act.convW' (LearnableParameter operation): Initializing Parameter[96 x 363] <- 0.000000.
Node 'conv1_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 96] <- 0.000000.
Node 'conv2_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 2400] <- 0.000000.
Node 'conv2_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 0.000000.
Node 'conv3_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 2304] <- 0.000000.
Node 'conv3_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv4_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 3456] <- 0.000000.
Node 'conv4_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv5_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 3456] <- 0.000000.
Node 'conv5_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 0.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[4096 x 9216] <- 0.000000.
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[4096] <- 0.000000.
Node 'h2.W' (LearnableParameter operation): Initializing Parameter[4096 x 4096] <- 0.000000.
Node 'h2.b' (LearnableParameter operation): Initializing Parameter[4096] <- 0.000000.
Node 'OutputNodes.W' (LearnableParameter operation): Initializing Parameter[1000 x 4096] <- 0.000000.
Node 'OutputNodes.b' (LearnableParameter operation): Initializing Parameter[1000] <- 0.000000.
Node 'conv1_act.convW' (LearnableParameter operation): Initializing Parameter[96 x 363] <- gaussian(seed=1, init dims=[96 x 363], range=0.010497*0.950000, onCPU=true).
Node 'conv1_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 96] <- 0.000000.
Node 'conv2_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 2400] <- gaussian(seed=2, init dims=[256 x 2400], range=0.004082*2.000000, onCPU=true).
Node 'conv2_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 1.000000.
Node 'conv3_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 2304] <- gaussian(seed=3, init dims=[384 x 2304], range=0.004167*2.070000, onCPU=true).
Node 'conv3_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv4_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 3456] <- gaussian(seed=4, init dims=[384 x 3456], range=0.003402*2.900000, onCPU=true).
Node 'conv4_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 1.000000.
Node 'conv5_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 3456] <- gaussian(seed=5, init dims=[256 x 3456], range=0.003402*2.400000, onCPU=true).
Node 'conv5_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 1.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[4096 x 9216] <- gaussian(seed=6, init dims=[4096 x 9216], range=0.002083*6.400000, onCPU=true).
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[4096] <- 1.000000.
Node 'h2.W' (LearnableParameter operation): Initializing Parameter[4096 x 4096] <- gaussian(seed=7, init dims=[4096 x 4096], range=0.003125*3.200000, onCPU=true).
Node 'h2.b' (LearnableParameter operation): Initializing Parameter[4096] <- 1.000000.
Node 'OutputNodes.W' (LearnableParameter operation): Initializing Parameter[1000 x 4096] <- gaussian(seed=8, init dims=[1000 x 4096], range=0.003125*3.200000, onCPU=true).
Node 'OutputNodes.b' (LearnableParameter operation): Initializing Parameter[1000] <- 1.000000.

Post-processing network...

3 roots:
	CE = CrossEntropyWithSoftmax()
	Err = ClassificationError()
	OutputNodes.z = Plus()

Validating network. 46 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [1000 x *]
Validating --> OutputNodes.W = LearnableParameter() :  -> [1000 x 4096]
Validating --> h2.W = LearnableParameter() :  -> [4096 x 4096]
Validating --> h1.W = LearnableParameter() :  -> [4096 x 9216]
Validating --> conv5_act.convW = LearnableParameter() :  -> [256 x 3456]
Validating --> conv4_act.convW = LearnableParameter() :  -> [384 x 3456]
Validating --> conv3_act.convW = LearnableParameter() :  -> [384 x 2304]
Validating --> conv2_act.convW = LearnableParameter() :  -> [256 x 2400]
Validating --> conv1_act.convW = LearnableParameter() :  -> [96 x 363]
Validating --> features = InputValue() :  -> [224 x 224 x 3 x *]
Validating --> conv1_act.conv = Convolution (conv1_act.convW, features) : [96 x 363], [224 x 224 x 3 x *] -> [56 x 56 x 96 x *]
Validating --> conv1_act.convB = LearnableParameter() :  -> [1 x 1 x 96]
Validating --> conv1_act.convPlusB = Plus (conv1_act.conv, conv1_act.convB) : [56 x 56 x 96 x *], [1 x 1 x 96] -> [56 x 56 x 96 x *]
Validating --> conv1_act.act = RectifiedLinear (conv1_act.convPlusB) : [56 x 56 x 96 x *] -> [56 x 56 x 96 x *]
Validating --> pool1 = MaxPooling (conv1_act.act) : [56 x 56 x 96 x *] -> [27 x 27 x 96 x *]
Validating --> conv2_act.conv = Convolution (conv2_act.convW, pool1) : [256 x 2400], [27 x 27 x 96 x *] -> [27 x 27 x 256 x *]
Validating --> conv2_act.convB = LearnableParameter() :  -> [1 x 1 x 256]
Validating --> conv2_act.convPlusB = Plus (conv2_act.conv, conv2_act.convB) : [27 x 27 x 256 x *], [1 x 1 x 256] -> [27 x 27 x 256 x *]
Validating --> conv2_act.act = RectifiedLinear (conv2_act.convPlusB) : [27 x 27 x 256 x *] -> [27 x 27 x 256 x *]
Validating --> pool2 = MaxPooling (conv2_act.act) : [27 x 27 x 256 x *] -> [13 x 13 x 256 x *]
Validating --> conv3_act.conv = Convolution (conv3_act.convW, pool2) : [384 x 2304], [13 x 13 x 256 x *] -> [13 x 13 x 384 x *]
Validating --> conv3_act.convB = LearnableParameter() :  -> [1 x 1 x 384]
Validating --> conv3_act.convPlusB = Plus (conv3_act.conv, conv3_act.convB) : [13 x 13 x 384 x *], [1 x 1 x 384] -> [13 x 13 x 384 x *]
Validating --> conv3_act.act = RectifiedLinear (conv3_act.convPlusB) : [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv4_act.conv = Convolution (conv4_act.convW, conv3_act.act) : [384 x 3456], [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv4_act.convB = LearnableParameter() :  -> [1 x 1 x 384]
Validating --> conv4_act.convPlusB = Plus (conv4_act.conv, conv4_act.convB) : [13 x 13 x 384 x *], [1 x 1 x 384] -> [13 x 13 x 384 x *]
Validating --> conv4_act.act = RectifiedLinear (conv4_act.convPlusB) : [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv5_act.conv = Convolution (conv5_act.convW, conv4_act.act) : [256 x 3456], [13 x 13 x 384 x *] -> [13 x 13 x 256 x *]
Validating --> conv5_act.convB = LearnableParameter() :  -> [1 x 1 x 256]
Validating --> conv5_act.convPlusB = Plus (conv5_act.conv, conv5_act.convB) : [13 x 13 x 256 x *], [1 x 1 x 256] -> [13 x 13 x 256 x *]
Validating --> conv5_act.act = RectifiedLinear (conv5_act.convPlusB) : [13 x 13 x 256 x *] -> [13 x 13 x 256 x *]
Validating --> pool3 = MaxPooling (conv5_act.act) : [13 x 13 x 256 x *] -> [6 x 6 x 256 x *]

h1.t Times operation: For legacy compatibility, the sample layout of left input (h1.W LearnableParameter operation) was patched to [4096 x 6 x 6 x 256] (from [4096 x 9216])
Validating --> h1.t = Times (h1.W, pool3) : [4096 x 6 x 6 x 256], [6 x 6 x 256 x *] -> [4096 x *]
Validating --> h1.b = LearnableParameter() :  -> [4096]
Validating --> h1.z = Plus (h1.t, h1.b) : [4096 x *], [4096] -> [4096 x *]
Validating --> h1.y = RectifiedLinear (h1.z) : [4096 x *] -> [4096 x *]
Validating --> h2.t = Times (h2.W, h1.y) : [4096 x 4096], [4096 x *] -> [4096 x *]
Validating --> h2.b = LearnableParameter() :  -> [4096]
Validating --> h2.z = Plus (h2.t, h2.b) : [4096 x *], [4096] -> [4096 x *]
Validating --> h2.y = RectifiedLinear (h2.z) : [4096 x *] -> [4096 x *]
Validating --> OutputNodes.t = Times (OutputNodes.W, h2.y) : [1000 x 4096], [4096 x *] -> [1000 x *]
Validating --> OutputNodes.b = LearnableParameter() :  -> [1000]
Validating --> OutputNodes.z = Plus (OutputNodes.t, OutputNodes.b) : [1000 x *], [1000] -> [1000 x *]
Validating --> CE = CrossEntropyWithSoftmax (labels, OutputNodes.z) : [1000 x *], [1000 x *] -> [1]
Validating --> Err = ClassificationError (labels, OutputNodes.z) : [1000 x *], [1000 x *] -> [1]

Validating network. 28 nodes to process in pass 2.


Validating network, final pass.

conv1_act.conv: using cuDNN convolution engine for geometry: Input: 224 x 224 x 3, Output: 56 x 56 x 96, Kernel: 11 x 11 x 3, Map: 1 x 1 x 96, Stride: 4 x 4 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool1: using cuDNN convolution engine for geometry: Input: 56 x 56 x 96, Output: 27 x 27 x 96, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv2_act.conv: using cuDNN convolution engine for geometry: Input: 27 x 27 x 96, Output: 27 x 27 x 256, Kernel: 5 x 5 x 96, Map: 1 x 1 x 256, Stride: 1 x 1 x 96, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool2: using cuDNN convolution engine for geometry: Input: 27 x 27 x 256, Output: 13 x 13 x 256, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv3_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 256, Output: 13 x 13 x 384, Kernel: 3 x 3 x 256, Map: 1 x 1 x 384, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
conv4_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 384, Output: 13 x 13 x 384, Kernel: 3 x 3 x 384, Map: 1 x 1 x 384, Stride: 1 x 1 x 384, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
conv5_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 384, Output: 13 x 13 x 256, Kernel: 3 x 3 x 384, Map: 1 x 1 x 256, Stride: 1 x 1 x 384, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool3: using cuDNN convolution engine for geometry: Input: 13 x 13 x 256, Output: 6 x 6 x 256, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.


18 out of 46 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

********** DEPRECATED **********
UCIFastReader is no longer actively maintained.
It is known to have defects, proceed with caution (better yet, switch to CNTKTextFormatReader)!
For more details please see https://github.com/Microsoft/CNTK/wiki 
Reading UCI file cnn/imagenet_data.txt
Created model with 46 nodes on GPU 0.

Training criterion node(s):
	CE = CrossEntropyWithSoftmax

Evaluation criterion node(s):
	Err = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 89 matrices, 60 are shared as 26, and 29 are not shared.

	{ conv2_act.convPlusB : [27 x 27 x 256 x *]
	  conv2_act.convW : [256 x 2400] (gradient) }
	{ conv2_act.act : [27 x 27 x 256 x *]
	  conv2_act.conv : [27 x 27 x 256 x *] (gradient) }
	{ conv2_act.convPlusB : [27 x 27 x 256 x *] (gradient)
	  pool1 : [27 x 27 x 96 x *] (gradient)
	  pool2 : [13 x 13 x 256 x *] }
	{ conv2_act.act : [27 x 27 x 256 x *] (gradient)
	  conv2_act.convB : [1 x 1 x 256] (gradient) }
	{ conv3_act.convPlusB : [13 x 13 x 384 x *]
	  conv3_act.convW : [384 x 2304] (gradient) }
	{ conv3_act.act : [13 x 13 x 384 x *]
	  conv3_act.conv : [13 x 13 x 384 x *] (gradient) }
	{ conv3_act.convPlusB : [13 x 13 x 384 x *] (gradient)
	  pool2 : [13 x 13 x 256 x *] (gradient) }
	{ conv4_act.convPlusB : [13 x 13 x 384 x *]
	  conv4_act.convW : [384 x 3456] (gradient) }
	{ conv4_act.act : [13 x 13 x 384 x *]
	  conv4_act.conv : [13 x 13 x 384 x *] (gradient) }
	{ conv3_act.act : [13 x 13 x 384 x *] (gradient)
	  conv3_act.convB : [1 x 1 x 384] (gradient)
	  conv4_act.convPlusB : [13 x 13 x 384 x *] (gradient) }
	{ conv5_act.convPlusB : [13 x 13 x 256 x *]
	  conv5_act.convW : [256 x 3456] (gradient) }
	{ conv5_act.act : [13 x 13 x 256 x *]
	  conv5_act.conv : [13 x 13 x 256 x *] (gradient) }
	{ conv4_act.act : [13 x 13 x 384 x *] (gradient)
	  conv4_act.convB : [1 x 1 x 384] (gradient)
	  conv5_act.convPlusB : [13 x 13 x 256 x *] (gradient)
	  pool3 : [6 x 6 x 256 x *] }
	{ conv5_act.act : [13 x 13 x 256 x *] (gradient)
	  conv5_act.convB : [1 x 1 x 256] (gradient)
	  h1.t : [4096 x *] }
	{ h1.W : [4096 x 6 x 6 x 256] (gradient)
	  h1.z : [4096 x *] }
	{ h1.t : [4096 x *] (gradient)
	  h1.y : [4096 x *] }
	{ h1.z : [4096 x *] (gradient)
	  h2.t : [4096 x *]
	  pool3 : [6 x 6 x 256 x *] (gradient) }
	{ h2.W : [4096 x 4096] (gradient)
	  h2.z : [4096 x *] }
	{ h2.t : [4096 x *] (gradient)
	  h2.y : [4096 x *] }
	{ OutputNodes.t : [1000 x *]
	  h1.b : [4096] (gradient)
	  h1.y : [4096 x *] (gradient)
	  h2.z : [4096 x *] (gradient) }
	{ OutputNodes.W : [1000 x 4096] (gradient)
	  OutputNodes.z : [1000 x *] (gradient) }
	{ h2.b : [4096] (gradient)
	  h2.y : [4096 x *] (gradient) }
	{ conv1_act.act : [56 x 56 x 96 x *]
	  conv1_act.conv : [56 x 56 x 96 x *] (gradient) }
	{ conv1_act.convPlusB : [56 x 56 x 96 x *]
	  conv1_act.convW : [96 x 363] (gradient) }
	{ conv1_act.convPlusB : [56 x 56 x 96 x *] (gradient)
	  pool1 : [27 x 27 x 96 x *] }
	{ conv1_act.act : [56 x 56 x 96 x *] (gradient)
	  conv1_act.convB : [1 x 1 x 96] (gradient) }


Training 62378344 parameters in 16 out of 16 parameter tensors and 43 nodes with gradient:

	Node 'OutputNodes.W' (LearnableParameter operation) : [1000 x 4096]
	Node 'OutputNodes.b' (LearnableParameter operation) : [1000]
	Node 'conv1_act.convB' (LearnableParameter operation) : [1 x 1 x 96]
	Node 'conv1_act.convW' (LearnableParameter operation) : [96 x 363]
	Node 'conv2_act.convB' (LearnableParameter operation) : [1 x 1 x 256]
	Node 'conv2_act.convW' (LearnableParameter operation) : [256 x 2400]
	Node 'conv3_act.convB' (LearnableParameter operation) : [1 x 1 x 384]
	Node 'conv3_act.convW' (LearnableParameter operation) : [384 x 2304]
	Node 'conv4_act.convB' (LearnableParameter operation) : [1 x 1 x 384]
	Node 'conv4_act.convW' (LearnableParameter operation) : [384 x 3456]
	Node 'conv5_act.convB' (LearnableParameter operation) : [1 x 1 x 256]
	Node 'conv5_act.convW' (LearnableParameter operation) : [256 x 3456]
	Node 'h1.W' (LearnableParameter operation) : [4096 x 6 x 6 x 256]
	Node 'h1.b' (LearnableParameter operation) : [4096]
	Node 'h2.W' (LearnableParameter operation) : [4096 x 4096]
	Node 'h2.b' (LearnableParameter operation) : [4096]

No PreCompute nodes found, or all already computed. Skipping pre-computation step.

Starting Epoch 1: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 1600 records found.
starting epoch 1 at record count 0, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 1 of 3]-Minibatch[   1-   1, 1.00%]: CE = 7.18148613 * 16; Err = 1.00000000 * 16; time = 1.2834s; samplesPerSecond = 12.5
 Epoch[ 1 of 3]-Minibatch[   2-   2, 2.00%]: CE = 12.10828972 * 16; Err = 1.00000000 * 16; time = 0.2515s; samplesPerSecond = 63.6
 Epoch[ 1 of 3]-Minibatch[   3-   3, 3.00%]: CE = 9.84326172 * 16; Err = 1.00000000 * 16; time = 0.1944s; samplesPerSecond = 82.3
 Epoch[ 1 of 3]-Minibatch[   4-   4, 4.00%]: CE = 8.04257202 * 16; Err = 1.00000000 * 16; time = 0.1941s; samplesPerSecond = 82.4
 Epoch[ 1 of 3]-Minibatch[   5-   5, 5.00%]: CE = 8.60352707 * 16; Err = 1.00000000 * 16; time = 0.1940s; samplesPerSecond = 82.5
 Epoch[ 1 of 3]-Minibatch[   6-   6, 6.00%]: CE = 7.86043549 * 16; Err = 1.00000000 * 16; time = 0.1928s; samplesPerSecond = 83.0
 Epoch[ 1 of 3]-Minibatch[   7-   7, 7.00%]: CE = 7.96076965 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 1 of 3]-Minibatch[   8-   8, 8.00%]: CE = 7.99276733 * 16; Err = 1.00000000 * 16; time = 0.1724s; samplesPerSecond = 92.8
 Epoch[ 1 of 3]-Minibatch[   9-   9, 9.00%]: CE = 8.03714752 * 16; Err = 1.00000000 * 16; time = 0.1733s; samplesPerSecond = 92.3
 Epoch[ 1 of 3]-Minibatch[  10-  10, 10.00%]: CE = 7.52484894 * 16; Err = 1.00000000 * 16; time = 0.1721s; samplesPerSecond = 92.9
 Epoch[ 1 of 3]-Minibatch[  11-  11, 11.00%]: CE = 7.79671478 * 16; Err = 1.00000000 * 16; time = 0.1717s; samplesPerSecond = 93.2
 Epoch[ 1 of 3]-Minibatch[  12-  12, 12.00%]: CE = 7.97060394 * 16; Err = 1.00000000 * 16; time = 0.1722s; samplesPerSecond = 92.9
 Epoch[ 1 of 3]-Minibatch[  13-  13, 13.00%]: CE = 7.33709717 * 16; Err = 1.00000000 * 16; time = 0.1718s; samplesPerSecond = 93.1
 Epoch[ 1 of 3]-Minibatch[  14-  14, 14.00%]: CE = 7.50937653 * 16; Err = 1.00000000 * 16; time = 0.1718s; samplesPerSecond = 93.2
 Epoch[ 1 of 3]-Minibatch[  15-  15, 15.00%]: CE = 7.53863525 * 16; Err = 1.00000000 * 16; time = 0.1723s; samplesPerSecond = 92.8
 Epoch[ 1 of 3]-Minibatch[  16-  16, 16.00%]: CE = 7.62004852 * 16; Err = 1.00000000 * 16; time = 0.1721s; samplesPerSecond = 93.0
 Epoch[ 1 of 3]-Minibatch[  17-  17, 17.00%]: CE = 7.48036194 * 16; Err = 1.00000000 * 16; time = 0.1721s; samplesPerSecond = 93.0
 Epoch[ 1 of 3]-Minibatch[  18-  18, 18.00%]: CE = 7.66307068 * 16; Err = 1.00000000 * 16; time = 0.1724s; samplesPerSecond = 92.8
 Epoch[ 1 of 3]-Minibatch[  19-  19, 19.00%]: CE = 7.68217468 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  20-  20, 20.00%]: CE = 7.43928528 * 16; Err = 1.00000000 * 16; time = 0.1789s; samplesPerSecond = 89.4
 Epoch[ 1 of 3]-Minibatch[  21-  21, 21.00%]: CE = 7.86906433 * 16; Err = 1.00000000 * 16; time = 0.1788s; samplesPerSecond = 89.5
 Epoch[ 1 of 3]-Minibatch[  22-  22, 22.00%]: CE = 7.39625549 * 16; Err = 1.00000000 * 16; time = 0.1759s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  23-  23, 23.00%]: CE = 7.24047852 * 16; Err = 1.00000000 * 16; time = 0.1757s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  24-  24, 24.00%]: CE = 7.30766296 * 16; Err = 1.00000000 * 16; time = 0.1761s; samplesPerSecond = 90.9
 Epoch[ 1 of 3]-Minibatch[  25-  25, 25.00%]: CE = 7.69943237 * 16; Err = 1.00000000 * 16; time = 0.1725s; samplesPerSecond = 92.7
 Epoch[ 1 of 3]-Minibatch[  26-  26, 26.00%]: CE = 7.63153076 * 16; Err = 1.00000000 * 16; time = 0.1728s; samplesPerSecond = 92.6
 Epoch[ 1 of 3]-Minibatch[  27-  27, 27.00%]: CE = 7.14053345 * 16; Err = 1.00000000 * 16; time = 0.1721s; samplesPerSecond = 93.0
 Epoch[ 1 of 3]-Minibatch[  28-  28, 28.00%]: CE = 7.08805847 * 16; Err = 1.00000000 * 16; time = 0.1730s; samplesPerSecond = 92.5
 Epoch[ 1 of 3]-Minibatch[  29-  29, 29.00%]: CE = 7.55484009 * 16; Err = 1.00000000 * 16; time = 0.1724s; samplesPerSecond = 92.8
 Epoch[ 1 of 3]-Minibatch[  30-  30, 30.00%]: CE = 7.00000000 * 16; Err = 1.00000000 * 16; time = 0.1715s; samplesPerSecond = 93.3
 Epoch[ 1 of 3]-Minibatch[  31-  31, 31.00%]: CE = 7.47801208 * 16; Err = 1.00000000 * 16; time = 0.1763s; samplesPerSecond = 90.7
 Epoch[ 1 of 3]-Minibatch[  32-  32, 32.00%]: CE = 7.38285828 * 16; Err = 1.00000000 * 16; time = 0.1758s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  33-  33, 33.00%]: CE = 7.54699707 * 16; Err = 1.00000000 * 16; time = 0.1758s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  34-  34, 34.00%]: CE = 7.50418091 * 16; Err = 1.00000000 * 16; time = 0.1756s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  35-  35, 35.00%]: CE = 7.19107056 * 16; Err = 1.00000000 * 16; time = 0.1760s; samplesPerSecond = 90.9
 Epoch[ 1 of 3]-Minibatch[  36-  36, 36.00%]: CE = 7.32565308 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  37-  37, 37.00%]: CE = 7.16943359 * 16; Err = 1.00000000 * 16; time = 0.1759s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  38-  38, 38.00%]: CE = 7.36514282 * 16; Err = 1.00000000 * 16; time = 0.1756s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  39-  39, 39.00%]: CE = 7.20544434 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  40-  40, 40.00%]: CE = 7.43762207 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  41-  41, 41.00%]: CE = 7.20257568 * 16; Err = 1.00000000 * 16; time = 0.1756s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  42-  42, 42.00%]: CE = 7.39151001 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  43-  43, 43.00%]: CE = 7.37036133 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  44-  44, 44.00%]: CE = 7.34124756 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  45-  45, 45.00%]: CE = 7.25012207 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  46-  46, 46.00%]: CE = 7.42568970 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  47-  47, 47.00%]: CE = 7.38015747 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  48-  48, 48.00%]: CE = 7.51385498 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  49-  49, 49.00%]: CE = 7.17407227 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  50-  50, 50.00%]: CE = 7.36624146 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  51-  51, 51.00%]: CE = 7.34091187 * 16; Err = 1.00000000 * 16; time = 0.1756s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  52-  52, 52.00%]: CE = 7.19442749 * 16; Err = 1.00000000 * 16; time = 0.1758s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.97274780 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  54-  54, 54.00%]: CE = 7.20913696 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  55-  55, 55.00%]: CE = 7.18731689 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  56-  56, 56.00%]: CE = 7.20901489 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  57-  57, 57.00%]: CE = 7.05572510 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  58-  58, 58.00%]: CE = 7.20855713 * 16; Err = 1.00000000 * 16; time = 0.1758s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  59-  59, 59.00%]: CE = 7.08056641 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  60-  60, 60.00%]: CE = 7.10540771 * 16; Err = 1.00000000 * 16; time = 0.1768s; samplesPerSecond = 90.5
 Epoch[ 1 of 3]-Minibatch[  61-  61, 61.00%]: CE = 7.29888916 * 16; Err = 1.00000000 * 16; time = 0.1758s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  62-  62, 62.00%]: CE = 7.19302368 * 16; Err = 1.00000000 * 16; time = 0.1762s; samplesPerSecond = 90.8
 Epoch[ 1 of 3]-Minibatch[  63-  63, 63.00%]: CE = 7.26681519 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  64-  64, 64.00%]: CE = 7.28747559 * 16; Err = 1.00000000 * 16; time = 0.1756s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  65-  65, 65.00%]: CE = 7.08926392 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  66-  66, 66.00%]: CE = 7.23986816 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.99365234 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  68-  68, 68.00%]: CE = 7.20462036 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  69-  69, 69.00%]: CE = 7.18008423 * 16; Err = 1.00000000 * 16; time = 0.1757s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  70-  70, 70.00%]: CE = 6.91906738 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  71-  71, 71.00%]: CE = 7.19134521 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  72-  72, 72.00%]: CE = 7.04144287 * 16; Err = 1.00000000 * 16; time = 0.1756s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  73-  73, 73.00%]: CE = 7.06451416 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  74-  74, 74.00%]: CE = 6.97937012 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  75-  75, 75.00%]: CE = 6.94970703 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  76-  76, 76.00%]: CE = 7.13562012 * 16; Err = 1.00000000 * 16; time = 0.1759s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  77-  77, 77.00%]: CE = 7.05871582 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  78-  78, 78.00%]: CE = 7.07757568 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  79-  79, 79.00%]: CE = 7.14605713 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  80-  80, 80.00%]: CE = 7.11730957 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  81-  81, 81.00%]: CE = 7.04663086 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  82-  82, 82.00%]: CE = 7.09362793 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  83-  83, 83.00%]: CE = 7.07611084 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  84-  84, 84.00%]: CE = 6.96923828 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  85-  85, 85.00%]: CE = 7.16876221 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  86-  86, 86.00%]: CE = 7.01593018 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  87-  87, 87.00%]: CE = 7.01959229 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  88-  88, 88.00%]: CE = 7.01251221 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  89-  89, 89.00%]: CE = 6.82592773 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  90-  90, 90.00%]: CE = 7.03112793 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  91-  91, 91.00%]: CE = 7.03259277 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  92-  92, 92.00%]: CE = 6.84112549 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  93-  93, 93.00%]: CE = 7.08691406 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.95367432 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  95-  95, 95.00%]: CE = 6.97906494 * 16; Err = 1.00000000 * 16; time = 0.1757s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  96-  96, 96.00%]: CE = 7.10369873 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  97-  97, 97.00%]: CE = 7.10723877 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  98-  98, 98.00%]: CE = 7.12268066 * 16; Err = 1.00000000 * 16; time = 0.1757s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  99-  99, 99.00%]: CE = 7.09893799 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 7.04797363 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
Finished Epoch[ 1 of 3]: [Training] CE = 7.36774170 * 1600; Err = 1.00000000 * 1600; totalSamplesSeen = 1600; learningRatePerSample = 0.00062499999; epochTime=28.7259s
SGD: Saving checkpoint model './Output/alexnet/AlexNet.1'

Starting Epoch 2: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
starting epoch 2 at record count 1600, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 2 of 3]-Minibatch[   1-   1, 1.00%]: CE = 7.16533756 * 16; Err = 1.00000000 * 16; time = 0.0400s; samplesPerSecond = 400.2
 Epoch[ 2 of 3]-Minibatch[   2-   2, 2.00%]: CE = 7.14616108 * 16; Err = 1.00000000 * 16; time = 0.0400s; samplesPerSecond = 400.1
 Epoch[ 2 of 3]-Minibatch[   3-   3, 3.00%]: CE = 6.88656807 * 16; Err = 1.00000000 * 16; time = 0.0383s; samplesPerSecond = 418.1
 Epoch[ 2 of 3]-Minibatch[   4-   4, 4.00%]: CE = 7.12307358 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.1
 Epoch[ 2 of 3]-Minibatch[   5-   5, 5.00%]: CE = 7.09390640 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[   6-   6, 6.00%]: CE = 6.96614075 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 2 of 3]-Minibatch[   7-   7, 7.00%]: CE = 7.03608704 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.8
 Epoch[ 2 of 3]-Minibatch[   8-   8, 8.00%]: CE = 6.94325256 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[   9-   9, 9.00%]: CE = 7.02606964 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  10-  10, 10.00%]: CE = 6.85174561 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.0
 Epoch[ 2 of 3]-Minibatch[  11-  11, 11.00%]: CE = 6.96588135 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 2 of 3]-Minibatch[  12-  12, 12.00%]: CE = 6.99870300 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.0
 Epoch[ 2 of 3]-Minibatch[  13-  13, 13.00%]: CE = 6.73310089 * 16; Err = 0.93750000 * 16; time = 0.0363s; samplesPerSecond = 440.6
 Epoch[ 2 of 3]-Minibatch[  14-  14, 14.00%]: CE = 6.81565857 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.9
 Epoch[ 2 of 3]-Minibatch[  15-  15, 15.00%]: CE = 6.86309814 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.3
 Epoch[ 2 of 3]-Minibatch[  16-  16, 16.00%]: CE = 7.13707733 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 2 of 3]-Minibatch[  17-  17, 17.00%]: CE = 6.95357513 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  18-  18, 18.00%]: CE = 6.96900177 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  19-  19, 19.00%]: CE = 6.96957397 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.6
 Epoch[ 2 of 3]-Minibatch[  20-  20, 20.00%]: CE = 7.04026794 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.2
 Epoch[ 2 of 3]-Minibatch[  21-  21, 21.00%]: CE = 7.02388000 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 2 of 3]-Minibatch[  22-  22, 22.00%]: CE = 7.05123901 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.3
 Epoch[ 2 of 3]-Minibatch[  23-  23, 23.00%]: CE = 6.90812683 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  24-  24, 24.00%]: CE = 6.74040222 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 2 of 3]-Minibatch[  25-  25, 25.00%]: CE = 6.95549011 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.9
 Epoch[ 2 of 3]-Minibatch[  26-  26, 26.00%]: CE = 6.97419739 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  27-  27, 27.00%]: CE = 6.85592651 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  28-  28, 28.00%]: CE = 6.83934021 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.1
 Epoch[ 2 of 3]-Minibatch[  29-  29, 29.00%]: CE = 6.94502258 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  30-  30, 30.00%]: CE = 6.79551697 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.7
 Epoch[ 2 of 3]-Minibatch[  31-  31, 31.00%]: CE = 6.91203308 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.6
 Epoch[ 2 of 3]-Minibatch[  32-  32, 32.00%]: CE = 6.73840332 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  33-  33, 33.00%]: CE = 6.94062805 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.3
 Epoch[ 2 of 3]-Minibatch[  34-  34, 34.00%]: CE = 6.86856079 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  35-  35, 35.00%]: CE = 6.84936523 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  36-  36, 36.00%]: CE = 6.80725098 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.0
 Epoch[ 2 of 3]-Minibatch[  37-  37, 37.00%]: CE = 6.89042664 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  38-  38, 38.00%]: CE = 6.77960205 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.3
 Epoch[ 2 of 3]-Minibatch[  39-  39, 39.00%]: CE = 6.85174561 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 2 of 3]-Minibatch[  40-  40, 40.00%]: CE = 6.98623657 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  41-  41, 41.00%]: CE = 6.85134888 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  42-  42, 42.00%]: CE = 6.88549805 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.5
 Epoch[ 2 of 3]-Minibatch[  43-  43, 43.00%]: CE = 7.00152588 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  44-  44, 44.00%]: CE = 6.98693848 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.3
 Epoch[ 2 of 3]-Minibatch[  45-  45, 45.00%]: CE = 6.79660034 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  46-  46, 46.00%]: CE = 6.99118042 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  47-  47, 47.00%]: CE = 6.96386719 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.5
 Epoch[ 2 of 3]-Minibatch[  48-  48, 48.00%]: CE = 7.03814697 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.2
 Epoch[ 2 of 3]-Minibatch[  49-  49, 49.00%]: CE = 6.90447998 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 2 of 3]-Minibatch[  50-  50, 50.00%]: CE = 6.93139648 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  51-  51, 51.00%]: CE = 6.91314697 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.9
 Epoch[ 2 of 3]-Minibatch[  52-  52, 52.00%]: CE = 6.83087158 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.1
 Epoch[ 2 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.59948730 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  54-  54, 54.00%]: CE = 6.92733765 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.2
 Epoch[ 2 of 3]-Minibatch[  55-  55, 55.00%]: CE = 6.87957764 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.1
 Epoch[ 2 of 3]-Minibatch[  56-  56, 56.00%]: CE = 6.87777710 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.9
 Epoch[ 2 of 3]-Minibatch[  57-  57, 57.00%]: CE = 6.82894897 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  58-  58, 58.00%]: CE = 6.91482544 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.1
 Epoch[ 2 of 3]-Minibatch[  59-  59, 59.00%]: CE = 6.78784180 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  60-  60, 60.00%]: CE = 6.83447266 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  61-  61, 61.00%]: CE = 6.90838623 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.9
 Epoch[ 2 of 3]-Minibatch[  62-  62, 62.00%]: CE = 6.82009888 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.5
 Epoch[ 2 of 3]-Minibatch[  63-  63, 63.00%]: CE = 6.91839600 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  64-  64, 64.00%]: CE = 6.96691895 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 2 of 3]-Minibatch[  65-  65, 65.00%]: CE = 6.77621460 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 2 of 3]-Minibatch[  66-  66, 66.00%]: CE = 7.04098511 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 2 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.71932983 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  68-  68, 68.00%]: CE = 6.92703247 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.6
 Epoch[ 2 of 3]-Minibatch[  69-  69, 69.00%]: CE = 6.90536499 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.6
 Epoch[ 2 of 3]-Minibatch[  70-  70, 70.00%]: CE = 6.69442749 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 2 of 3]-Minibatch[  71-  71, 71.00%]: CE = 6.93423462 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 2 of 3]-Minibatch[  72-  72, 72.00%]: CE = 6.86846924 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.6
 Epoch[ 2 of 3]-Minibatch[  73-  73, 73.00%]: CE = 6.87973022 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.5
 Epoch[ 2 of 3]-Minibatch[  74-  74, 74.00%]: CE = 6.82537842 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.8
 Epoch[ 2 of 3]-Minibatch[  75-  75, 75.00%]: CE = 6.65676880 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.5
 Epoch[ 2 of 3]-Minibatch[  76-  76, 76.00%]: CE = 6.87921143 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  77-  77, 77.00%]: CE = 6.78137207 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.3
 Epoch[ 2 of 3]-Minibatch[  78-  78, 78.00%]: CE = 6.86389160 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.3
 Epoch[ 2 of 3]-Minibatch[  79-  79, 79.00%]: CE = 6.97314453 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  80-  80, 80.00%]: CE = 6.98071289 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.6
 Epoch[ 2 of 3]-Minibatch[  81-  81, 81.00%]: CE = 6.76623535 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.3
 Epoch[ 2 of 3]-Minibatch[  82-  82, 82.00%]: CE = 6.92248535 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.2
 Epoch[ 2 of 3]-Minibatch[  83-  83, 83.00%]: CE = 6.77954102 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.8
 Epoch[ 2 of 3]-Minibatch[  84-  84, 84.00%]: CE = 6.68743896 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.3
 Epoch[ 2 of 3]-Minibatch[  85-  85, 85.00%]: CE = 6.97167969 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 2 of 3]-Minibatch[  86-  86, 86.00%]: CE = 6.82739258 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.8
 Epoch[ 2 of 3]-Minibatch[  87-  87, 87.00%]: CE = 6.88305664 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.7
 Epoch[ 2 of 3]-Minibatch[  88-  88, 88.00%]: CE = 6.86828613 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.5
 Epoch[ 2 of 3]-Minibatch[  89-  89, 89.00%]: CE = 6.59930420 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 440.0
 Epoch[ 2 of 3]-Minibatch[  90-  90, 90.00%]: CE = 6.74731445 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 441.4
 Epoch[ 2 of 3]-Minibatch[  91-  91, 91.00%]: CE = 6.92327881 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  92-  92, 92.00%]: CE = 6.77972412 * 16; Err = 1.00000000 * 16; time = 0.0361s; samplesPerSecond = 443.1
 Epoch[ 2 of 3]-Minibatch[  93-  93, 93.00%]: CE = 6.87792969 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.1
 Epoch[ 2 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.78582764 * 16; Err = 1.00000000 * 16; time = 0.0362s; samplesPerSecond = 442.0
 Epoch[ 2 of 3]-Minibatch[  95-  95, 95.00%]: CE = 6.84771729 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.7
 Epoch[ 2 of 3]-Minibatch[  96-  96, 96.00%]: CE = 6.82458496 * 16; Err = 1.00000000 * 16; time = 0.0369s; samplesPerSecond = 433.5
 Epoch[ 2 of 3]-Minibatch[  97-  97, 97.00%]: CE = 6.93200684 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.9
 Epoch[ 2 of 3]-Minibatch[  98-  98, 98.00%]: CE = 6.93371582 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 2 of 3]-Minibatch[  99-  99, 99.00%]: CE = 7.00445557 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.7
 Epoch[ 2 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 6.89471436 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
Finished Epoch[ 2 of 3]: [Training] CE = 6.89319702 * 1600; Err = 0.99937500 * 1600; totalSamplesSeen = 3200; learningRatePerSample = 0.00062499999; epochTime=3.64218s
SGD: Saving checkpoint model './Output/alexnet/AlexNet.2'

Starting Epoch 3: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
starting epoch 3 at record count 3200, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 3 of 3]-Minibatch[   1-   1, 1.00%]: CE = 6.95147419 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 437.8
 Epoch[ 3 of 3]-Minibatch[   2-   2, 2.00%]: CE = 6.98274326 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 3 of 3]-Minibatch[   3-   3, 3.00%]: CE = 6.79015732 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 437.8
 Epoch[ 3 of 3]-Minibatch[   4-   4, 4.00%]: CE = 6.91067314 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.8
 Epoch[ 3 of 3]-Minibatch[   5-   5, 5.00%]: CE = 7.02810669 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[   6-   6, 6.00%]: CE = 6.90757751 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.3
 Epoch[ 3 of 3]-Minibatch[   7-   7, 7.00%]: CE = 6.95092010 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.8
 Epoch[ 3 of 3]-Minibatch[   8-   8, 8.00%]: CE = 6.81951523 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.6
 Epoch[ 3 of 3]-Minibatch[   9-   9, 9.00%]: CE = 6.96128845 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 437.8
 Epoch[ 3 of 3]-Minibatch[  10-  10, 10.00%]: CE = 6.67472458 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.2
 Epoch[ 3 of 3]-Minibatch[  11-  11, 11.00%]: CE = 6.84805298 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 437.9
 Epoch[ 3 of 3]-Minibatch[  12-  12, 12.00%]: CE = 6.94618988 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[  13-  13, 13.00%]: CE = 6.59426880 * 16; Err = 0.93750000 * 16; time = 0.0365s; samplesPerSecond = 439.0
 Epoch[ 3 of 3]-Minibatch[  14-  14, 14.00%]: CE = 6.76258850 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.2
 Epoch[ 3 of 3]-Minibatch[  15-  15, 15.00%]: CE = 6.70645905 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.0
 Epoch[ 3 of 3]-Minibatch[  16-  16, 16.00%]: CE = 6.91249847 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.9
 Epoch[ 3 of 3]-Minibatch[  17-  17, 17.00%]: CE = 6.76828766 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[  18-  18, 18.00%]: CE = 6.90662384 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.7
 Epoch[ 3 of 3]-Minibatch[  19-  19, 19.00%]: CE = 6.81425476 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 3 of 3]-Minibatch[  20-  20, 20.00%]: CE = 6.90692139 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.1
 Epoch[ 3 of 3]-Minibatch[  21-  21, 21.00%]: CE = 6.86874390 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.8
 Epoch[ 3 of 3]-Minibatch[  22-  22, 22.00%]: CE = 6.90458679 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.0
 Epoch[ 3 of 3]-Minibatch[  23-  23, 23.00%]: CE = 6.79953003 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.5
 Epoch[ 3 of 3]-Minibatch[  24-  24, 24.00%]: CE = 6.54507446 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.4
 Epoch[ 3 of 3]-Minibatch[  25-  25, 25.00%]: CE = 6.91038513 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.8
 Epoch[ 3 of 3]-Minibatch[  26-  26, 26.00%]: CE = 6.85929871 * 16; Err = 1.00000000 * 16; time = 0.0366s; samplesPerSecond = 437.4
 Epoch[ 3 of 3]-Minibatch[  27-  27, 27.00%]: CE = 6.75364685 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 3 of 3]-Minibatch[  28-  28, 28.00%]: CE = 6.67152405 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[  29-  29, 29.00%]: CE = 6.83221436 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 3 of 3]-Minibatch[  30-  30, 30.00%]: CE = 6.67668152 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.6
 Epoch[ 3 of 3]-Minibatch[  31-  31, 31.00%]: CE = 6.65812683 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 3 of 3]-Minibatch[  32-  32, 32.00%]: CE = 6.61975098 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.5
 Epoch[ 3 of 3]-Minibatch[  33-  33, 33.00%]: CE = 6.87948608 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 3 of 3]-Minibatch[  34-  34, 34.00%]: CE = 6.70504761 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.2
 Epoch[ 3 of 3]-Minibatch[  35-  35, 35.00%]: CE = 6.70861816 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.2
 Epoch[ 3 of 3]-Minibatch[  36-  36, 36.00%]: CE = 6.61485291 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[  37-  37, 37.00%]: CE = 6.72077942 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 3 of 3]-Minibatch[  38-  38, 38.00%]: CE = 6.61535645 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.5
 Epoch[ 3 of 3]-Minibatch[  39-  39, 39.00%]: CE = 6.69076538 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.8
 Epoch[ 3 of 3]-Minibatch[  40-  40, 40.00%]: CE = 6.94711304 * 16; Err = 1.00000000 * 16; time = 0.0366s; samplesPerSecond = 436.9
 Epoch[ 3 of 3]-Minibatch[  41-  41, 41.00%]: CE = 6.67123413 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 3 of 3]-Minibatch[  42-  42, 42.00%]: CE = 6.76669312 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.4
 Epoch[ 3 of 3]-Minibatch[  43-  43, 43.00%]: CE = 6.86874390 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.7
 Epoch[ 3 of 3]-Minibatch[  44-  44, 44.00%]: CE = 6.74411011 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.0
 Epoch[ 3 of 3]-Minibatch[  45-  45, 45.00%]: CE = 6.53430176 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.6
 Epoch[ 3 of 3]-Minibatch[  46-  46, 46.00%]: CE = 6.83560181 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[  47-  47, 47.00%]: CE = 6.79949951 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.5
 Epoch[ 3 of 3]-Minibatch[  48-  48, 48.00%]: CE = 6.95950317 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.1
 Epoch[ 3 of 3]-Minibatch[  49-  49, 49.00%]: CE = 6.86254883 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.5
 Epoch[ 3 of 3]-Minibatch[  50-  50, 50.00%]: CE = 6.88293457 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 3 of 3]-Minibatch[  51-  51, 51.00%]: CE = 6.79513550 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.2
 Epoch[ 3 of 3]-Minibatch[  52-  52, 52.00%]: CE = 6.67727661 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.0
 Epoch[ 3 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.45877075 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.5
 Epoch[ 3 of 3]-Minibatch[  54-  54, 54.00%]: CE = 6.83227539 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.6
 Epoch[ 3 of 3]-Minibatch[  55-  55, 55.00%]: CE = 6.77691650 * 16; Err = 1.00000000 * 16; time = 0.0366s; samplesPerSecond = 437.4
 Epoch[ 3 of 3]-Minibatch[  56-  56, 56.00%]: CE = 6.78155518 * 16; Err = 1.00000000 * 16; time = 0.0366s; samplesPerSecond = 437.2
 Epoch[ 3 of 3]-Minibatch[  57-  57, 57.00%]: CE = 6.76202393 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 3 of 3]-Minibatch[  58-  58, 58.00%]: CE = 6.79321289 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 3 of 3]-Minibatch[  59-  59, 59.00%]: CE = 6.66174316 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.8
 Epoch[ 3 of 3]-Minibatch[  60-  60, 60.00%]: CE = 6.79003906 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[  61-  61, 61.00%]: CE = 6.82006836 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.5
 Epoch[ 3 of 3]-Minibatch[  62-  62, 62.00%]: CE = 6.79440308 * 16; Err = 1.00000000 * 16; time = 0.0366s; samplesPerSecond = 437.4
 Epoch[ 3 of 3]-Minibatch[  63-  63, 63.00%]: CE = 6.84854126 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.1
 Epoch[ 3 of 3]-Minibatch[  64-  64, 64.00%]: CE = 6.84417725 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.7
 Epoch[ 3 of 3]-Minibatch[  65-  65, 65.00%]: CE = 6.62509155 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.8
 Epoch[ 3 of 3]-Minibatch[  66-  66, 66.00%]: CE = 6.90530396 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 440.2
 Epoch[ 3 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.59307861 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 3 of 3]-Minibatch[  68-  68, 68.00%]: CE = 6.77801514 * 16; Err = 0.93750000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 3 of 3]-Minibatch[  69-  69, 69.00%]: CE = 6.83493042 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.9
 Epoch[ 3 of 3]-Minibatch[  70-  70, 70.00%]: CE = 6.65374756 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[  71-  71, 71.00%]: CE = 6.88659668 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.3
 Epoch[ 3 of 3]-Minibatch[  72-  72, 72.00%]: CE = 6.74368286 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.9
 Epoch[ 3 of 3]-Minibatch[  73-  73, 73.00%]: CE = 6.80407715 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.7
 Epoch[ 3 of 3]-Minibatch[  74-  74, 74.00%]: CE = 6.76586914 * 16; Err = 1.00000000 * 16; time = 0.0366s; samplesPerSecond = 437.6
 Epoch[ 3 of 3]-Minibatch[  75-  75, 75.00%]: CE = 6.58929443 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 3 of 3]-Minibatch[  76-  76, 76.00%]: CE = 6.76947021 * 16; Err = 1.00000000 * 16; time = 0.0366s; samplesPerSecond = 437.6
 Epoch[ 3 of 3]-Minibatch[  77-  77, 77.00%]: CE = 6.68853760 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.1
 Epoch[ 3 of 3]-Minibatch[  78-  78, 78.00%]: CE = 6.75988770 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 439.0
 Epoch[ 3 of 3]-Minibatch[  79-  79, 79.00%]: CE = 6.88299561 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.0
 Epoch[ 3 of 3]-Minibatch[  80-  80, 80.00%]: CE = 6.85443115 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.1
 Epoch[ 3 of 3]-Minibatch[  81-  81, 81.00%]: CE = 6.66497803 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.6
 Epoch[ 3 of 3]-Minibatch[  82-  82, 82.00%]: CE = 6.89050293 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 3 of 3]-Minibatch[  83-  83, 83.00%]: CE = 6.64007568 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.0
 Epoch[ 3 of 3]-Minibatch[  84-  84, 84.00%]: CE = 6.57092285 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.6
 Epoch[ 3 of 3]-Minibatch[  85-  85, 85.00%]: CE = 6.85772705 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.5
 Epoch[ 3 of 3]-Minibatch[  86-  86, 86.00%]: CE = 6.72705078 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.1
 Epoch[ 3 of 3]-Minibatch[  87-  87, 87.00%]: CE = 6.63732910 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.1
 Epoch[ 3 of 3]-Minibatch[  88-  88, 88.00%]: CE = 6.69329834 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 3 of 3]-Minibatch[  89-  89, 89.00%]: CE = 6.50225830 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.7
 Epoch[ 3 of 3]-Minibatch[  90-  90, 90.00%]: CE = 6.66326904 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
 Epoch[ 3 of 3]-Minibatch[  91-  91, 91.00%]: CE = 6.70172119 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 3 of 3]-Minibatch[  92-  92, 92.00%]: CE = 6.68402100 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.1
 Epoch[ 3 of 3]-Minibatch[  93-  93, 93.00%]: CE = 6.77362061 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.7
 Epoch[ 3 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.68060303 * 16; Err = 1.00000000 * 16; time = 0.0363s; samplesPerSecond = 441.0
 Epoch[ 3 of 3]-Minibatch[  95-  95, 95.00%]: CE = 6.66564941 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.2
 Epoch[ 3 of 3]-Minibatch[  96-  96, 96.00%]: CE = 6.67944336 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.8
 Epoch[ 3 of 3]-Minibatch[  97-  97, 97.00%]: CE = 6.85766602 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.4
 Epoch[ 3 of 3]-Minibatch[  98-  98, 98.00%]: CE = 6.84960938 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.4
 Epoch[ 3 of 3]-Minibatch[  99-  99, 99.00%]: CE = 6.90545654 * 16; Err = 1.00000000 * 16; time = 0.0365s; samplesPerSecond = 438.2
 Epoch[ 3 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 6.79235840 * 16; Err = 1.00000000 * 16; time = 0.0364s; samplesPerSecond = 439.2
Finished Epoch[ 3 of 3]: [Training] CE = 6.77258789 * 1600; Err = 0.99875000 * 1600; totalSamplesSeen = 4800; learningRatePerSample = 0.00062499999; epochTime=3.6512s
SGD: Saving checkpoint model './Output/alexnet/AlexNet'
CNTKCommandTrainEnd: Train

Action "train" complete.

__COMPLETED__
