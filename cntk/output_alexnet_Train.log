-------------------------------------------------------------------
Build info: 

		Built time: Sep 12 2016 14:39:29
		Last modified date: Mon Sep 12 13:14:36 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.1
		Build Branch: master
		Build SHA1: e33eeffb63b3d011c1b63e17b4ca4b6033c0e99b
		Built by qiwye on MSRAML-GPU04
		Build Path: /home/qiwye/git/CNTK
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12204 MB
		Device[1]: cores = 4608; computeCapability = 5.2; type = "GeForce GTX TITAN X"; memory = 12206 MB
-------------------------------------------------------------------

Running on localhost at 2016/09/12 17:35:14
Command line: 
/home/qiwye/git/CNTK/build/bin/cntk  configFile=cnn/alexnet/alexnet.cntk  configName=alexnet  deviceId=auto  minibatchSize=16  epochSize=1600  DataDir=cnn  ConfigDir=cnn/alexnet


Configuration After Processing and Variable Resolution:

configparameters: alexnet.cntk:command=Train
configparameters: alexnet.cntk:ConfigDir=cnn/alexnet
configparameters: alexnet.cntk:configName=alexnet
configparameters: alexnet.cntk:DataDir=cnn
configparameters: alexnet.cntk:deviceId=auto
configparameters: alexnet.cntk:epochSize=1600
configparameters: alexnet.cntk:imageLayout=cudnn
configparameters: alexnet.cntk:initOnCPUOnly=true
configparameters: alexnet.cntk:makeMode=false
configparameters: alexnet.cntk:maxEpochs=3
configparameters: alexnet.cntk:minibatchSize=16
configparameters: alexnet.cntk:ModelDir=./Output/alexnet
configparameters: alexnet.cntk:ndlMacros=cnn/alexnet/Macros.ndl
configparameters: alexnet.cntk:precision=float
configparameters: alexnet.cntk:stderr=./output_alexnet
configparameters: alexnet.cntk:traceLevel=1
configparameters: alexnet.cntk:Train=[
    action=train
    modelPath=./Output/alexnet/AlexNet
    NDLNetworkBuilder=[
        networkDescription=cnn/alexnet/AlexNet.ndl
    ]
    SGD=[
        epochSize=1600
        minibatchSize=16
        maxEpochs=3
        learningRatesPerMB=0.01
        momentumPerMB=0
        dropoutRate=0
	    numMBsToShowResult=1
    ]
    reader=[
        readerType=UCIFastReader
        file=cnn/imagenet_data0.5K.txt
        randomize=None
        features=[
            dim=150528
            start=1
        ]
        labels=[
            dim=1
            start=0
            labelDim=1000
            labelMappingFile=cnn/labelmap.1K.txt
        ]
    ]
]

configparameters: alexnet.cntk:WorkDir=.
Commands: Train
Precision = "float"
CNTKModelPath: ./Output/alexnet/AlexNet
CNTKCommandTrainInfo: Train : 3
CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

##############################################################################
#                                                                            #
# Action "train"                                                             #
#                                                                            #
##############################################################################

CNTKCommandTrainBegin: Train
LockDevice: Locked GPU 0 to test availability.
LockDevice: Unlocked GPU 0 after testing.
LockDevice: Locked GPU 1 to test availability.
LockDevice: Unlocked GPU 1 after testing.
LockDevice: Locked GPU 0 for exclusive use.

Creating virgin network.
NDLBuilder Using GPU 0
Node 'conv1_act.convW' (LearnableParameter operation): Initializing Parameter[96 x 363] <- 0.000000.
Node 'conv1_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 96] <- 0.000000.
Node 'conv2_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 2400] <- 0.000000.
Node 'conv2_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 0.000000.
Node 'conv3_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 2304] <- 0.000000.
Node 'conv3_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv4_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 3456] <- 0.000000.
Node 'conv4_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv5_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 3456] <- 0.000000.
Node 'conv5_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 0.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[4096 x 9216] <- 0.000000.
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[4096] <- 0.000000.
Node 'h2.W' (LearnableParameter operation): Initializing Parameter[4096 x 4096] <- 0.000000.
Node 'h2.b' (LearnableParameter operation): Initializing Parameter[4096] <- 0.000000.
Node 'OutputNodes.W' (LearnableParameter operation): Initializing Parameter[1000 x 4096] <- 0.000000.
Node 'OutputNodes.b' (LearnableParameter operation): Initializing Parameter[1000] <- 0.000000.
Node 'conv1_act.convW' (LearnableParameter operation): Initializing Parameter[96 x 363] <- gaussian(seed=1, init dims=[96 x 363], range=0.010497*0.950000, onCPU=true).
Node 'conv1_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 96] <- 0.000000.
Node 'conv2_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 2400] <- gaussian(seed=2, init dims=[256 x 2400], range=0.004082*2.000000, onCPU=true).
Node 'conv2_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 1.000000.
Node 'conv3_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 2304] <- gaussian(seed=3, init dims=[384 x 2304], range=0.004167*2.070000, onCPU=true).
Node 'conv3_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 0.000000.
Node 'conv4_act.convW' (LearnableParameter operation): Initializing Parameter[384 x 3456] <- gaussian(seed=4, init dims=[384 x 3456], range=0.003402*2.900000, onCPU=true).
Node 'conv4_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 384] <- 1.000000.
Node 'conv5_act.convW' (LearnableParameter operation): Initializing Parameter[256 x 3456] <- gaussian(seed=5, init dims=[256 x 3456], range=0.003402*2.400000, onCPU=true).
Node 'conv5_act.convB' (LearnableParameter operation): Initializing Parameter[1 x 1 x 256] <- 1.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[4096 x 9216] <- gaussian(seed=6, init dims=[4096 x 9216], range=0.002083*6.400000, onCPU=true).
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[4096] <- 1.000000.
Node 'h2.W' (LearnableParameter operation): Initializing Parameter[4096 x 4096] <- gaussian(seed=7, init dims=[4096 x 4096], range=0.003125*3.200000, onCPU=true).
Node 'h2.b' (LearnableParameter operation): Initializing Parameter[4096] <- 1.000000.
Node 'OutputNodes.W' (LearnableParameter operation): Initializing Parameter[1000 x 4096] <- gaussian(seed=8, init dims=[1000 x 4096], range=0.003125*3.200000, onCPU=true).
Node 'OutputNodes.b' (LearnableParameter operation): Initializing Parameter[1000] <- 1.000000.

Post-processing network...

3 roots:
	CE = CrossEntropyWithSoftmax()
	Err = ClassificationError()
	OutputNodes.z = Plus()

Validating network. 46 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [1000 x *]
Validating --> OutputNodes.W = LearnableParameter() :  -> [1000 x 4096]
Validating --> h2.W = LearnableParameter() :  -> [4096 x 4096]
Validating --> h1.W = LearnableParameter() :  -> [4096 x 9216]
Validating --> conv5_act.convW = LearnableParameter() :  -> [256 x 3456]
Validating --> conv4_act.convW = LearnableParameter() :  -> [384 x 3456]
Validating --> conv3_act.convW = LearnableParameter() :  -> [384 x 2304]
Validating --> conv2_act.convW = LearnableParameter() :  -> [256 x 2400]
Validating --> conv1_act.convW = LearnableParameter() :  -> [96 x 363]
Validating --> features = InputValue() :  -> [224 x 224 x 3 x *]
Validating --> conv1_act.conv = Convolution (conv1_act.convW, features) : [96 x 363], [224 x 224 x 3 x *] -> [56 x 56 x 96 x *]
Validating --> conv1_act.convB = LearnableParameter() :  -> [1 x 1 x 96]
Validating --> conv1_act.convPlusB = Plus (conv1_act.conv, conv1_act.convB) : [56 x 56 x 96 x *], [1 x 1 x 96] -> [56 x 56 x 96 x *]
Validating --> conv1_act.act = RectifiedLinear (conv1_act.convPlusB) : [56 x 56 x 96 x *] -> [56 x 56 x 96 x *]
Validating --> pool1 = MaxPooling (conv1_act.act) : [56 x 56 x 96 x *] -> [27 x 27 x 96 x *]
Validating --> conv2_act.conv = Convolution (conv2_act.convW, pool1) : [256 x 2400], [27 x 27 x 96 x *] -> [27 x 27 x 256 x *]
Validating --> conv2_act.convB = LearnableParameter() :  -> [1 x 1 x 256]
Validating --> conv2_act.convPlusB = Plus (conv2_act.conv, conv2_act.convB) : [27 x 27 x 256 x *], [1 x 1 x 256] -> [27 x 27 x 256 x *]
Validating --> conv2_act.act = RectifiedLinear (conv2_act.convPlusB) : [27 x 27 x 256 x *] -> [27 x 27 x 256 x *]
Validating --> pool2 = MaxPooling (conv2_act.act) : [27 x 27 x 256 x *] -> [13 x 13 x 256 x *]
Validating --> conv3_act.conv = Convolution (conv3_act.convW, pool2) : [384 x 2304], [13 x 13 x 256 x *] -> [13 x 13 x 384 x *]
Validating --> conv3_act.convB = LearnableParameter() :  -> [1 x 1 x 384]
Validating --> conv3_act.convPlusB = Plus (conv3_act.conv, conv3_act.convB) : [13 x 13 x 384 x *], [1 x 1 x 384] -> [13 x 13 x 384 x *]
Validating --> conv3_act.act = RectifiedLinear (conv3_act.convPlusB) : [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv4_act.conv = Convolution (conv4_act.convW, conv3_act.act) : [384 x 3456], [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv4_act.convB = LearnableParameter() :  -> [1 x 1 x 384]
Validating --> conv4_act.convPlusB = Plus (conv4_act.conv, conv4_act.convB) : [13 x 13 x 384 x *], [1 x 1 x 384] -> [13 x 13 x 384 x *]
Validating --> conv4_act.act = RectifiedLinear (conv4_act.convPlusB) : [13 x 13 x 384 x *] -> [13 x 13 x 384 x *]
Validating --> conv5_act.conv = Convolution (conv5_act.convW, conv4_act.act) : [256 x 3456], [13 x 13 x 384 x *] -> [13 x 13 x 256 x *]
Validating --> conv5_act.convB = LearnableParameter() :  -> [1 x 1 x 256]
Validating --> conv5_act.convPlusB = Plus (conv5_act.conv, conv5_act.convB) : [13 x 13 x 256 x *], [1 x 1 x 256] -> [13 x 13 x 256 x *]
Validating --> conv5_act.act = RectifiedLinear (conv5_act.convPlusB) : [13 x 13 x 256 x *] -> [13 x 13 x 256 x *]
Validating --> pool3 = MaxPooling (conv5_act.act) : [13 x 13 x 256 x *] -> [6 x 6 x 256 x *]

h1.t Times operation: For legacy compatibility, the sample layout of left input (h1.W LearnableParameter operation) was patched to [4096 x 6 x 6 x 256] (from [4096 x 9216])
Validating --> h1.t = Times (h1.W, pool3) : [4096 x 6 x 6 x 256], [6 x 6 x 256 x *] -> [4096 x *]
Validating --> h1.b = LearnableParameter() :  -> [4096]
Validating --> h1.z = Plus (h1.t, h1.b) : [4096 x *], [4096] -> [4096 x *]
Validating --> h1.y = RectifiedLinear (h1.z) : [4096 x *] -> [4096 x *]
Validating --> h2.t = Times (h2.W, h1.y) : [4096 x 4096], [4096 x *] -> [4096 x *]
Validating --> h2.b = LearnableParameter() :  -> [4096]
Validating --> h2.z = Plus (h2.t, h2.b) : [4096 x *], [4096] -> [4096 x *]
Validating --> h2.y = RectifiedLinear (h2.z) : [4096 x *] -> [4096 x *]
Validating --> OutputNodes.t = Times (OutputNodes.W, h2.y) : [1000 x 4096], [4096 x *] -> [1000 x *]
Validating --> OutputNodes.b = LearnableParameter() :  -> [1000]
Validating --> OutputNodes.z = Plus (OutputNodes.t, OutputNodes.b) : [1000 x *], [1000] -> [1000 x *]
Validating --> CE = CrossEntropyWithSoftmax (labels, OutputNodes.z) : [1000 x *], [1000 x *] -> [1]
Validating --> Err = ClassificationError (labels, OutputNodes.z) : [1000 x *], [1000 x *] -> [1]

Validating network. 28 nodes to process in pass 2.


Validating network, final pass.

conv1_act.conv: using cuDNN convolution engine for geometry: Input: 224 x 224 x 3, Output: 56 x 56 x 96, Kernel: 11 x 11 x 3, Map: 1 x 1 x 96, Stride: 4 x 4 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool1: using cuDNN convolution engine for geometry: Input: 56 x 56 x 96, Output: 27 x 27 x 96, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv2_act.conv: using cuDNN convolution engine for geometry: Input: 27 x 27 x 96, Output: 27 x 27 x 256, Kernel: 5 x 5 x 96, Map: 1 x 1 x 256, Stride: 1 x 1 x 96, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool2: using cuDNN convolution engine for geometry: Input: 27 x 27 x 256, Output: 13 x 13 x 256, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv3_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 256, Output: 13 x 13 x 384, Kernel: 3 x 3 x 256, Map: 1 x 1 x 384, Stride: 1 x 1 x 256, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
conv4_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 384, Output: 13 x 13 x 384, Kernel: 3 x 3 x 384, Map: 1 x 1 x 384, Stride: 1 x 1 x 384, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
conv5_act.conv: using cuDNN convolution engine for geometry: Input: 13 x 13 x 384, Output: 13 x 13 x 256, Kernel: 3 x 3 x 384, Map: 1 x 1 x 256, Stride: 1 x 1 x 384, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
pool3: using cuDNN convolution engine for geometry: Input: 13 x 13 x 256, Output: 6 x 6 x 256, Kernel: 3 x 3 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.


18 out of 46 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

********** DEPRECATED **********
UCIFastReader is no longer actively maintained.
It is known to have defects, proceed with caution (better yet, switch to CNTKTextFormatReader)!
For more details please see https://github.com/Microsoft/CNTK/wiki 
Reading UCI file cnn/imagenet_data0.5K.txt
Created model with 46 nodes on GPU 0.

Training criterion node(s):
	CE = CrossEntropyWithSoftmax

Evaluation criterion node(s):
	Err = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 89 matrices, 60 are shared as 26, and 29 are not shared.

	{ conv2_act.act : [27 x 27 x 256 x *]
	  conv2_act.conv : [27 x 27 x 256 x *] (gradient) }
	{ conv2_act.convPlusB : [27 x 27 x 256 x *] (gradient)
	  pool1 : [27 x 27 x 96 x *] (gradient)
	  pool2 : [13 x 13 x 256 x *] }
	{ conv2_act.act : [27 x 27 x 256 x *] (gradient)
	  conv2_act.convB : [1 x 1 x 256] (gradient) }
	{ conv3_act.convPlusB : [13 x 13 x 384 x *]
	  conv3_act.convW : [384 x 2304] (gradient) }
	{ conv3_act.act : [13 x 13 x 384 x *]
	  conv3_act.conv : [13 x 13 x 384 x *] (gradient) }
	{ conv3_act.convPlusB : [13 x 13 x 384 x *] (gradient)
	  pool2 : [13 x 13 x 256 x *] (gradient) }
	{ conv4_act.convPlusB : [13 x 13 x 384 x *]
	  conv4_act.convW : [384 x 3456] (gradient) }
	{ conv4_act.act : [13 x 13 x 384 x *]
	  conv4_act.conv : [13 x 13 x 384 x *] (gradient) }
	{ conv3_act.act : [13 x 13 x 384 x *] (gradient)
	  conv3_act.convB : [1 x 1 x 384] (gradient)
	  conv4_act.convPlusB : [13 x 13 x 384 x *] (gradient) }
	{ conv5_act.convPlusB : [13 x 13 x 256 x *]
	  conv5_act.convW : [256 x 3456] (gradient) }
	{ conv5_act.act : [13 x 13 x 256 x *]
	  conv5_act.conv : [13 x 13 x 256 x *] (gradient) }
	{ conv4_act.act : [13 x 13 x 384 x *] (gradient)
	  conv4_act.convB : [1 x 1 x 384] (gradient)
	  conv5_act.convPlusB : [13 x 13 x 256 x *] (gradient)
	  pool3 : [6 x 6 x 256 x *] }
	{ conv5_act.act : [13 x 13 x 256 x *] (gradient)
	  conv5_act.convB : [1 x 1 x 256] (gradient)
	  h1.t : [4096 x *] }
	{ h1.W : [4096 x 6 x 6 x 256] (gradient)
	  h1.z : [4096 x *] }
	{ h1.t : [4096 x *] (gradient)
	  h1.y : [4096 x *] }
	{ h1.z : [4096 x *] (gradient)
	  h2.t : [4096 x *]
	  pool3 : [6 x 6 x 256 x *] (gradient) }
	{ h2.W : [4096 x 4096] (gradient)
	  h2.z : [4096 x *] }
	{ h2.t : [4096 x *] (gradient)
	  h2.y : [4096 x *] }
	{ OutputNodes.t : [1000 x *]
	  h1.b : [4096] (gradient)
	  h1.y : [4096 x *] (gradient)
	  h2.z : [4096 x *] (gradient) }
	{ OutputNodes.W : [1000 x 4096] (gradient)
	  OutputNodes.z : [1000 x *] (gradient) }
	{ h2.b : [4096] (gradient)
	  h2.y : [4096 x *] (gradient) }
	{ conv1_act.act : [56 x 56 x 96 x *]
	  conv1_act.conv : [56 x 56 x 96 x *] (gradient) }
	{ conv1_act.convPlusB : [56 x 56 x 96 x *]
	  conv1_act.convW : [96 x 363] (gradient) }
	{ conv1_act.convPlusB : [56 x 56 x 96 x *] (gradient)
	  pool1 : [27 x 27 x 96 x *] }
	{ conv1_act.act : [56 x 56 x 96 x *] (gradient)
	  conv1_act.convB : [1 x 1 x 96] (gradient) }
	{ conv2_act.convPlusB : [27 x 27 x 256 x *]
	  conv2_act.convW : [256 x 2400] (gradient) }


Training 62378344 parameters in 16 out of 16 parameter tensors and 43 nodes with gradient:

	Node 'OutputNodes.W' (LearnableParameter operation) : [1000 x 4096]
	Node 'OutputNodes.b' (LearnableParameter operation) : [1000]
	Node 'conv1_act.convB' (LearnableParameter operation) : [1 x 1 x 96]
	Node 'conv1_act.convW' (LearnableParameter operation) : [96 x 363]
	Node 'conv2_act.convB' (LearnableParameter operation) : [1 x 1 x 256]
	Node 'conv2_act.convW' (LearnableParameter operation) : [256 x 2400]
	Node 'conv3_act.convB' (LearnableParameter operation) : [1 x 1 x 384]
	Node 'conv3_act.convW' (LearnableParameter operation) : [384 x 2304]
	Node 'conv4_act.convB' (LearnableParameter operation) : [1 x 1 x 384]
	Node 'conv4_act.convW' (LearnableParameter operation) : [384 x 3456]
	Node 'conv5_act.convB' (LearnableParameter operation) : [1 x 1 x 256]
	Node 'conv5_act.convW' (LearnableParameter operation) : [256 x 3456]
	Node 'h1.W' (LearnableParameter operation) : [4096 x 6 x 6 x 256]
	Node 'h1.b' (LearnableParameter operation) : [4096]
	Node 'h2.W' (LearnableParameter operation) : [4096 x 4096]
	Node 'h2.b' (LearnableParameter operation) : [4096]

No PreCompute nodes found, or all already computed. Skipping pre-computation step.

Starting Epoch 1: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 512 records found.
starting epoch 1 at record count 0, and file position 0
already there from last epoch

Starting minibatch loop.
 Epoch[ 1 of 3]-Minibatch[   1-   1, 1.00%]: CE = 7.29481983 * 16; Err = 1.00000000 * 16; time = 0.5238s; samplesPerSecond = 30.5
 Epoch[ 1 of 3]-Minibatch[   2-   2, 2.00%]: CE = 11.98858166 * 16; Err = 1.00000000 * 16; time = 0.2612s; samplesPerSecond = 61.2
 Epoch[ 1 of 3]-Minibatch[   3-   3, 3.00%]: CE = 9.77227020 * 16; Err = 1.00000000 * 16; time = 0.1983s; samplesPerSecond = 80.7
 Epoch[ 1 of 3]-Minibatch[   4-   4, 4.00%]: CE = 8.22846603 * 16; Err = 1.00000000 * 16; time = 0.1980s; samplesPerSecond = 80.8
 Epoch[ 1 of 3]-Minibatch[   5-   5, 5.00%]: CE = 8.39915085 * 16; Err = 1.00000000 * 16; time = 0.1941s; samplesPerSecond = 82.4
 Epoch[ 1 of 3]-Minibatch[   6-   6, 6.00%]: CE = 8.05870438 * 16; Err = 0.93750000 * 16; time = 0.1981s; samplesPerSecond = 80.8
 Epoch[ 1 of 3]-Minibatch[   7-   7, 7.00%]: CE = 7.65534592 * 16; Err = 1.00000000 * 16; time = 0.1804s; samplesPerSecond = 88.7
 Epoch[ 1 of 3]-Minibatch[   8-   8, 8.00%]: CE = 7.62928772 * 16; Err = 1.00000000 * 16; time = 0.1778s; samplesPerSecond = 90.0
 Epoch[ 1 of 3]-Minibatch[   9-   9, 9.00%]: CE = 7.82324219 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  10-  10, 10.00%]: CE = 7.68637085 * 16; Err = 1.00000000 * 16; time = 0.1737s; samplesPerSecond = 92.1
 Epoch[ 1 of 3]-Minibatch[  11-  11, 11.00%]: CE = 7.59199524 * 16; Err = 1.00000000 * 16; time = 0.1713s; samplesPerSecond = 93.4
 Epoch[ 1 of 3]-Minibatch[  12-  12, 12.00%]: CE = 7.31658936 * 16; Err = 1.00000000 * 16; time = 0.1715s; samplesPerSecond = 93.3
 Epoch[ 1 of 3]-Minibatch[  13-  13, 13.00%]: CE = 7.76396179 * 16; Err = 1.00000000 * 16; time = 0.1715s; samplesPerSecond = 93.3
 Epoch[ 1 of 3]-Minibatch[  14-  14, 14.00%]: CE = 7.69917297 * 16; Err = 1.00000000 * 16; time = 0.1713s; samplesPerSecond = 93.4
 Epoch[ 1 of 3]-Minibatch[  15-  15, 15.00%]: CE = 7.22122955 * 16; Err = 1.00000000 * 16; time = 0.1713s; samplesPerSecond = 93.4
 Epoch[ 1 of 3]-Minibatch[  16-  16, 16.00%]: CE = 7.27887726 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  17-  17, 17.00%]: CE = 8.45187378 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 1 of 3]-Minibatch[  18-  18, 18.00%]: CE = 7.38256836 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  19-  19, 19.00%]: CE = 6.89834595 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  20-  20, 20.00%]: CE = 7.49378967 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  21-  21, 21.00%]: CE = 7.37358093 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  22-  22, 22.00%]: CE = 7.35855103 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  23-  23, 23.00%]: CE = 7.44642639 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  24-  24, 24.00%]: CE = 7.81665039 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  25-  25, 25.00%]: CE = 7.66906738 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  26-  26, 26.00%]: CE = 7.26239014 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  27-  27, 27.00%]: CE = 7.52812195 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  28-  28, 28.00%]: CE = 7.51078796 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  29-  29, 29.00%]: CE = 7.35745239 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  30-  30, 30.00%]: CE = 7.48506165 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  31-  31, 31.00%]: CE = 7.06864929 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  32-  32, 32.00%]: CE = 7.55001831 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  33-  33, 33.00%]: CE = 7.36080933 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  34-  34, 34.00%]: CE = 7.55328369 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  35-  35, 35.00%]: CE = 7.04486084 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  36-  36, 36.00%]: CE = 7.32928467 * 16; Err = 1.00000000 * 16; time = 0.1758s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  37-  37, 37.00%]: CE = 8.29998779 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  38-  38, 38.00%]: CE = 7.50784302 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  39-  39, 39.00%]: CE = 7.02612305 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  40-  40, 40.00%]: CE = 7.06765747 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  41-  41, 41.00%]: CE = 7.05236816 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  42-  42, 42.00%]: CE = 6.68832397 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  43-  43, 43.00%]: CE = 7.39324951 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  44-  44, 44.00%]: CE = 6.85107422 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  45-  45, 45.00%]: CE = 6.81185913 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  46-  46, 46.00%]: CE = 6.64526367 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  47-  47, 47.00%]: CE = 6.74978638 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  48-  48, 48.00%]: CE = 7.70776367 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  49-  49, 49.00%]: CE = 6.92132568 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  50-  50, 50.00%]: CE = 6.86975098 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  51-  51, 51.00%]: CE = 6.58786011 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  52-  52, 52.00%]: CE = 6.81002808 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.89910889 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  54-  54, 54.00%]: CE = 6.89877319 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  55-  55, 55.00%]: CE = 6.84649658 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  56-  56, 56.00%]: CE = 7.06356812 * 16; Err = 1.00000000 * 16; time = 0.1757s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  57-  57, 57.00%]: CE = 7.03903198 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  58-  58, 58.00%]: CE = 6.73944092 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  59-  59, 59.00%]: CE = 6.87875366 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  60-  60, 60.00%]: CE = 6.85128784 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  61-  61, 61.00%]: CE = 6.92422485 * 16; Err = 1.00000000 * 16; time = 0.1758s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[  62-  62, 62.00%]: CE = 6.95120239 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  63-  63, 63.00%]: CE = 6.63595581 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  64-  64, 64.00%]: CE = 6.94766235 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  65-  65, 65.00%]: CE = 6.68246460 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  66-  66, 66.00%]: CE = 6.86724854 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.74621582 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  68-  68, 68.00%]: CE = 6.73995972 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  69-  69, 69.00%]: CE = 7.22317505 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  70-  70, 70.00%]: CE = 6.91217041 * 16; Err = 1.00000000 * 16; time = 0.1760s; samplesPerSecond = 90.9
 Epoch[ 1 of 3]-Minibatch[  71-  71, 71.00%]: CE = 6.61804199 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  72-  72, 72.00%]: CE = 6.66180420 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  73-  73, 73.00%]: CE = 6.69018555 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  74-  74, 74.00%]: CE = 6.46795654 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  75-  75, 75.00%]: CE = 6.79846191 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  76-  76, 76.00%]: CE = 6.47808838 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  77-  77, 77.00%]: CE = 6.66857910 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  78-  78, 78.00%]: CE = 6.52484131 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  79-  79, 79.00%]: CE = 6.64257812 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  80-  80, 80.00%]: CE = 6.86877441 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  81-  81, 81.00%]: CE = 6.84460449 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  82-  82, 82.00%]: CE = 6.66967773 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  83-  83, 83.00%]: CE = 6.46954346 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  84-  84, 84.00%]: CE = 6.63385010 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  85-  85, 85.00%]: CE = 6.68005371 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  86-  86, 86.00%]: CE = 6.68939209 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 1 of 3]-Minibatch[  87-  87, 87.00%]: CE = 6.72540283 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  88-  88, 88.00%]: CE = 6.83496094 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 1 of 3]-Minibatch[  89-  89, 89.00%]: CE = 6.76306152 * 16; Err = 1.00000000 * 16; time = 0.1760s; samplesPerSecond = 90.9
 Epoch[ 1 of 3]-Minibatch[  90-  90, 90.00%]: CE = 6.49487305 * 16; Err = 1.00000000 * 16; time = 0.1760s; samplesPerSecond = 90.9
 Epoch[ 1 of 3]-Minibatch[  91-  91, 91.00%]: CE = 6.64428711 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  92-  92, 92.00%]: CE = 6.51867676 * 16; Err = 1.00000000 * 16; time = 0.1767s; samplesPerSecond = 90.6
 Epoch[ 1 of 3]-Minibatch[  93-  93, 93.00%]: CE = 6.64361572 * 16; Err = 1.00000000 * 16; time = 0.1757s; samplesPerSecond = 91.1
 Epoch[ 1 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.64770508 * 16; Err = 1.00000000 * 16; time = 0.1760s; samplesPerSecond = 90.9
 Epoch[ 1 of 3]-Minibatch[  95-  95, 95.00%]: CE = 6.45922852 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  96-  96, 96.00%]: CE = 6.70928955 * 16; Err = 1.00000000 * 16; time = 0.1754s; samplesPerSecond = 91.2
 Epoch[ 1 of 3]-Minibatch[  97-  97, 97.00%]: CE = 6.42962646 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 1 of 3]-Minibatch[  98-  98, 98.00%]: CE = 6.68707275 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 1 of 3]-Minibatch[  99-  99, 99.00%]: CE = 6.71142578 * 16; Err = 1.00000000 * 16; time = 0.1759s; samplesPerSecond = 91.0
 Epoch[ 1 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 6.69549561 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
Finished Epoch[ 1 of 3]: [Training] CE = 7.14557800 * 1600; Err = 0.99937500 * 1600; totalSamplesSeen = 1600; learningRatePerSample = 0.00062499999; epochTime=21.2012s
SGD: Saving checkpoint model './Output/alexnet/AlexNet.1'

Starting Epoch 2: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
starting epoch 2 at record count 1600, and file position 64
already there from last epoch

Starting minibatch loop.
 Epoch[ 2 of 3]-Minibatch[   1-   1, 1.00%]: CE = 6.92723751 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[   2-   2, 2.00%]: CE = 6.82277012 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[   3-   3, 3.00%]: CE = 6.56084824 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[   4-   4, 4.00%]: CE = 6.62180710 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[   5-   5, 5.00%]: CE = 6.57897186 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[   6-   6, 6.00%]: CE = 6.27957916 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 2 of 3]-Minibatch[   7-   7, 7.00%]: CE = 6.52640915 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[   8-   8, 8.00%]: CE = 6.25253296 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[   9-   9, 9.00%]: CE = 6.44960785 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  10-  10, 10.00%]: CE = 6.33163071 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  11-  11, 11.00%]: CE = 6.48730469 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  12-  12, 12.00%]: CE = 6.49726105 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  13-  13, 13.00%]: CE = 6.78511810 * 16; Err = 1.00000000 * 16; time = 0.1739s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  14-  14, 14.00%]: CE = 6.62036133 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  15-  15, 15.00%]: CE = 6.36587524 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  16-  16, 16.00%]: CE = 6.51214600 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  17-  17, 17.00%]: CE = 6.60974121 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  18-  18, 18.00%]: CE = 6.55242920 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  19-  19, 19.00%]: CE = 6.62041473 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 2 of 3]-Minibatch[  20-  20, 20.00%]: CE = 6.69951630 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 2 of 3]-Minibatch[  21-  21, 21.00%]: CE = 6.65284729 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  22-  22, 22.00%]: CE = 6.43196106 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 2 of 3]-Minibatch[  23-  23, 23.00%]: CE = 6.58921814 * 16; Err = 1.00000000 * 16; time = 0.1739s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  24-  24, 24.00%]: CE = 6.50866699 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  25-  25, 25.00%]: CE = 6.63310242 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  26-  26, 26.00%]: CE = 6.62915039 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  27-  27, 27.00%]: CE = 6.35464478 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  28-  28, 28.00%]: CE = 6.59896851 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  29-  29, 29.00%]: CE = 6.29820251 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 2 of 3]-Minibatch[  30-  30, 30.00%]: CE = 6.50621033 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  31-  31, 31.00%]: CE = 6.58003235 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  32-  32, 32.00%]: CE = 6.46324158 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  33-  33, 33.00%]: CE = 6.59454346 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 2 of 3]-Minibatch[  34-  34, 34.00%]: CE = 6.61924744 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 2 of 3]-Minibatch[  35-  35, 35.00%]: CE = 6.53147888 * 16; Err = 1.00000000 * 16; time = 0.1756s; samplesPerSecond = 91.1
 Epoch[ 2 of 3]-Minibatch[  36-  36, 36.00%]: CE = 6.63259888 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  37-  37, 37.00%]: CE = 6.62965393 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  38-  38, 38.00%]: CE = 6.29804993 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 2 of 3]-Minibatch[  39-  39, 39.00%]: CE = 6.47042847 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  40-  40, 40.00%]: CE = 6.24392700 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  41-  41, 41.00%]: CE = 6.42498779 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  42-  42, 42.00%]: CE = 6.27581787 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 2 of 3]-Minibatch[  43-  43, 43.00%]: CE = 6.37149048 * 16; Err = 1.00000000 * 16; time = 0.1739s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  44-  44, 44.00%]: CE = 6.44003296 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  45-  45, 45.00%]: CE = 6.64462280 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  46-  46, 46.00%]: CE = 6.54089355 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  47-  47, 47.00%]: CE = 6.29702759 * 16; Err = 1.00000000 * 16; time = 0.1739s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  48-  48, 48.00%]: CE = 6.39193726 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  49-  49, 49.00%]: CE = 6.53051758 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  50-  50, 50.00%]: CE = 6.47671509 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  51-  51, 51.00%]: CE = 6.61965942 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  52-  52, 52.00%]: CE = 6.69506836 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.62713623 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  54-  54, 54.00%]: CE = 6.39880371 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 2 of 3]-Minibatch[  55-  55, 55.00%]: CE = 6.56527710 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  56-  56, 56.00%]: CE = 6.47338867 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  57-  57, 57.00%]: CE = 6.55694580 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  58-  58, 58.00%]: CE = 6.53918457 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 2 of 3]-Minibatch[  59-  59, 59.00%]: CE = 6.24258423 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  60-  60, 60.00%]: CE = 6.53750610 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  61-  61, 61.00%]: CE = 6.18627930 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.2
 Epoch[ 2 of 3]-Minibatch[  62-  62, 62.00%]: CE = 6.36941528 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  63-  63, 63.00%]: CE = 6.49343872 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  64-  64, 64.00%]: CE = 6.36050415 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 2 of 3]-Minibatch[  65-  65, 65.00%]: CE = 6.41873169 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  66-  66, 66.00%]: CE = 6.50158691 * 16; Err = 0.93750000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.43966675 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  68-  68, 68.00%]: CE = 6.54739380 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  69-  69, 69.00%]: CE = 6.59899902 * 16; Err = 1.00000000 * 16; time = 0.1739s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  70-  70, 70.00%]: CE = 6.25552368 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  71-  71, 71.00%]: CE = 6.46884155 * 16; Err = 1.00000000 * 16; time = 0.1739s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  72-  72, 72.00%]: CE = 6.24685669 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  73-  73, 73.00%]: CE = 6.42437744 * 16; Err = 1.00000000 * 16; time = 0.1739s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  74-  74, 74.00%]: CE = 6.20443726 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  75-  75, 75.00%]: CE = 6.31527710 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  76-  76, 76.00%]: CE = 6.34594727 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  77-  77, 77.00%]: CE = 6.54559326 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  78-  78, 78.00%]: CE = 6.51504517 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  79-  79, 79.00%]: CE = 6.26055908 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  80-  80, 80.00%]: CE = 6.37176514 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  81-  81, 81.00%]: CE = 6.54370117 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  82-  82, 82.00%]: CE = 6.49987793 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 2 of 3]-Minibatch[  83-  83, 83.00%]: CE = 6.66448975 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 92.0
 Epoch[ 2 of 3]-Minibatch[  84-  84, 84.00%]: CE = 6.72949219 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  85-  85, 85.00%]: CE = 6.64562988 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  86-  86, 86.00%]: CE = 6.41925049 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 2 of 3]-Minibatch[  87-  87, 87.00%]: CE = 6.49334717 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  88-  88, 88.00%]: CE = 6.39117432 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  89-  89, 89.00%]: CE = 6.43103027 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  90-  90, 90.00%]: CE = 6.46612549 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  91-  91, 91.00%]: CE = 6.18395996 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  92-  92, 92.00%]: CE = 6.47119141 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  93-  93, 93.00%]: CE = 6.14575195 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.8
 Epoch[ 2 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.36743164 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 2 of 3]-Minibatch[  95-  95, 95.00%]: CE = 6.45703125 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 2 of 3]-Minibatch[  96-  96, 96.00%]: CE = 6.39770508 * 16; Err = 1.00000000 * 16; time = 0.1772s; samplesPerSecond = 90.3
 Epoch[ 2 of 3]-Minibatch[  97-  97, 97.00%]: CE = 6.39227295 * 16; Err = 1.00000000 * 16; time = 0.1765s; samplesPerSecond = 90.7
 Epoch[ 2 of 3]-Minibatch[  98-  98, 98.00%]: CE = 6.51397705 * 16; Err = 0.93750000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 2 of 3]-Minibatch[  99-  99, 99.00%]: CE = 6.38195801 * 16; Err = 1.00000000 * 16; time = 0.1755s; samplesPerSecond = 91.2
 Epoch[ 2 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 6.45263672 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
Finished Epoch[ 2 of 3]: [Training] CE = 6.47935608 * 1600; Err = 0.99875000 * 1600; totalSamplesSeen = 3200; learningRatePerSample = 0.00062499999; epochTime=17.4489s
SGD: Saving checkpoint model './Output/alexnet/AlexNet.2'

Starting Epoch 3: learning rate per sample = 0.000625  effective momentum = 0.000000  momentum as time constant = 0.0 samples
starting epoch 3 at record count 3200, and file position 128
already there from last epoch

Starting minibatch loop.
 Epoch[ 3 of 3]-Minibatch[   1-   1, 1.00%]: CE = 6.44764519 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[   2-   2, 2.00%]: CE = 6.13159561 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[   3-   3, 3.00%]: CE = 6.30871010 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[   4-   4, 4.00%]: CE = 6.11569977 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[   5-   5, 5.00%]: CE = 6.38107872 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[   6-   6, 6.00%]: CE = 6.17762947 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[   7-   7, 7.00%]: CE = 6.35047913 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[   8-   8, 8.00%]: CE = 6.36403275 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[   9-   9, 9.00%]: CE = 6.59944916 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  10-  10, 10.00%]: CE = 6.50305176 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  11-  11, 11.00%]: CE = 6.25670624 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  12-  12, 12.00%]: CE = 6.33455658 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  13-  13, 13.00%]: CE = 6.42123413 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  14-  14, 14.00%]: CE = 6.45233917 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  15-  15, 15.00%]: CE = 6.52949524 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  16-  16, 16.00%]: CE = 6.58823395 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  17-  17, 17.00%]: CE = 6.61757660 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  18-  18, 18.00%]: CE = 6.32276154 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  19-  19, 19.00%]: CE = 6.43185425 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  20-  20, 20.00%]: CE = 6.42013550 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  21-  21, 21.00%]: CE = 6.43874359 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  22-  22, 22.00%]: CE = 6.42126465 * 16; Err = 1.00000000 * 16; time = 0.1751s; samplesPerSecond = 91.4
 Epoch[ 3 of 3]-Minibatch[  23-  23, 23.00%]: CE = 6.13461304 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  24-  24, 24.00%]: CE = 6.43057251 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  25-  25, 25.00%]: CE = 6.11570740 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  26-  26, 26.00%]: CE = 6.29797363 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  27-  27, 27.00%]: CE = 6.38662720 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 3 of 3]-Minibatch[  28-  28, 28.00%]: CE = 6.28921509 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  29-  29, 29.00%]: CE = 6.32742310 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  30-  30, 30.00%]: CE = 6.56520081 * 16; Err = 0.93750000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  31-  31, 31.00%]: CE = 6.46327209 * 16; Err = 1.00000000 * 16; time = 0.1753s; samplesPerSecond = 91.3
 Epoch[ 3 of 3]-Minibatch[  32-  32, 32.00%]: CE = 6.57255554 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  33-  33, 33.00%]: CE = 6.52569580 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  34-  34, 34.00%]: CE = 6.16711426 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 3 of 3]-Minibatch[  35-  35, 35.00%]: CE = 6.34213257 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  36-  36, 36.00%]: CE = 6.10897827 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  37-  37, 37.00%]: CE = 6.37367249 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  38-  38, 38.00%]: CE = 6.16143799 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  39-  39, 39.00%]: CE = 6.28810120 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  40-  40, 40.00%]: CE = 6.31367493 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  41-  41, 41.00%]: CE = 6.54321289 * 16; Err = 1.00000000 * 16; time = 0.1740s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  42-  42, 42.00%]: CE = 6.39160156 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  43-  43, 43.00%]: CE = 6.16217041 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  44-  44, 44.00%]: CE = 6.25033569 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.5
 Epoch[ 3 of 3]-Minibatch[  45-  45, 45.00%]: CE = 6.32757568 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  46-  46, 46.00%]: CE = 6.33691406 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  47-  47, 47.00%]: CE = 6.43453979 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  48-  48, 48.00%]: CE = 6.55422974 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  49-  49, 49.00%]: CE = 6.66394043 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  50-  50, 50.00%]: CE = 6.31793213 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  51-  51, 51.00%]: CE = 6.43951416 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  52-  52, 52.00%]: CE = 6.43670654 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  53-  53, 53.00%]: CE = 6.44479370 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  54-  54, 54.00%]: CE = 6.45693970 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  55-  55, 55.00%]: CE = 6.20205688 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  56-  56, 56.00%]: CE = 6.47180176 * 16; Err = 1.00000000 * 16; time = 0.1771s; samplesPerSecond = 90.4
 Epoch[ 3 of 3]-Minibatch[  57-  57, 57.00%]: CE = 6.13244629 * 16; Err = 1.00000000 * 16; time = 0.1780s; samplesPerSecond = 89.9
 Epoch[ 3 of 3]-Minibatch[  58-  58, 58.00%]: CE = 6.34472656 * 16; Err = 1.00000000 * 16; time = 0.1772s; samplesPerSecond = 90.3
 Epoch[ 3 of 3]-Minibatch[  59-  59, 59.00%]: CE = 6.44515991 * 16; Err = 1.00000000 * 16; time = 0.1750s; samplesPerSecond = 91.4
 Epoch[ 3 of 3]-Minibatch[  60-  60, 60.00%]: CE = 6.26992798 * 16; Err = 1.00000000 * 16; time = 0.1748s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  61-  61, 61.00%]: CE = 6.31164551 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  62-  62, 62.00%]: CE = 6.50906372 * 16; Err = 0.93750000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  63-  63, 63.00%]: CE = 6.38653564 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  64-  64, 64.00%]: CE = 6.55239868 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  65-  65, 65.00%]: CE = 6.54486084 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  66-  66, 66.00%]: CE = 6.19934082 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  67-  67, 67.00%]: CE = 6.37652588 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  68-  68, 68.00%]: CE = 6.11053467 * 16; Err = 1.00000000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  69-  69, 69.00%]: CE = 6.33468628 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  70-  70, 70.00%]: CE = 6.16256714 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  71-  71, 71.00%]: CE = 6.28308105 * 16; Err = 1.00000000 * 16; time = 0.1741s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  72-  72, 72.00%]: CE = 6.29302979 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  73-  73, 73.00%]: CE = 6.53277588 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  74-  74, 74.00%]: CE = 6.33432007 * 16; Err = 1.00000000 * 16; time = 0.1752s; samplesPerSecond = 91.3
 Epoch[ 3 of 3]-Minibatch[  75-  75, 75.00%]: CE = 6.18795776 * 16; Err = 1.00000000 * 16; time = 0.1757s; samplesPerSecond = 91.1
 Epoch[ 3 of 3]-Minibatch[  76-  76, 76.00%]: CE = 6.24914551 * 16; Err = 1.00000000 * 16; time = 0.2301s; samplesPerSecond = 69.5
 Epoch[ 3 of 3]-Minibatch[  77-  77, 77.00%]: CE = 6.29995728 * 16; Err = 1.00000000 * 16; time = 0.2303s; samplesPerSecond = 69.5
 Epoch[ 3 of 3]-Minibatch[  78-  78, 78.00%]: CE = 6.30899048 * 16; Err = 1.00000000 * 16; time = 0.2306s; samplesPerSecond = 69.4
 Epoch[ 3 of 3]-Minibatch[  79-  79, 79.00%]: CE = 6.38751221 * 16; Err = 1.00000000 * 16; time = 0.2311s; samplesPerSecond = 69.2
 Epoch[ 3 of 3]-Minibatch[  80-  80, 80.00%]: CE = 6.51913452 * 16; Err = 1.00000000 * 16; time = 0.2302s; samplesPerSecond = 69.5
 Epoch[ 3 of 3]-Minibatch[  81-  81, 81.00%]: CE = 6.63824463 * 16; Err = 1.00000000 * 16; time = 0.2299s; samplesPerSecond = 69.6
 Epoch[ 3 of 3]-Minibatch[  82-  82, 82.00%]: CE = 6.33746338 * 16; Err = 1.00000000 * 16; time = 0.2306s; samplesPerSecond = 69.4
 Epoch[ 3 of 3]-Minibatch[  83-  83, 83.00%]: CE = 6.42596436 * 16; Err = 1.00000000 * 16; time = 0.2300s; samplesPerSecond = 69.6
 Epoch[ 3 of 3]-Minibatch[  84-  84, 84.00%]: CE = 6.45526123 * 16; Err = 1.00000000 * 16; time = 0.2308s; samplesPerSecond = 69.3
 Epoch[ 3 of 3]-Minibatch[  85-  85, 85.00%]: CE = 6.46240234 * 16; Err = 1.00000000 * 16; time = 0.2303s; samplesPerSecond = 69.5
 Epoch[ 3 of 3]-Minibatch[  86-  86, 86.00%]: CE = 6.47045898 * 16; Err = 1.00000000 * 16; time = 0.2306s; samplesPerSecond = 69.4
 Epoch[ 3 of 3]-Minibatch[  87-  87, 87.00%]: CE = 6.21990967 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  88-  88, 88.00%]: CE = 6.56420898 * 16; Err = 1.00000000 * 16; time = 0.1743s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  89-  89, 89.00%]: CE = 6.16821289 * 16; Err = 0.93750000 * 16; time = 0.1747s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  90-  90, 90.00%]: CE = 6.34082031 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  91-  91, 91.00%]: CE = 6.49438477 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  92-  92, 92.00%]: CE = 6.34606934 * 16; Err = 1.00000000 * 16; time = 0.1745s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  93-  93, 93.00%]: CE = 6.32470703 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  94-  94, 94.00%]: CE = 6.49566650 * 16; Err = 0.93750000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[  95-  95, 95.00%]: CE = 6.35668945 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.9
 Epoch[ 3 of 3]-Minibatch[  96-  96, 96.00%]: CE = 6.45947266 * 16; Err = 1.00000000 * 16; time = 0.1749s; samplesPerSecond = 91.5
 Epoch[ 3 of 3]-Minibatch[  97-  97, 97.00%]: CE = 6.38092041 * 16; Err = 1.00000000 * 16; time = 0.1742s; samplesPerSecond = 91.8
 Epoch[ 3 of 3]-Minibatch[  98-  98, 98.00%]: CE = 6.09057617 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.7
 Epoch[ 3 of 3]-Minibatch[  99-  99, 99.00%]: CE = 6.23388672 * 16; Err = 1.00000000 * 16; time = 0.1746s; samplesPerSecond = 91.6
 Epoch[ 3 of 3]-Minibatch[ 100- 100, 100.00%]: CE = 6.02416992 * 16; Err = 1.00000000 * 16; time = 0.1744s; samplesPerSecond = 91.8
Finished Epoch[ 3 of 3]: [Training] CE = 6.36278320 * 1600; Err = 0.99750000 * 1600; totalSamplesSeen = 4800; learningRatePerSample = 0.00062499999; epochTime=18.0739s
SGD: Saving checkpoint model './Output/alexnet/AlexNet'
CNTKCommandTrainEnd: Train

Action "train" complete.

__COMPLETED__
