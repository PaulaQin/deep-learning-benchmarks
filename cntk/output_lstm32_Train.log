-------------------------------------------------------------------
Build info: 

		Built time: Sep 27 2016 14:05:01
		Last modified date: Tue Sep 27 07:19:56 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.1
		Build Branch: HEAD
		Build SHA1: 2e4a773398b5ee84e1695abe73eb831c3cca1e36
		Built by philly on 9ab719fcc26d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
GPU info:

		Device[0]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[1]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[2]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[3]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[4]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[5]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[6]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
		Device[7]: cores = 2880; computeCapability = 3.5; type = "Tesla K40m"; memory = 11439 MB
-------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: rnn.cntk:command=train
configparameters: rnn.cntk:ConfigDir=rnn/PennTreebank/Config
configparameters: rnn.cntk:configName=lstm32
configparameters: rnn.cntk:confVocabSize=10000
configparameters: rnn.cntk:DataDir=rnn/PennTreebank/Data
configparameters: rnn.cntk:deviceId=0
configparameters: rnn.cntk:epochSize=163840
configparameters: rnn.cntk:maxEpochs=3
configparameters: rnn.cntk:maxTempMemSizeInSamplesForCNN=1
configparameters: rnn.cntk:minibatchSize=4096
configparameters: rnn.cntk:ModelDir=./Output/lstm32
configparameters: rnn.cntk:modelPath=./Output/lstm32/lstm32.dnn
configparameters: rnn.cntk:OutputDir=./Output
configparameters: rnn.cntk:precision=float
configparameters: rnn.cntk:RootDir=.
configparameters: rnn.cntk:stderr=./output_lstm32_Train.log
configparameters: rnn.cntk:traceLevel=1
configparameters: rnn.cntk:train=[
    action = "train"
    traceLevel = 1
epochSize = 0               
    BrainScriptNetworkBuilder = [
        inputDim = 10000
        labelDim = 10000
        embedDim = 256
        hiddenDim = (256:256)
        model(x) = [
            E = ParameterTensor (embedDim:inputDim)
            e = E * x
            h = RecurrentLSTMLayerStack (hiddenDim, allowOptimizedEngine = true)(e)
            W = ParameterTensor (labelDim:hiddenDim[1]) 
            b = ParameterTensor (labelDim,init='fixedValue',value=0);
            z = W * h + b
        ].z
        words  = if deviceId >= 0 then SparseInput (inputDim) else Input (inputDim)
        labels = Input (inputDim)
        z = model(words)
        crossEntropy = CrossEntropyWithSoftmax(labels, z)
        featureNodes    = (words)
        labelNodes      = (labels)
        criterionNodes  = (crossEntropy)
        evaluationNodes = (crossEntropy)
        outputNodes     = (z)
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "rnn/PennTreebank/Data/ptb.train.32.ctf"
        randomize = false
        traceLevel = 0
        input = [
            words  = [ alias = "S0"; dim = 10000; format = "sparse" ]
            labels = [ alias = "S1"; dim = 10000; format = "sparse" ]
        ]
    ]
    SGD = [
        epochSize=163840
        minibatchSize = 4096 
        learningRatesPerSample = 0.0001
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 3 
        numMBsToShowResult = 1
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
]

configparameters: rnn.cntk:trainFile=ptb.train.32.ctf
Commands: train
precision = "float"

##############################################################################
#                                                                            #
# train command (train action)                                               #
#                                                                            #
##############################################################################


Creating virgin network.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[0 x 0] as glorotUniform later when dimensions are fully known.

Post-processing network...

2 roots:
	crossEntropy = CrossEntropyWithSoftmax()
	z = Plus()

Validating network. 11 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10000 x *]
Validating --> z.W = LearnableParameter() :  -> [10000 x 256]
Validating --> z.h.W = LearnableParameter() :  -> [0 x 0]
Validating --> _z.E = LearnableParameter() :  -> [256 x 10000]
Validating --> words = SparseInputValue() :  -> [10000 x *]
Validating --> z.e = Times (_z.E, words) : [256 x 10000], [10000 x *] -> [256 x *]
Node 'z.h.W' (LearnableParameter operation) operation: Tensor shape was inferred as [256 x 4112].
Node 'z.h.W' (LearnableParameter operation): Initializing Parameter[256 x 4112] <- glorotUniform(seed=2, init dims=[4112 x 256], range=0.037062*1.000000, onCPU=true.
)Validating --> z.h = OptimizedRNNStack (z.h.W, z.e) : [256 x 4112], [256 x *] -> [256 x *]
Validating --> z.z.PlusArgs[0] = Times (z.W, z.h) : [10000 x 256], [256 x *] -> [10000 x *]
Validating --> z.b = LearnableParameter() :  -> [10000]
Validating --> z = Plus (z.z.PlusArgs[0], z.b) : [10000 x *], [10000] -> [10000 x *]
Validating --> crossEntropy = CrossEntropyWithSoftmax (labels, z) : [10000 x *], [10000 x *] -> [1]

Validating network. 5 nodes to process in pass 2.


Validating network, final pass.




Post-processing network complete.


Model has 11 nodes. Using GPU 0.

Training criterion:   crossEntropy = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 20 matrices, 6 are shared as 3, and 14 are not shared.

	{ z.h.W : [256 x 4112] (gradient)
	  z.z.PlusArgs[0] : [10000 x *] }
	{ z : [10000 x *] (gradient)
	  z.W : [10000 x 256] (gradient) }
	{ z.e : [256 x *] (gradient)
	  z.z.PlusArgs[0] : [10000 x *] (gradient) }


Training 6182672 parameters in 4 out of 4 parameter tensors and 9 nodes with gradient:

	Node '_z.E' (LearnableParameter operation) : [256 x 10000]
	Node 'z.W' (LearnableParameter operation) : [10000 x 256]
	Node 'z.b' (LearnableParameter operation) : [10000]
	Node 'z.h.W' (LearnableParameter operation) : [256 x 4112]

No PreCompute nodes found, or all already computed. Skipping pre-computation step.
Setting max temp memory size for Convolution operations to 1 samples.
WARNING: No Convolution operation found.

Starting Epoch 1: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 1 of 3]-Minibatch[   1-   1, 2.50%]: crossEntropy = 9.20927389 * 4095; time = 0.8821s; samplesPerSecond = 4642.1
 Epoch[ 1 of 3]-Minibatch[   2-   2, 5.00%]: crossEntropy = 9.20369530 * 4096; time = 0.0805s; samplesPerSecond = 50890.8
 Epoch[ 1 of 3]-Minibatch[   3-   3, 7.50%]: crossEntropy = 9.19621468 * 4096; time = 0.0756s; samplesPerSecond = 54173.4
 Epoch[ 1 of 3]-Minibatch[   4-   4, 10.00%]: crossEntropy = 9.19109535 * 4096; time = 0.0759s; samplesPerSecond = 53972.1
 Epoch[ 1 of 3]-Minibatch[   5-   5, 12.50%]: crossEntropy = 9.18561935 * 4096; time = 0.0756s; samplesPerSecond = 54165.6
 Epoch[ 1 of 3]-Minibatch[   6-   6, 15.00%]: crossEntropy = 9.17995834 * 4096; time = 0.0766s; samplesPerSecond = 53481.0
 Epoch[ 1 of 3]-Minibatch[   7-   7, 17.50%]: crossEntropy = 9.17127609 * 4096; time = 0.0759s; samplesPerSecond = 53988.5
 Epoch[ 1 of 3]-Minibatch[   8-   8, 20.00%]: crossEntropy = 9.17122650 * 4096; time = 0.0764s; samplesPerSecond = 53596.4
 Epoch[ 1 of 3]-Minibatch[   9-   9, 22.50%]: crossEntropy = 9.15904999 * 4096; time = 0.0759s; samplesPerSecond = 53940.9
WARNING: The same matrix with dim [1, 4096] has been transferred between different devices for 20 times.
 Epoch[ 1 of 3]-Minibatch[  10-  10, 25.00%]: crossEntropy = 9.15618134 * 4096; time = 0.0754s; samplesPerSecond = 54334.4
 Epoch[ 1 of 3]-Minibatch[  11-  11, 27.50%]: crossEntropy = 9.14989471 * 4096; time = 0.0753s; samplesPerSecond = 54389.2
 Epoch[ 1 of 3]-Minibatch[  12-  12, 30.00%]: crossEntropy = 9.14336395 * 4096; time = 0.0759s; samplesPerSecond = 54000.6
 Epoch[ 1 of 3]-Minibatch[  13-  13, 32.50%]: crossEntropy = 9.13408661 * 4096; time = 0.0760s; samplesPerSecond = 53891.2
 Epoch[ 1 of 3]-Minibatch[  14-  14, 35.00%]: crossEntropy = 9.13697815 * 4096; time = 0.0764s; samplesPerSecond = 53609.8
 Epoch[ 1 of 3]-Minibatch[  15-  15, 37.50%]: crossEntropy = 9.12834167 * 4096; time = 0.0765s; samplesPerSecond = 53536.2
 Epoch[ 1 of 3]-Minibatch[  16-  16, 40.00%]: crossEntropy = 9.12258911 * 4096; time = 0.0761s; samplesPerSecond = 53811.2
 Epoch[ 1 of 3]-Minibatch[  17-  17, 42.50%]: crossEntropy = 9.11289978 * 4096; time = 0.0755s; samplesPerSecond = 54280.4
 Epoch[ 1 of 3]-Minibatch[  18-  18, 45.00%]: crossEntropy = 9.11114502 * 4096; time = 0.0755s; samplesPerSecond = 54264.6
 Epoch[ 1 of 3]-Minibatch[  19-  19, 47.50%]: crossEntropy = 9.10060120 * 4096; time = 0.0751s; samplesPerSecond = 54552.2
 Epoch[ 1 of 3]-Minibatch[  20-  20, 50.00%]: crossEntropy = 9.09770203 * 4096; time = 0.0779s; samplesPerSecond = 52602.5
 Epoch[ 1 of 3]-Minibatch[  21-  21, 52.50%]: crossEntropy = 9.08645630 * 4096; time = 0.0764s; samplesPerSecond = 53602.0
 Epoch[ 1 of 3]-Minibatch[  22-  22, 55.00%]: crossEntropy = 9.06845093 * 4096; time = 0.0762s; samplesPerSecond = 53723.0
 Epoch[ 1 of 3]-Minibatch[  23-  23, 57.50%]: crossEntropy = 9.05659485 * 4096; time = 0.0762s; samplesPerSecond = 53786.5
 Epoch[ 1 of 3]-Minibatch[  24-  24, 60.00%]: crossEntropy = 9.05711365 * 4096; time = 0.0755s; samplesPerSecond = 54220.8
 Epoch[ 1 of 3]-Minibatch[  25-  25, 62.50%]: crossEntropy = 9.05500793 * 4096; time = 0.0754s; samplesPerSecond = 54292.6
 Epoch[ 1 of 3]-Minibatch[  26-  26, 65.00%]: crossEntropy = 9.03753662 * 4096; time = 0.0756s; samplesPerSecond = 54174.9
 Epoch[ 1 of 3]-Minibatch[  27-  27, 67.50%]: crossEntropy = 9.02828979 * 4096; time = 0.0756s; samplesPerSecond = 54174.9
 Epoch[ 1 of 3]-Minibatch[  28-  28, 70.00%]: crossEntropy = 9.05099487 * 4096; time = 0.0761s; samplesPerSecond = 53839.5
 Epoch[ 1 of 3]-Minibatch[  29-  29, 72.50%]: crossEntropy = 9.00811768 * 4096; time = 0.0761s; samplesPerSecond = 53840.2
 Epoch[ 1 of 3]-Minibatch[  30-  30, 75.00%]: crossEntropy = 9.01559448 * 4096; time = 0.0758s; samplesPerSecond = 54024.8
 Epoch[ 1 of 3]-Minibatch[  31-  31, 77.50%]: crossEntropy = 9.00183105 * 4096; time = 0.0754s; samplesPerSecond = 54358.9
 Epoch[ 1 of 3]-Minibatch[  32-  32, 80.00%]: crossEntropy = 8.99752808 * 4096; time = 0.0755s; samplesPerSecond = 54221.5
 Epoch[ 1 of 3]-Minibatch[  33-  33, 82.50%]: crossEntropy = 8.99371338 * 4096; time = 0.0761s; samplesPerSecond = 53852.9
 Epoch[ 1 of 3]-Minibatch[  34-  34, 85.00%]: crossEntropy = 8.98388672 * 4096; time = 0.0760s; samplesPerSecond = 53922.4
 Epoch[ 1 of 3]-Minibatch[  35-  35, 87.50%]: crossEntropy = 8.96182251 * 4096; time = 0.0757s; samplesPerSecond = 54077.6
 Epoch[ 1 of 3]-Minibatch[  36-  36, 90.00%]: crossEntropy = 8.96685791 * 4096; time = 0.0762s; samplesPerSecond = 53780.1
 Epoch[ 1 of 3]-Minibatch[  37-  37, 92.50%]: crossEntropy = 8.95520020 * 4096; time = 0.0772s; samplesPerSecond = 53048.1
 Epoch[ 1 of 3]-Minibatch[  38-  38, 95.00%]: crossEntropy = 8.94937134 * 4096; time = 0.0755s; samplesPerSecond = 54233.0
 Epoch[ 1 of 3]-Minibatch[  39-  39, 97.50%]: crossEntropy = 8.93225098 * 4096; time = 0.0761s; samplesPerSecond = 53796.3
 Epoch[ 1 of 3]-Minibatch[  40-  40, 100.00%]: crossEntropy = 8.91845703 * 4096; time = 0.0760s; samplesPerSecond = 53926.0
 Epoch[ 1 of 3]-Minibatch[  41-  41, 102.50%]: crossEntropy = 8.88778687 * 4096; time = 0.0739s; samplesPerSecond = 55397.0
Finished Epoch[ 1 of 3]: [Training] crossEntropy = 9.07497618 * 167935; totalSamplesSeen = 167935; learningRatePerSample = 9.9999997e-05; epochTime=3.92511s
SGD: Saving checkpoint model './Output/lstm32/lstm32.dnn.1'

Starting Epoch 2: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 2 of 3]-Minibatch[   1-   1, 2.50%]: crossEntropy = 8.87027073 * 4096; time = 0.0783s; samplesPerSecond = 52293.6
 Epoch[ 2 of 3]-Minibatch[   2-   2, 5.00%]: crossEntropy = 8.83933735 * 4096; time = 0.0759s; samplesPerSecond = 53985.7
 Epoch[ 2 of 3]-Minibatch[   3-   3, 7.50%]: crossEntropy = 8.82030296 * 4096; time = 0.0759s; samplesPerSecond = 53952.9
 Epoch[ 2 of 3]-Minibatch[   4-   4, 10.00%]: crossEntropy = 8.83707047 * 4096; time = 0.0755s; samplesPerSecond = 54258.8
 Epoch[ 2 of 3]-Minibatch[   5-   5, 12.50%]: crossEntropy = 8.80454254 * 4096; time = 0.0754s; samplesPerSecond = 54330.8
 Epoch[ 2 of 3]-Minibatch[   6-   6, 15.00%]: crossEntropy = 8.80973434 * 4096; time = 0.0760s; samplesPerSecond = 53919.6
 Epoch[ 2 of 3]-Minibatch[   7-   7, 17.50%]: crossEntropy = 8.78159332 * 4096; time = 0.0763s; samplesPerSecond = 53711.7
 Epoch[ 2 of 3]-Minibatch[   8-   8, 20.00%]: crossEntropy = 8.66469193 * 4096; time = 0.0760s; samplesPerSecond = 53909.6
 Epoch[ 2 of 3]-Minibatch[   9-   9, 22.50%]: crossEntropy = 8.66161346 * 4096; time = 0.0762s; samplesPerSecond = 53782.2
 Epoch[ 2 of 3]-Minibatch[  10-  10, 25.00%]: crossEntropy = 8.63969421 * 4096; time = 0.0759s; samplesPerSecond = 53951.5
 Epoch[ 2 of 3]-Minibatch[  11-  11, 27.50%]: crossEntropy = 8.62013245 * 4096; time = 0.0751s; samplesPerSecond = 54553.0
 Epoch[ 2 of 3]-Minibatch[  12-  12, 30.00%]: crossEntropy = 8.55628204 * 4096; time = 0.0753s; samplesPerSecond = 54377.0
 Epoch[ 2 of 3]-Minibatch[  13-  13, 32.50%]: crossEntropy = 8.46483612 * 4096; time = 0.0753s; samplesPerSecond = 54391.4
 Epoch[ 2 of 3]-Minibatch[  14-  14, 35.00%]: crossEntropy = 8.31842804 * 4096; time = 0.0756s; samplesPerSecond = 54194.2
 Epoch[ 2 of 3]-Minibatch[  15-  15, 37.50%]: crossEntropy = 8.23555756 * 4096; time = 0.0759s; samplesPerSecond = 53987.8
 Epoch[ 2 of 3]-Minibatch[  16-  16, 40.00%]: crossEntropy = 8.20440674 * 4096; time = 0.0762s; samplesPerSecond = 53782.2
 Epoch[ 2 of 3]-Minibatch[  17-  17, 42.50%]: crossEntropy = 7.96798706 * 4096; time = 0.0759s; samplesPerSecond = 53968.6
 Epoch[ 2 of 3]-Minibatch[  18-  18, 45.00%]: crossEntropy = 7.98518372 * 4096; time = 0.0754s; samplesPerSecond = 54359.7
 Epoch[ 2 of 3]-Minibatch[  19-  19, 47.50%]: crossEntropy = 7.83248901 * 4096; time = 0.0757s; samplesPerSecond = 54096.2
 Epoch[ 2 of 3]-Minibatch[  20-  20, 50.00%]: crossEntropy = 7.89746094 * 4096; time = 0.0753s; samplesPerSecond = 54366.9
 Epoch[ 2 of 3]-Minibatch[  21-  21, 52.50%]: crossEntropy = 7.86932373 * 4096; time = 0.0761s; samplesPerSecond = 53808.4
 Epoch[ 2 of 3]-Minibatch[  22-  22, 55.00%]: crossEntropy = 7.82795715 * 4096; time = 0.0762s; samplesPerSecond = 53782.9
 Epoch[ 2 of 3]-Minibatch[  23-  23, 57.50%]: crossEntropy = 7.69038391 * 4096; time = 0.0775s; samplesPerSecond = 52831.2
 Epoch[ 2 of 3]-Minibatch[  24-  24, 60.00%]: crossEntropy = 7.68472290 * 4096; time = 0.0760s; samplesPerSecond = 53913.9
 Epoch[ 2 of 3]-Minibatch[  25-  25, 62.50%]: crossEntropy = 7.56983948 * 4096; time = 0.0755s; samplesPerSecond = 54238.7
 Epoch[ 2 of 3]-Minibatch[  26-  26, 65.00%]: crossEntropy = 7.70809937 * 4096; time = 0.0754s; samplesPerSecond = 54346.0
 Epoch[ 2 of 3]-Minibatch[  27-  27, 67.50%]: crossEntropy = 7.65151978 * 4096; time = 0.0758s; samplesPerSecond = 54029.1
 Epoch[ 2 of 3]-Minibatch[  28-  28, 70.00%]: crossEntropy = 7.56970215 * 4096; time = 0.0754s; samplesPerSecond = 54353.2
 Epoch[ 2 of 3]-Minibatch[  29-  29, 72.50%]: crossEntropy = 7.51080322 * 4096; time = 0.0761s; samplesPerSecond = 53833.8
 Epoch[ 2 of 3]-Minibatch[  30-  30, 75.00%]: crossEntropy = 7.50158691 * 4096; time = 0.0765s; samplesPerSecond = 53567.7
 Epoch[ 2 of 3]-Minibatch[  31-  31, 77.50%]: crossEntropy = 7.56159973 * 4096; time = 0.0760s; samplesPerSecond = 53923.1
 Epoch[ 2 of 3]-Minibatch[  32-  32, 80.00%]: crossEntropy = 7.52713013 * 4096; time = 0.0752s; samplesPerSecond = 54460.1
 Epoch[ 2 of 3]-Minibatch[  33-  33, 82.50%]: crossEntropy = 7.34661865 * 4096; time = 0.0754s; samplesPerSecond = 54356.8
 Epoch[ 2 of 3]-Minibatch[  34-  34, 85.00%]: crossEntropy = 7.50900269 * 4096; time = 0.0757s; samplesPerSecond = 54114.0
 Epoch[ 2 of 3]-Minibatch[  35-  35, 87.50%]: crossEntropy = 7.30340576 * 4096; time = 0.0756s; samplesPerSecond = 54206.4
 Epoch[ 2 of 3]-Minibatch[  36-  36, 90.00%]: crossEntropy = 7.38677979 * 4096; time = 0.0765s; samplesPerSecond = 53565.6
 Epoch[ 2 of 3]-Minibatch[  37-  37, 92.50%]: crossEntropy = 7.43060303 * 4096; time = 0.0761s; samplesPerSecond = 53840.2
 Epoch[ 2 of 3]-Minibatch[  38-  38, 95.00%]: crossEntropy = 7.45831299 * 4096; time = 0.0766s; samplesPerSecond = 53466.3
 Epoch[ 2 of 3]-Minibatch[  39-  39, 97.50%]: crossEntropy = 7.37881470 * 4096; time = 0.0756s; samplesPerSecond = 54155.5
 Epoch[ 2 of 3]-Minibatch[  40-  40, 100.00%]: crossEntropy = 7.24157715 * 4096; time = 0.0738s; samplesPerSecond = 55530.7
Finished Epoch[ 2 of 3]: [Training] crossEntropy = 8.01348495 * 163840; totalSamplesSeen = 331775; learningRatePerSample = 9.9999997e-05; epochTime=3.03619s
SGD: Saving checkpoint model './Output/lstm32/lstm32.dnn.2'

Starting Epoch 3: learning rate per sample = 0.000100  effective momentum = 0.000000  momentum as time constant = 0.0 samples

Starting minibatch loop.
 Epoch[ 3 of 3]-Minibatch[   1-   1, 2.50%]: crossEntropy = 7.40361023 * 4096; time = 0.0783s; samplesPerSecond = 52336.4
 Epoch[ 3 of 3]-Minibatch[   2-   2, 5.00%]: crossEntropy = 7.42620087 * 4096; time = 0.0753s; samplesPerSecond = 54364.0
 Epoch[ 3 of 3]-Minibatch[   3-   3, 7.50%]: crossEntropy = 7.34990311 * 4096; time = 0.0761s; samplesPerSecond = 53831.7
 Epoch[ 3 of 3]-Minibatch[   4-   4, 10.00%]: crossEntropy = 7.33720016 * 4096; time = 0.0763s; samplesPerSecond = 53677.2
 Epoch[ 3 of 3]-Minibatch[   5-   5, 12.50%]: crossEntropy = 7.14833069 * 4096; time = 0.0760s; samplesPerSecond = 53892.6
 Epoch[ 3 of 3]-Minibatch[   6-   6, 15.00%]: crossEntropy = 7.19277954 * 4096; time = 0.0754s; samplesPerSecond = 54289.0
 Epoch[ 3 of 3]-Minibatch[   7-   7, 17.50%]: crossEntropy = 7.20536041 * 4096; time = 0.0753s; samplesPerSecond = 54415.3
 Epoch[ 3 of 3]-Minibatch[   8-   8, 20.00%]: crossEntropy = 7.14846039 * 4096; time = 0.0750s; samplesPerSecond = 54607.5
 Epoch[ 3 of 3]-Minibatch[   9-   9, 22.50%]: crossEntropy = 7.07700348 * 4096; time = 0.0753s; samplesPerSecond = 54362.5
 Epoch[ 3 of 3]-Minibatch[  10-  10, 25.00%]: crossEntropy = 7.07684326 * 4096; time = 0.0758s; samplesPerSecond = 54044.8
 Epoch[ 3 of 3]-Minibatch[  11-  11, 27.50%]: crossEntropy = 7.24245453 * 4096; time = 0.0762s; samplesPerSecond = 53766.0
 Epoch[ 3 of 3]-Minibatch[  12-  12, 30.00%]: crossEntropy = 7.20939636 * 4096; time = 0.0768s; samplesPerSecond = 53357.0
 Epoch[ 3 of 3]-Minibatch[  13-  13, 32.50%]: crossEntropy = 7.03676605 * 4096; time = 0.0749s; samplesPerSecond = 54699.4
 Epoch[ 3 of 3]-Minibatch[  14-  14, 35.00%]: crossEntropy = 7.15612793 * 4096; time = 0.0752s; samplesPerSecond = 54453.6
 Epoch[ 3 of 3]-Minibatch[  15-  15, 37.50%]: crossEntropy = 7.13385773 * 4096; time = 0.0757s; samplesPerSecond = 54086.9
 Epoch[ 3 of 3]-Minibatch[  16-  16, 40.00%]: crossEntropy = 7.07558441 * 4096; time = 0.0760s; samplesPerSecond = 53880.6
 Epoch[ 3 of 3]-Minibatch[  17-  17, 42.50%]: crossEntropy = 7.17377472 * 4096; time = 0.0765s; samplesPerSecond = 53541.1
 Epoch[ 3 of 3]-Minibatch[  18-  18, 45.00%]: crossEntropy = 7.16129303 * 4096; time = 0.0764s; samplesPerSecond = 53623.8
 Epoch[ 3 of 3]-Minibatch[  19-  19, 47.50%]: crossEntropy = 7.03399658 * 4096; time = 0.0760s; samplesPerSecond = 53916.0
 Epoch[ 3 of 3]-Minibatch[  20-  20, 50.00%]: crossEntropy = 7.14486694 * 4096; time = 0.0750s; samplesPerSecond = 54637.4
 Epoch[ 3 of 3]-Minibatch[  21-  21, 52.50%]: crossEntropy = 7.21153259 * 4096; time = 0.0754s; samplesPerSecond = 54325.8
 Epoch[ 3 of 3]-Minibatch[  22-  22, 55.00%]: crossEntropy = 7.12847900 * 4096; time = 0.0756s; samplesPerSecond = 54157.0
 Epoch[ 3 of 3]-Minibatch[  23-  23, 57.50%]: crossEntropy = 7.17080688 * 4096; time = 0.0752s; samplesPerSecond = 54481.1
 Epoch[ 3 of 3]-Minibatch[  24-  24, 60.00%]: crossEntropy = 7.11393738 * 4096; time = 0.0767s; samplesPerSecond = 53375.7
 Epoch[ 3 of 3]-Minibatch[  25-  25, 62.50%]: crossEntropy = 7.09536743 * 4096; time = 0.0763s; samplesPerSecond = 53670.2
 Epoch[ 3 of 3]-Minibatch[  26-  26, 65.00%]: crossEntropy = 7.14361572 * 4096; time = 0.0761s; samplesPerSecond = 53857.9
 Epoch[ 3 of 3]-Minibatch[  27-  27, 67.50%]: crossEntropy = 7.07765198 * 4096; time = 0.0758s; samplesPerSecond = 54066.2
 Epoch[ 3 of 3]-Minibatch[  28-  28, 70.00%]: crossEntropy = 7.18395996 * 4096; time = 0.0755s; samplesPerSecond = 54228.0
 Epoch[ 3 of 3]-Minibatch[  29-  29, 72.50%]: crossEntropy = 7.00756836 * 4096; time = 0.0750s; samplesPerSecond = 54607.5
 Epoch[ 3 of 3]-Minibatch[  30-  30, 75.00%]: crossEntropy = 7.11543274 * 4096; time = 0.0762s; samplesPerSecond = 53739.2
 Epoch[ 3 of 3]-Minibatch[  31-  31, 77.50%]: crossEntropy = 7.08692932 * 4096; time = 0.0760s; samplesPerSecond = 53865.7
 Epoch[ 3 of 3]-Minibatch[  32-  32, 80.00%]: crossEntropy = 6.96728516 * 4096; time = 0.0765s; samplesPerSecond = 53560.0
 Epoch[ 3 of 3]-Minibatch[  33-  33, 82.50%]: crossEntropy = 7.06449890 * 4096; time = 0.0760s; samplesPerSecond = 53901.1
 Epoch[ 3 of 3]-Minibatch[  34-  34, 85.00%]: crossEntropy = 7.19935608 * 4096; time = 0.0751s; samplesPerSecond = 54538.4
 Epoch[ 3 of 3]-Minibatch[  35-  35, 87.50%]: crossEntropy = 7.02090454 * 4096; time = 0.0752s; samplesPerSecond = 54455.1
 Epoch[ 3 of 3]-Minibatch[  36-  36, 90.00%]: crossEntropy = 6.94738770 * 4096; time = 0.0753s; samplesPerSecond = 54362.5
 Epoch[ 3 of 3]-Minibatch[  37-  37, 92.50%]: crossEntropy = 6.93969727 * 4096; time = 0.0764s; samplesPerSecond = 53605.5
 Epoch[ 3 of 3]-Minibatch[  38-  38, 95.00%]: crossEntropy = 6.91293335 * 4096; time = 0.0761s; samplesPerSecond = 53847.3
 Epoch[ 3 of 3]-Minibatch[  39-  39, 97.50%]: crossEntropy = 6.87200928 * 4096; time = 0.0766s; samplesPerSecond = 53486.6
 Epoch[ 3 of 3]-Minibatch[  40-  40, 100.00%]: crossEntropy = 6.88589478 * 4096; time = 0.0747s; samplesPerSecond = 54862.0
Finished Epoch[ 3 of 3]: [Training] crossEntropy = 7.12197647 * 163840; totalSamplesSeen = 495615; learningRatePerSample = 9.9999997e-05; epochTime=3.03544s
SGD: Saving checkpoint model './Output/lstm32/lstm32.dnn'

Action "train" complete.

COMPLETED.
